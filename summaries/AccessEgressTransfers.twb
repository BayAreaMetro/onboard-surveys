<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0520.1152                                -->
<workbook source-build='9.3.2 (9300.16.0520.1152)' source-platform='win' version='9.3' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='AccessEgressTransfers' path='/workbooks' revision='2.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' inline='true' name='csv.41558.498367719905' version='9.3'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau' driver='' filename='AccessEgressTransfers.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='AccessEgressTransfers#csv' table='[AccessEgressTransfers#csv]' type='table' />
        <refresh incremental-updates='' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>access_mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[access_mode]</local-name>
            <parent-name>[AccessEgressTransfers#csv]</parent-name>
            <remote-alias>access_mode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boardings</remote-name>
            <remote-type>3</remote-type>
            <local-name>[boardings]</local-name>
            <parent-name>[AccessEgressTransfers#csv]</parent-name>
            <remote-alias>boardings</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>egress_mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[egress_mode]</local-name>
            <parent-name>[AccessEgressTransfers#csv]</parent-name>
            <remote-alias>egress_mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>3</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[AccessEgressTransfers#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[AccessEgressTransfers#csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[AccessEgressTransfers#csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[AccessEgressTransfers#csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[AccessEgressTransfers#csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Bike at one end&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Top Ten Index' datatype='integer' name='[Calculation_492299755485048832]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transfers' datatype='string' name='[Calculation_7970221122403174]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Access' datatype='string' name='[access_mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;bike&quot;' value='Bike' />
          <alias key='&quot;knr&quot;' value='Dropped off' />
          <alias key='&quot;pnr&quot;' value='Drive and park' />
          <alias key='&quot;walk&quot;' value='Walk' />
        </aliases>
      </column>
      <column caption='Egress' datatype='string' name='[egress_mode]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;.&quot;' value='Missing' />
          <alias key='&quot;bike&quot;' value='Bike' />
          <alias key='&quot;knr&quot;' value='Picked up' />
          <alias key='&quot;pnr&quot;' value='Drive' />
          <alias key='&quot;walk&quot;' value='Walk' />
        </aliases>
      </column>
      <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
          <alias key='&quot;WEEKEND&quot;' value='Weekend' />
        </aliases>
      </column>
      <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_492299755485048832]' derivation='User' name='[usr:Calculation_492299755485048832:ok:2]' pivot='key' type='ordinal'>
        <table-calc ordering-field='[csv.41558.498367719905].[none:operator:nk]' ordering-type='Field' />
      </column-instance>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Legacy\Data summaries\AccessEgressTransfers#csv (AccessEgressTransfersDepart.csv).tde' schema='Extract' tablename='Extract' update-time='03/25/2016 04:28:15 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3000224114639164]' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' />
            <calculation column='[Calculation_7970221122403174]' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='588' timestamp-start='2016-03-25 16:28:15.712' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>access_mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[access_mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>access_mode</remote-alias>
              <ordinal>1</ordinal>
              <family>AccessEgressTransfers#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Missing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;walk&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>boardings</remote-name>
              <remote-type>16</remote-type>
              <local-name>[boardings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>boardings</remote-alias>
              <ordinal>2</ordinal>
              <family>AccessEgressTransfers#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>6</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>egress_mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[egress_mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>egress_mode</remote-alias>
              <ordinal>3</ordinal>
              <family>AccessEgressTransfers#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;walk&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>4</ordinal>
              <family>AccessEgressTransfers#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>124</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>12922</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>5</ordinal>
              <family>AccessEgressTransfers#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>6</ordinal>
              <family>AccessEgressTransfers#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>569</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0096677240000000008</statistic>
                <statistic aggregation='Max' datatype='real'>148388.29434055299</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>7</ordinal>
              <family>AccessEgressTransfers#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>8</ordinal>
              <family>AccessEgressTransfers#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>546</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.019335448000000002</statistic>
                <statistic aggregation='Max' datatype='real'>148388.29434055299</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_3000224114639164</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_3000224114639164]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_3000224114639164</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bike at one end&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Walk at both ends&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_7970221122403174</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_7970221122403174]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_7970221122403174</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>6</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>24</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.500509' measure-ordering='alphabetic' measure-percentage='0.499491' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_492299755485048832:ok:2]' type='palette'>
            <map to='#1f77b4'>
              <bucket>4</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>13</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>11</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>15</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>8</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>3</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>5</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>12</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>9</bucket>
            </map>
            <map to='#d62728'>
              <bucket>6</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>16</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>1</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>7</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>10</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>14</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Acc &amp; Egr Details.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Access' datatype='string' name='[access_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Dropped off' />
                <alias key='&quot;pnr&quot;' value='Drive and park' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[egress_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;.&quot;' value='Missing' />
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Picked up' />
                <alias key='&quot;pnr&quot;' value='Drive' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[access_mode]' derivation='None' name='[none:access_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[egress_mode]' derivation='None' name='[none:egress_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41558.498367719905].[none:access_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41558.498367719905].[none:egress_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:egress_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41558.498367719905].[none:egress_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41558.498367719905].[none:egress_mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='49' />
            <format attr='width' field='[csv.41558.498367719905].[none:egress_mode:nk]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:egress_mode:nk]' value='72' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>([csv.41558.498367719905].[none:access_mode:nk] / [csv.41558.498367719905].[none:egress_mode:nk])</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Acc &amp; Egr Details.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Access' datatype='string' name='[access_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Dropped off' />
                <alias key='&quot;pnr&quot;' value='Drive and park' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[egress_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;.&quot;' value='Missing' />
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Picked up' />
                <alias key='&quot;pnr&quot;' value='Drive' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column-instance column='[access_mode]' derivation='None' name='[none:access_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[egress_mode]' derivation='None' name='[none:egress_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41558.498367719905].[none:access_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:access_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41558.498367719905].[none:access_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41558.498367719905].[none:egress_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:egress_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41558.498367719905].[none:egress_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41558.498367719905].[none:egress_mode:nk]</column>
            <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='49' />
            <format attr='width' field='[csv.41558.498367719905].[none:egress_mode:nk]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:egress_mode:nk]' value='72' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>([csv.41558.498367719905].[none:access_mode:nk] / [csv.41558.498367719905].[none:egress_mode:nk])</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Acc &amp; Egr Details.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Access' datatype='string' name='[access_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Dropped off' />
                <alias key='&quot;pnr&quot;' value='Drive and park' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[egress_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;.&quot;' value='Missing' />
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Picked up' />
                <alias key='&quot;pnr&quot;' value='Drive' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column-instance column='[access_mode]' derivation='None' name='[none:access_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[egress_mode]' derivation='None' name='[none:egress_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41558.498367719905].[none:access_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41558.498367719905].[none:egress_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:egress_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[csv.41558.498367719905].[none:egress_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41558.498367719905].[none:egress_mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='49' />
            <format attr='width' field='[csv.41558.498367719905].[none:egress_mode:nk]' value='61' />
            <format attr='text-format' field='[csv.41558.498367719905].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:egress_mode:nk]' value='72' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>([csv.41558.498367719905].[none:access_mode:nk] / [csv.41558.498367719905].[none:egress_mode:nk])</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Access &amp; Egress.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Simple Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Bike at one end&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Access' datatype='string' name='[access_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Dropped off' />
                <alias key='&quot;pnr&quot;' value='Drive and park' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[egress_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;.&quot;' value='Missing' />
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Picked up' />
                <alias key='&quot;pnr&quot;' value='Drive' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3000224114639164]' derivation='None' name='[none:Calculation_3000224114639164:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk at both ends&quot;</bucket>
              <bucket>&quot;Drive and park at one end&quot;</bucket>
              <bucket>&quot;Drive and dropped off at one end&quot;</bucket>
              <bucket>&quot;Bike at one end&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='49' />
            <format attr='width' field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='120' />
            <format attr='height' field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' value='88' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Access &amp; Egress.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Simple Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Bike at one end&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Access' datatype='string' name='[access_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Dropped off' />
                <alias key='&quot;pnr&quot;' value='Drive and park' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[egress_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;.&quot;' value='Missing' />
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Picked up' />
                <alias key='&quot;pnr&quot;' value='Drive' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3000224114639164]' derivation='None' name='[none:Calculation_3000224114639164:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk at both ends&quot;</bucket>
              <bucket>&quot;Drive and park at one end&quot;</bucket>
              <bucket>&quot;Drive and dropped off at one end&quot;</bucket>
              <bucket>&quot;Bike at one end&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='49' />
            <format attr='width' field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='120' />
            <format attr='height' field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' value='88' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Access &amp; Egress.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Simple Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Bike at one end&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Access' datatype='string' name='[access_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Dropped off' />
                <alias key='&quot;pnr&quot;' value='Drive and park' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[egress_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;.&quot;' value='Missing' />
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Picked up' />
                <alias key='&quot;pnr&quot;' value='Drive' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3000224114639164]' derivation='None' name='[none:Calculation_3000224114639164:nk]' pivot='key' type='nominal' />
            <column-instance column='[egress_mode]' derivation='None' name='[none:egress_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk at both ends&quot;</bucket>
              <bucket>&quot;Drive and park at one end&quot;</bucket>
              <bucket>&quot;Drive and dropped off at one end&quot;</bucket>
              <bucket>&quot;Bike at one end&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41558.498367719905].[none:egress_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:egress_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41558.498367719905].[none:egress_mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='49' />
            <format attr='width' field='[csv.41558.498367719905].[none:egress_mode:nk]' value='64' />
            <format attr='width' field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' value='98' />
            <format attr='text-format' field='[csv.41558.498367719905].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:egress_mode:nk]' value='72' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='120' />
            <format attr='height' field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' value='88' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Top Ten-Bicycle Access/Egress'>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Bike at one end&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_492299755485048832]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Access' datatype='string' name='[access_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Dropped off' />
                <alias key='&quot;pnr&quot;' value='Drive and park' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column caption='Egress' datatype='string' name='[egress_mode]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;.&quot;' value='Missing' />
                <alias key='&quot;bike&quot;' value='Bike' />
                <alias key='&quot;knr&quot;' value='Picked up' />
                <alias key='&quot;pnr&quot;' value='Drive' />
                <alias key='&quot;walk&quot;' value='Walk' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3000224114639164]' derivation='None' name='[none:Calculation_3000224114639164:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[csv.41558.498367719905].[Calculation_3000224114639164]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_492299755485048832]' derivation='User' name='[usr:Calculation_492299755485048832:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[csv.41558.498367719905].[none:operator:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_492299755485048832]' derivation='User' name='[usr:Calculation_492299755485048832:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' />
                <order field='[csv.41558.498367719905].[none:operator:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3000224114639164:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_3000224114639164:nk]' member='&quot;Drive and dropped off at one end&quot;' />
                <groupfilter function='member' level='[none:Calculation_3000224114639164:nk]' member='&quot;Drive and park at one end&quot;' />
                <groupfilter function='member' level='[none:Calculation_3000224114639164:nk]' member='&quot;Missing&quot;' />
                <groupfilter function='member' level='[none:Calculation_3000224114639164:nk]' member='&quot;Walk at both ends&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41558.498367719905].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41558.498367719905].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41558.498367719905].[usr:Calculation_492299755485048832:ok:2]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41558.498367719905].[usr:Calculation_492299755485048832:ok:2]</column>
            <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41558.498367719905].[pcto:sum:trip_weight:qk:4]' scope='cols' value='Share of Trips that Use a Bicycle to Get To or From Transit' />
            <format attr='subtitle' class='0' field='[csv.41558.498367719905].[pcto:sum:trip_weight:qk:4]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41558.498367719905].[pcto:sum:trip_weight:qk:4]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[csv.41558.498367719905].[pcto:sum:trip_weight:qk:4]' field-type='quantitative' max='0.5' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41558.498367719905].[pcto:sum:trip_weight:qk:8]' value='p0%' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='57' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]' value='24' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='324' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[csv.41558.498367719905].[pcto:sum:trip_weight:qk:8]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41558.498367719905].[none:Calculation_3000224114639164:nk] / ([csv.41558.498367719905].[usr:Calculation_492299755485048832:ok:3] / [csv.41558.498367719905].[none:operator:nk]))</rows>
        <cols>[csv.41558.498367719905].[pcto:sum:trip_weight:qk:4]</cols>
      </table>
    </worksheet>
    <worksheet name='Transfers.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Number of Origin-to-Destination Transfers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Transfers' datatype='string' name='[Calculation_7970221122403174]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7970221122403174]' derivation='None' name='[none:Calculation_7970221122403174:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='163' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='39' />
            <format attr='width' field='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' value='102' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='92' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='216' />
            <format attr='height' field='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' value='56' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='false' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Transfers.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Number of Origin-to-Destination Transfers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Transfers' datatype='string' name='[Calculation_7970221122403174]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7970221122403174]' derivation='None' name='[none:Calculation_7970221122403174:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='163' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='39' />
            <format attr='width' field='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' value='102' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='92' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='216' />
            <format attr='height' field='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' value='56' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='false' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Transfers.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Number of Origin-to-Destination Transfers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers#csv (AccessEgressTransfers.csv)' name='csv.41558.498367719905' />
          </datasources>
          <datasource-dependencies datasource='csv.41558.498367719905'>
            <column caption='Transfers' datatype='string' name='[Calculation_7970221122403174]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7970221122403174]' derivation='None' name='[none:Calculation_7970221122403174:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='163' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='39' />
            <format attr='width' field='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' value='102' />
            <format attr='text-format' field='[csv.41558.498367719905].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[csv.41558.498367719905].[none:operator:nk]' value='on' />
            <format attr='height' field='[csv.41558.498367719905].[none:operator:nk]' value='92' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[csv.41558.498367719905].[none:operator:nk]' value='216' />
            <format attr='height' field='[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]' value='56' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41558.498367719905].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41558.498367719905].[none:operator:nk]</rows>
        <cols total='true'>[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]</cols>
        <pages>
          <column>[csv.41558.498367719905].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[csv.41558.498367719905].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='Access &amp; Egress.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]</field>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Access &amp; Egress.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]</field>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Access &amp; Egress.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]</field>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfers.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]</field>
            <field>[csv.41558.498367719905].[none:Calculation_8461011141606189:ok]</field>
            <field>[csv.41558.498367719905].[none:Calculation_8461011141606189:qk]</field>
            <field>[csv.41558.498367719905].[none:Calculation_9741014131520740:nk]</field>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:boardings:qk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfers.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]</field>
            <field>[csv.41558.498367719905].[none:Calculation_8461011141606189:ok]</field>
            <field>[csv.41558.498367719905].[none:Calculation_8461011141606189:qk]</field>
            <field>[csv.41558.498367719905].[none:Calculation_9741014131520740:nk]</field>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:boardings:qk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfers.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:Calculation_7970221122403174:nk]</field>
            <field>[csv.41558.498367719905].[none:Calculation_8461011141606189:ok]</field>
            <field>[csv.41558.498367719905].[none:Calculation_8461011141606189:qk]</field>
            <field>[csv.41558.498367719905].[none:Calculation_9741014131520740:nk]</field>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:boardings:qk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Acc &amp; Egr Details.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Acc &amp; Egr Details.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Acc &amp; Egr Details.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:access_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:egress_mode:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Top Ten-Bicycle Access/Egress'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41558.498367719905].[none:Calculation_3000224114639164:nk]</field>
            <field>[csv.41558.498367719905].[none:operator:nk]</field>
            <field>[csv.41558.498367719905].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Access &amp; Egress.trips.est' width='192'>
      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
      AnD7AVxeaf4DfwUWAMgSbrwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Access &amp; Egress.trips.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Access &amp; Egress.n' width='192'>
      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
      FOZnTuIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Transfers.trips.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transfers.trips.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transfers.n' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29V3Qk15nn+YuIjPQOmQAS3tvyvsiipyRKlCiJ6pbpVqt7Zuec7TMP03vO
      zsvsyzztPuyefdozZ59WM316Z1stylsWxRJNFVmGZQAUvLeJRCKRSO8zzD6gWF1VdBIrEwUS
      8XshgUrcL+7N+0XcuN/9f5+g67qOgcE+RBAEQXzUF2Fg8CgxHMBgX2N61BdgUFkKiTD//Uev
      UDLV8Vff/yYus4yiKFgsFkqlEqJkQkRDF0Re/fk/03/2BToafZhNEqWyiigCgoTFLD/qruwK
      gvEO8Plj7uabJD2HuPabH3L6qS9y/dLr9B4+xY3ROXxeDwFzCm/3GYbe+QMNdbVML4V4/pkz
      zG7kKIZmaT36NN/+6jOPuhtVx3gH+Jzjb+7EpaUom+zkM1kGjp2l1mUh0NzO+NQcbV29NPic
      2F0ezKLAmXNPc/zYQcbHRtEe9cXvEsYT4HOIpqmAiKapSKKIoqqIgoAuiKBrCIAuCKDrSKJI
      WVExmcQ7f6OgIyKbpEfci+ojCIJgOIDBnqNYLGKxWKpux1gCGexJFEXZNVuGAxjsawwHMNjX
      GA5gsK8xHMBgX2NEgv9ElsevcHmxSKMU5ehzf4GsZHE4HBTyeQTJhFkSKCoaDrutYjYjqzP8
      9o9XEWUr3/7LlxE0BbPVhloqIMkWzHJlvr5cPMw//+hfKFrr+atvv4xdFpFEAUEUKJVVHHY7
      gvDntzt89S3+8PZ7dDTX0XXqixztaUItFxFNMuVSCYfTSS6TwWp3sLk0gV7TTYvf/kArOuff
      usBiNEVf/1Ge6G0BQaBUVnDYrBSKJUyyGUFXmJwcwtR4hAZi/F+/OE9nZz/fe+4skiCRioVJ
      CU4CTjMWGX57ZRQwHOBPRikV2FpbIEme/BvnSWYSOOwepheWsNqd+IUEk8EM/8t//s+4zZ9i
      tnwII7dH+cq3vkv49hv8+hevkC9q2L0+Fkau4es6zn/4H75bETv2mgaeOXuElKuXC7//NXNT
      s3QfOoiWj1MuaTz/rR/QUef8s9s9/vhzzK5EODXQwOtX32Z2oobIyhSdLQ1cG5nm3LnHuXbl
      CifOPU1kZgg9cJB//zcv39eGkt1ireyk06+Rz8T5P//5Xc4dGuD1q1c5euAgK5EE3ho/WnqL
      8HaK//nvH6PW7KCrpZkfPHOU//Lz31JExC/kaO7s519GbtLd1YvsbgaMJdCfxWPPPEc0FESW
      TeSyOcwWMz0Hj1PvtSPLZmr8dUiVmfsADPR289uf/ZjrM5u01bt5+tnnUBUF2WSittZfOUN3
      ECQrDtL0DvYQL1mw3nmqyRXo1InTjyNRpqG9l/7OZiw2JzVeJybZTF1jO9/567/iu998EdMD
      tkTZTiK8yPJ2CpNe4vCRx1lbW8IkWcmVVL722GH8LhepbB5sLnyygK7k0CU7uqpQKJVwOpwI
      AiyvLlPWTeQKBTqaGnb6bATC/jTuDpOugyCg6zrCA+sCXdcRxcrdU3Rd/1A771/DB37/kLY+
      6veCKPJpLX1su/eM4719yWZ3lpf3fvZOl+9vVxDuXte//iwAOjo7d3ftnvHTdz549+9EURSM
      JdCfyN0v6M5/P2zyVXJCvt/eh7ZZYTvv2/pzfl+pdv+U9nfG4ePbvf/nf3UM8Z7fCzsfvO/v
      jCWQwb7GcACDfY3hAAb7GsMBDPY1d1+Cc7ncR76xGxjsJoVCYdds3XUAu/3BCJyBwaPj3m3Q
      amIsgQz2NR9wgGxym81YCl3X2VhbYjkYRtchn44zMjLC6PgUivbxS6WNjY27QZzPC2q5wMT4
      GLFUFl3XCa4skMoWiYRWWdvYIpPcZnV9syK28uk4y2sb6DpoSom52XlUXWd5fpZsoUxweYHN
      7WRFbN1FLTE1Mc7kzALRcJCJmXl0XScRi1VNH6yUckyMjTG3tEZodZG5xVUqMWPyuTSz65vo
      Oui6xtjsDKF4GqVcJFMoE9xYZzOZBT7EAd69+BZvvH2R6Mo4b1ybZGzoOtmyiiCILI5dZSuv
      cOn117hx8xa//OWvWV5c4Pz584zOLPHepT9y+eYY09NT/OSH/zdD88EKdGdvEAvOs5nRcNpt
      6FoRFTPDt64xt7RBcGGGzXia5fnpikyWre0kkbU5cmWVRDSCWcgxdOsmW0UTQ5ffJBgvMjc1
      XgFL9yCZ6e5oYjueYnRsHK/HQzG9zS9/c55q6bNMZjutDV4S6Rxj45N4PO5PHXG+l8vj0ySj
      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
      /wfA69uiihKR2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Acc &amp; Egr Details.trips.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Acc &amp; Egr Details.trips.pct' width='192'>
      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
      PnyjlKp0LGa7w2NrtFqZWh9jBJsYmEi3ISIUBwfO+20mmmQ3UnsA6GWVSFSrtNXrz59PJLn0
      1lpXkED/AOIbJUdgwBv0t7pys15qtVoA6AQQxrEsbXIOBn2tTruuO8ejQhKMzcqFnAGCZDfW
      PoW95wg319YeUWXc/+DXtqlXfvP//t0LL11/+60/TM1Mt7ui1em5f+fOD3/03aWleDZf+ff/
      7m/+5z/9nJHLAum6c/v2iy88n64puFgaiwRqPBw691x86e5Pfvzg/mSoMp5lTl6VQTEsgaGx
      6Yvtat7lduEk85WvvERytljUXyjWXL6I20pBAHAMC4YHYrGJ8MBQNOy/cu3a4ODI1/7i2+vr
      W5NRJ0GcvU19gy/MF9GFrS8vDU/OPJYLa9fLqzu5mSF3uomNRh4caG/cgZ5lDGHhaWEE0OGN
      H+jCTqlf2n5F4lHbbz119q/G4d1WVfXMzREc0e1+xg/ewk5p/vvRc+ZEd0e9Gn/OAXTGNKMG
      zxpGABkcCyOADI7FwU50NbNdRxxDAXshsb5dg0FWov2x9MaiKrU2djJXX/ra9tLsq69/jzzi
      SY5PAqG2vrKMs1ZM5TPlppPFTK4AgRN+r167q0R8o9zg7TZGgZSZJQOBHlWRn6Gp8tzCynDI
      tZlthD12rz+g4zWE2vrSvH9geHVlbXh4kLO66N65Cbi1e08EtIPGC80WR6IqytIYOhiM6XgS
      31hp8pqFQQFpYSn884o24dL8vNNlLzZEj93s9wee4kn/c6sf2i2OuqDYGDoc6DvHgzsQ36hU
      mjyE8Na9he31BYfbdefmx7ly8+r1r5otFjfezOfzd1cSJ+CappYr1WKp5DDTDre/02lvrC4X
      yxW5XwsrAAAApVrTzWrpYiubjKezxWZX0DFWRKHWaAp8t1ouplLpUqWu70+zUecFoVGvb8V3
      S6VSHzu1LciF4kaylMfVZraSie/cSlcKou4LbK3ZZVCpVG/vba9lC+WuqHcOZGZnbXZpo9Zo
      VQqZVDpTaZxkduJIbG69v7i3VW+WCvmlncx2W+yrWzoQFvKN8kc377aaFYSyXxx2pwVTN718
      6auvmWgsncmWSo2Xv/nN3fXl0RG9Bn2P0a/lZalUJii20+lOTIx73Q6MpFPxuCc8TPcXFtZK
      +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
      levb8Z4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Acc &amp; Egr Details.n' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29aXBbV5aged/+sO8AQRAkwX3VvlmW7XRm2encKjOrMl1d0TUxvzo6Zv5N
      zP+J+j/RER3R0xXTUxPTPdHTUZ2Vlem0M9ObvMmyZC3cd4IAARL7vr/9vTs/IEu0RAKPpCCZ
      9vt+UdTBfefiHd7t3HMOAiEEGhpHBX3eCmicbDQD0jgGEGoGpHF0oMxoBqRxdDZmb2sGpHFU
      IMyyBNLRXVizcQRBOveIbxTfwf52dgSCEHIc19FH7H3WXvb85tk8HwAARFGUJOlZPQ0qiqIo
      Cnz2/fwKlmXxZ//UDrF279MypN/96P5L0z0TF1+QJLB297ZMgNOXXvQ4XTry29PTrxD/w//+
      73RG/eSFF6R6lcctp8YHhHrJ0d1noIlnpsS3Zw0UGB7++L3ro/2O3RrIRjZ/+99+wwMgspXf
      /uEDivj2WQ8AACAIQpJkIZOq1Nk//+6fUsnIv/8//uG//+HDZ6nDt+eb1Vm7RkbHvvfiqeU4
      WyiEe3p9DqebIFy+PrzM8HYD9bwVfOqgLpcTEpSvu5vnpTf/9s16Xbx88cKZK+eepRKdXUQr
      isLzvE6n69wjOsphF8WCICAIQhDPbgZ5uhy2vwyjnQO1RJKkZ7gofv4cYcejGZDGsdAMSONY
      aAakcSw0A9I4Ft9VA5L5P7/9u3fevb4V3KhzEgAgF9vOlJk9EtLK8sbz0u7pI9T+5bf//N7H
      N9fW12UFAgB2gmtVXt4jwa8sbx2h4W/POdDhkMVEvqYH+Q0MMI36/OJaj9uSKM9eODVyf2b+
      7LlzSwtzHDSOjg0+b0WfEkIjU5OxzDJExuRGaXYt4jKStbXtUwPeO7Mrly6enV+YA4RncKjn
      sA0/ewOCy8srFgowhF2sl6enJ6Esrm5sQgSbnhg/6DO3P30/UahffOEqW6lBFJkYGzlIsl5I
      /PmjW97+kZcunZGF+nasMDLUt68khuMv/eCNnfWZ7Uiky9cDuVImnU7ZqJX1oNmkR3QWjJX3
      /eCtu/8UL1XOnf7ZsNcHIawzNZPBDABcDt4f7T/zhLiyvLxGKA2dO1AtlKanRmW+vhnelTFq
      evRA6/z43bdKLLhy5WK9VkdIw+iA/yDJXCz06ZdzgbHTF6ZHuVouVYUDPe59JXEc/+mv37z/
      5efbRaHP313LJ1PpihXUg+GwWY8bbG6mvv8jPvr8/y6y0tVL/6rHZoVQqbN1k94MgLIcnBns
      mXr2BoQkwsGFegPDcYPRkYysIyZPrZStlPLZQu0HL13a9zObm+sEpV9eC5kwGNpaLlQa+Z1V
      Y9fIay8/Lt8opb2jF+rbd997d1dGKT0GcoU8z9TK2ZjFN/6DaxceyOG6n//sJ067zWa8StL6
      VCrtclivvIqLojQ0NuXt6c2lEyRt3FeZYV+/ZDRxhcX/994/D/n65naTow4a0XnLtfp+BoRG
      tjbKxTRKBx3ewPbajK3LXywVk+lMtca9eGHyoP6SlGEz5MZlbn0rXLtydWt51j96/trFqcck
      86nIxJXXVm+9m48uI4QOw4hivqtWKqfi2/0Tl66en3ggp7P/9c9+6LSZdS+/YtTrEpmi48yp
      75OkJMHh6ct9/f5kIqHXm/dVps/hdloux0PXP04mBtyOUAVxoGWbezBTlgd7nscaaLjflWkQ
      ciHm8noisUx0JwYAqFcr9Tpz0KE4qTONjo2W88lSuVKtlKrV0tzMbGQ3vq/wbiSYr3ACx5w7
      d4pVqK2ZTymTdXZmPhJLPBJCMafdBgAwW+00TQcC/Uaz1WQ02m3W/sAAReA9/j63y7Fv+4l0
      zNflW4usmSkkW8w6DeT6biie3jJbuveV77ZToilQ2Am6nYZEJr+bSAEAquVSg+UP6q/eZBsb
      Gcymdiu1RrmYLxeyc/NLsWR6X+Hw5lqDlxu8dHY8gBpdN//8e5vDPDu/HE/tkcdIp80MALDb
      HSStD/T1mG0Oo8FktZgHBwM4hvf29jmdtv2/z0ym1+0KxrcIyGQrJSPGb6ei0dimxzsMnosr
      QxbYQk0ggaAz23PpBKUzoAiACAIUxeF07nuKnopHa4zo8/dwDIugiCLLQBYQyuSwmh6TFNn6
      9m7S4e4igKAzmhsNDlEEg8VRziUxncVu2X9QeUhka91osaQzxeh22D8yPTnkBwA85pqoVLN6
      g1PkSkWGcxr1FYZh+bqeMtJ6O41hT7oyeKbWEFEoNCxWWyqT1lE0imEKggFZPKi/sWiIFRF/
      TxfL8giGy6Io8Q2dxWUxPu4UYmrlWDLr6e5RBMZk1DMCkPiGzeHMJHYNNo/ZQLfu7+rqapfN
      kCzUt7e3x05f7PVYaZp+zJVRKGfsFnetlmlIqIkEjCAxbE1HG00mD5AEzRf2NW588LbeYo/E
      MrjBVc3H/vXf/g14woBacOJ8YW/99jd+rzWSqll9g8nt4Jt//ZdPGlALNF/Y40yfPluoMEO9
      nmxi99LVV563Oh3nysUzhQbocZlike2XXv3+EVrQRqB9kHimIQCLSS+KIvhWj0BNeKYmIpRR
      R7Ise9gR6Lt6DtQSnNJbvn3Xhw6G0puO3F1tCtM4FpoBaRwLHHwVvdCJ1pstK4rSicafAU3N
      1euvKAqKoie6v4qiqF8DKYryYA3E83wnFIIQNteVnWj8GdC8jqjeIERRRFFUlvf3gXzzEUUR
      QRD170sURRwAgCBIhzZKTXM+cbuwhxx2F4btd5B4sjjULqzjgYUa33o0A9I4Ftjf//3fP/xH
      NrkLSSMOpLXVVcpgoUlsO7ge2YlhlMGg2+ekIJVKGQyGFmEgEEJZlvcO6RAq0e0QbbSgMre+
      EWzwUrWQqrFiJrGTLzNOu7WtxiLXYEVQyiV4GdXTB55fQEWOhEO4zohIHCeDQiomIaSOajO5
      QAiTsaiMUjgQWUHBMQQAgGHYXv1jyXWcspA4Viru1ni5VolnqhWFL8cLOYvRiiDIXvknYetV
      GcHjka2GAMxGfTt9lJ1ImNSb0vEdlNSrj5DkGxUBEAR2uAFCkiQcxw96n4rM1TmBwGCNYYrF
      aK5WM9LGRwYEIXz/nd9k6mhk+S5lccQS6T6/l2OYGze/oIAcTqTW5+9zAJv74ot4sVGKB9dj
      hVIucev9PxJdAdcBTsonDYgrxaM5Npcr9Pi6UaFSZMDW5npgcMRtoSPJYk/3/ndZ9vZi9rPr
      DdqaSaQK+ay/58ALUCJTlVB8cyOUCi6xpCFfqpdySZ/P17p1phifWduBECS2ZmrA4bTqwNcN
      qJJfT7PSbjLqs5kWouFSKbKb2OztmVpa/6zbO26gdO0MSLrxpz/Tvu7l2aWBoWEdTbbWp5oO
      FSRzdPFzjnLnk5G2+j/k1vXfY45Rm+FwB8UtDUj5/OY/Yo7TWwv/lTeOBzc/6us5TWL4Iwut
      preiOXltZb7BCT1+v9WkBwDp8vntDnspGR8ZHcRoYvb+/QqLZ3dDgihmUslMvmAxu3xep3oV
      OY6XJLH5czCaGR/sOnX2QnhrfX09ODk90fqzAAAA0LGxEUWSJYET5VZHD4TOlIntjE6Mj42O
      oCSNiI18qdq2dUkUPD2BeqUwMja67x8vRpoqmTVAGGuVmNXiE3hmcvwHG1s3R4aubUfnVeiP
      j40NQ1E+ffFyeHOtrbTe4qrlYxygpFquVGXayj9kdHRMvbA6UIN1pNemp40DvRZ0cuKHm9t3
      wd4biQ0e/Jv/6d/WEiHa7pq9c3v09GUAAECQ6alpAgKrUY8iuosXAiRqhJATGyUf6fTY9TpU
      KmZKFp9aGzI7feZi2OVx78bTfYEAhpFcrejvG1RE1kSqGm8pi6sbkkaljuosLcT4RpmREJ5l
      7Ta3G9PhdWNP4MB7jI/Uc/cbypuegWHKgHrwfYYHgtCb7YM+uxnoHEpp5dTEq4nk2ujg1VIx
      Eug7q0Z/i9sLjaZ0ZNsfGGorjFMGI02Mjr2Q2d0ePIxNmJw++mnnk+j2DuEAcXcNGUg6UlwZ
      HrgMnpczFSqK9PWp7ZvJQdt4QWAJQvfkSH9CnakPOTHOVARFCfQEbwBJ8qSebD11TvBb1Pgm
      oBmQxrF44EwVBKETrUMIm+6hTjT+DDiaL+zkOlOP6AsDXyWGeeo8zODXicafAQ9zLaqXbzrk
      O6lUB2m+L/Xymi9M47hoBqRxLL62jZdEAcUIBAE8zxEkJQm8AgFJ0RjasQs9EAqCgOIEhiKK
      AjHVvhsIFQUCrOVkoSgyQFAEQgUAkecBitFUG9cBAAAqCgSILAko1u44B0IZKooiyQokMExW
      IALUflE8zyEoRrY/MYICL+AkKQk8RpCt+7sXgedxgkQ78+IkWUQAUCAC9hoQhPDPv/3PrsnX
      9I2dSK6qt3iiK7ddvsArr/3EYWz/vR8NWebX1zcYQbEQdZboOz+1fxz7k6zM3pCNw2fGDk4G
      oEifvP/HyRde3529YR2/RDZSW8n66997oa1Gtz98zz11NhuLG4zGqfHRgyXh2vq7vG6UKS77
      fOdSyYW6AF46/2NVB2tQuvnZjanzl7oOCAZ9iMTV1zaCkozhOMaL0uULqg67ocSurW9KgLhw
      Zv/Q6eOQSa8s7sbNJJQQ8sLoi48sWqhngonG/P3b24n8T3760wvTwxiO63V6muyU9QAAMIzy
      uW12p3twdAQ7zFJ7aGQEbS2P4iNDgwCgIyNDCIpxDHfh0oWWH3ig0ejoEIKROhJPpzMtJRGj
      3uFxuBzWnp34vAAJgqBaeeH3ACWxq8cf29lprw2p7/E4ZZTwOgwOV5e65gFAqV6fWxBFtfKq
      4eqJOyufEYBFjUMYooC9a6BUPPl3/+Z/fvnM4NkLZ9956/dbu1m3y8myTKVae+p6PEQWmZml
      DR1FoBhlMR/ieBcjaPMTcb6PoTOaKQIjdAYDTaA6s12vysNA6o0GmkQAHBlpMfwAAICC6W0U
      WucaXe4Ri97Q5epXqTxEEEkQHM72DkSJr8cyFZsenV8N06RK+wRQ5qLxrNtpVymvHtroe3Hq
      e6enXkPZXW/XBGj6wiCEHboTrSiKKIoUdVKDrJrnQDiu1uHTPEdRL/9Ng+M4iqLUnwNxHKft
      wjSOhWZAGsdCMyCNY/Fgtu7QtN082j+5a4Im6vWHEJ7oNRCO4y3uRD8JhmEP4sI61GdFUTAM
      O7lfaNMxpF7/Zhzcye1v82UdyoC0KUzjWGgGpHEsNAPSOBaP4sLSocX/9taHyxuhM5ND/+kf
      /q+pc+f/+3/5T0tLS7je9O5b/3xvMTQ+PUUc0t72xoUpsvDBex86ncb5xXVGgFYduHt/keEa
      4WAwWyjHd7aTubLP6zmoKYEp3ZtdLFVqu5GtYqW+sx2qNATXE4etfKPwxZfzZrtDR5G7m3Ox
      Ah8NbxYrtd1IOFeud7kfP/wtZWKLK+s8IA0oPzu/VCqXI9uRQrURXl9GSINR/yguTORL91Zu
      Vli+klsuiDqHgZ5Z/jhRzGWzGzVesujpD+++G+gebhEXFly8VWDR9bWVYqm4u7NTqDAe9+OJ
      YGWRu379496BIbFRWZi9k6ywm8ureqNuZXGlXGcPShwLAACK9MEHH/r7AvGN2TSv2126IZt6
      zbp2h9cy8/Ent0w2ey0VDOVlp1n32BpI5otfLn9R5QS3zT6z9HGqXEokFnmIhyP3kqWCy+J5
      ZBEixzC8mE+lwqszrMB9ubBVrlR4jlcI4/cunTr7wsv64y4NEZPRqLd7R/wuiCBQFgVZiewk
      Tk+PKQA9c3pakVtd5CP1tqmRPoBSo0OBQqEoiGIoHHpSTGAYgiYLxbLQKG1EdvPx7XxNkiWx
      Xm9Uq/vEhdk8/j6PDSBoIbnbkFGE0E2PBRRJAChZyBf2SuKkpdtmQ1Cc40WL0QIANtA9KEMg
      SmKuGLu39AmCtXIaMuVsaCeZTURd/olcdLVQE2VlvyQeCGo2GiAEtNEiK/h4rwvX6fK5TJ1h
      qq19ShCYzSauVtjcjjEsa7eZBan9xUihUSMMxmwiGtyKVBvskwIoae22WTCcAgAb8g8xHCNK
      Yq6YrDUq8fQ22DuFoRiOY6hBr1sKZ375V39VjG34hybOjPVzvIBi+PGX2yhGGPR0Lbf74e1F
      q4GqcTKJKl63/Q9vv2e1mt7+w9sWeyvfDV/L//GDmxYTEQzH9QYdRRI+336ueBSncFQUuBor
      9/m7Cb3VbiR4niNpet/NUT6+dXNhy0hCRGc1EChTyb3z3qc2q5WiyMdecDa1cC8c6nH5ZZQy
      YmKpknj/3ge9Lq8CcBQlfA43pWvlWscofa/PQxtsie0lkydgM1HSfs5ODCf1OkoWGjVGQAiS
      wFCKJAWOpfQGnGg5nGC4UU+jhK7f75UlSW8wqrmEAwFKk7gE0f6+HmW/0nqZxMxsJGqjqUJh
      ezMZN1OogukxVCEJfcA/DZ5XXJgiS6VK3aEiEv6IzxW5ckO0P5FF+iBkga1wst38eID2QXFh
      tVqWoO30E5HqTysuTGKrNYWyPfM6rwfFhRVKKZu1C33i9wzDaFlaW/EdydL6kCMEFmq7MI1j
      oRmQxrF4EBfWoVCmZtLGk5szsKm5+jAdWZZPdI5EWZZlWT5Kkk2xA9cfmw+QJKlDjT8DDlvz
      W5IkBOnssrKjNF+WegOSJEmbwjSOhWZAGsdCMyCNY/HAFybLsiLxn3z4QSRVDvT5EABCK4uA
      1isQI79Kg7exse50ug7V+pMXyiCE4fUV2ubBoLi+tlrnFbmer4hYMhqsMpLNun/VxUcfV6TN
      9dVynU/FoxVGdNhaJSmr5GL5BsDFWizfMOBiOJZ32A5sH8r8/PwiThsr6V0e129vLAsAb/rC
      9i6ioSKsBL9kJGAzmqO7i6lyqV6NJ4sFl9WxHJpxWb0IgrRedFdziUxd3t1alTHKZDgwyabM
      N1ZX1wFBBVdXMZ0B4auxPGMzG1p9OwAAACPr64TVHFpb4xTEYmojL7LVpZU1BcGioU0RIfU0
      edB9IAjFleBtAZJGElnb2WTq6UylbDVYH73anbUZg/9UtxHubi2/99HdQI9jZnkewU1VRjk1
      7NrYLfe4jJHNlVyx9sav/s5tOmKwGIRSMhZzDE3LhZ3dPNNPcbCRblgNPpdrObgz0NcmiSRb
      SUcS5d4eKjA4tLyyDgIHVqNVJH5pZcnadSqRD+FWbzWRa+C2EXBgICLfqBSrjEfgSqmkTmdJ
      ZYp62z6eXQiRbndvKJXstZtmt+aG+897Ha6d7dUtuZosFsf723RfkYXlpSVj90AmVzE5W2VE
      4RvlYrXKh0OFOufm2I3wsmAdGOhp+wcsp3ZiRr83nSvVBej3tklaimDEyFD/Rijuc9uj8aTT
      MnyQpFSPVWVdLjqbpRVO0ddwM6rk+9z9j/5WLA5nZH1hZn55Y3OTqRQYEXi7u0kcGT9zLhIO
      5XOZWq3GKtjZ8d5K4+i5YFCU6HI7AVAATnV5XLVKqcvrgVAu1xg1YU8YQXd1uevV0uzdL3sH
      DuwtAEBgGySlKxQyOEkVC3kUJyqVSgt5BCOGhgazmUyX1wMhMjA8VMpnnxTj2fy99dnJgVOi
      KPi6RmvVeKHeIFHIclWAtqkv2dSKoHXlSn1weLiQbxW42Kg1PP4+QeBGh4eSu2GMoiuV9klC
      AcC7vC6RrZucXqi03/wqEn/r7sLwQHdDJBClVWiXoOCASxoNznq1RNFGCGCzv3viwiCslAsA
      1xOIxHAiQRA0RdTqDb3RLLI1CeAEjgAASAxFSD2Fq1o87RsXxnMsiqGZXMlAYTqTjUQVQUEF
      poqSeqO+7TuAlVIRp/XVUhGn9C5HK/+lIouCBCgC5QWJpgiWF3T0we1DWMjnTDYHqkgKirPV
      EqE3N6fvvVOwwNdzlRyUBZOtX+FLeoOzUc/qDS4ShYICMIC0vdKqyKIgA7ZWpo3WVnmroZLL
      5iwOZ61UMNkcJApZQWmbFhgAIHAcSlLVYk5nsrXNiy3yTDZfMpqtMt/Qm+1AkQ6MC4NyvpJ3
      WNyiwGCkvlJJm81dksBrgYWt0AIL28pruzCNY6EZkMax6KwBndxKYUfmRHf5UAkSmzyIC6Nb
      rC6PQdNH26HGnwGHvQ+EouiJvg8EITzUGkhRFG0K0zgWjwxIkbgP/viH9z+9va8rOZ/PPzOd
      NE4QjzackeV7psC5HjOYv/3J0ubO8EC/0TeYDi1GNmN6jzcTmvMPne7z2QNnrnUd9Rha49vH
      noJzMnvn/mIqlea5Kk2gDUEOh7dZnrfa/ATCGQ26U2P9f74T+vErF9Wvsp6sF7bn/5StjTUB
      4LlEtCHAcj7FSMBkUHV7GkIYi4RYCTWqkJd4plhjcSDUOIVud7AGAGCqJV5Bk7vbAsSbB3EH
      xHnBVDrISmi9Gq8LUiYTShZzdrOzbcG5Zgd2IiEFo3Uqkn425WPRsADxfcv+7d+LSoEHFKnu
      vPchrQvONVFkvtyoMfVskWF1BP1oBLL7Rn/+hgshdAYazxerbqctXyjRNAkABoCCQLmYjV0+
      e+Zp7TFkkdkMRa94vHPB0IXLbqg3h4MbXtdVNZ+FikQZraHgeldbeQgXZ74UDD4dtwusU2fG
      2hqcPH/rpuvUFYvZvrWxdungtIpsLXZr9f6ov4+VDTIfnewbjJYFlV8OVAQEJ9dW16+9oCZt
      I2CK8ZVwqscHXfY2zuaHzN6+7jv/CyOtNiueehbmfoN5X6nltjFUsg/vSbIJAUwnYqlsAcNJ
      j9uJoJjL5TSZzCaTwWQyGc3W3qHp1185DwBQJLFazBWq+8ShqQdCePbilfDm+umzF3cj4Uo+
      0Tuoth4WguKlTKx/aLytpMCWKw2pVq0OjYyo+y6xkZEhBCfyyejAaKsUp7VyZmToTCSyYrbY
      IUpt7IYm+trkVHwIVCCGkwCqvfmqyFKXv79eLrQX/Yrh4fbF0Y4GoevuN0m4sVtWINi7Bkpt
      zW+mBQu5o4fVL+c3z02PLaysB0bH4qtrtKfHoxOzHDnoJBdCabm0TdoHAkNDn60ujJ+5EF6a
      wa2+H/3gxUPpgRF6phIfGp+u5FL+/kByJ4obGABU5YWEstDgZJJjAGiTJpfU21559XvFGksZ
      MF+XqvHc6PJiEI2IgGcbwHLgiOXwTuWjK9976V8nksHTY1fqtSyOIiqdzChOcvXK8Ijad2x0
      9VkrW/qRQxScM7t79Z05TXB7x8xmrz0/6xl7CUD46AJvfP3uUpawk+LuTnC417sUTAycvpDa
      WlAUG4pUk5FNaPS57dT0xHg0tG62++LJVPfgeGx7lSbMCODefPNvnnyYFhd2sjhCXNgjA4JQ
      Xpq9jxhd/W7DwlpkcqRfJgz1UhZBdADyOBQydRjwGDd2csN+Rypb9vj82xsrQ5PTTLUOoRgI
      DDz5AM2AThbHMqBOoBnQyUKLTNV41nS24FzzPtDJrZ91hIJzCIKc3IJzzRFU/QgkCEJnC87B
      r+hE48+AIxScO5T8N40jvKw950AQbq0vLa4Gmy1AmYslcwDAWCz2+GMUeW1pbm0rCr/6pySd
      1GBejWPy6BwoE17cTLIEG3XaDfdu35k+Pb4SzK3NliO52qXxniow6eRKMld9/ac/Tyx/kRGs
      jZ0VM6Xcub9o1YE6ZsO50ti5q0P+A3PUaXwr+VrEFoIqkc3VCsv2Do/PzsyThC6rUDoM3rz5
      OW4f8FjJXocuXxMhhIgibqzMG63OWilp1A8QUn1mdQuzdB/CgCCs12u03sizDYLSywKLEBRN
      qt2/QKgIokS1L0UFG/UaQRsEpg5RwmQ8MA7rIYokKQgqsA2c0rXO8VWrFxCMJlAFIiTHVSGC
      G2ijyuVDrVJGCKoZd9YaWRQBhnNMjaANJP70XRMPniIJEFX15bNsBcF1NEHyAgsA8uhSPYRK
      cHWxLhOTI4GF+cWxyYlKjavmYgplsVFKWSAsesxAYbSt20DAlYV5SFm6bNRuMu/zdRerDa6S
      8w1OdDm+FunX4lK9LLKbm6Eq04AKSZOQE0SK1p87c0plhxPhlc2M+P2rbQqwKULj7vwqQeCV
      fG7yXPsCbwDIt95/1z15Np/K6ihianIcHHCpHsrMR/fePTVyKZLcBgD2u9wb6fzVyauomkv1
      ULz+wSdnLr2gwrclXf/9O9M/+N722jZJ4RfOnWknf0Ru/OmfAld/7dYfHJXxAGV1616ZqY/5
      +m9tLr2+t8CeIktOb68TxWid4crVqwAAqwWAngdFzvyKzPGSTkcBAASOGxybpPV6FAB3dx8A
      wOsFEA4eKrQDRQmX01be4WhczhYqHoc1mdknDmtfZJFd2diWqLbWAGRZEnkRAUhP/8BuNKLC
      gLDR0eEyTpEYTGfzUwd7wwSBC/SMzcz/ceTUX+fTa5li9vLUywhUtf+CkugfGIpGwi572wqE
      +OjIoCSKoiSgT2TUe4qMjI6oS6GC4Ijotnu/XP2C1neDvVOYyNTee+uf9H3nBm24wWrPl2oB
      nyOezgcGh8Ibq/2B3sWlrWyh/Ddv/vyTTz5BWNYU6B/t9SuYjquXasWcweVfWZj58Y9/rHIM
      VxQxlS54u7pqpezY+GS9mBkba+8cbYIRuh++8UY41rqiIAAAoDhlt5log4lv1JyuNmGaTSij
      2UTSDIaOj7fSR5K4Sr00PfVGLrc52H+uVknocEwU1W3gEUzkGi6PqgqEBqsN1entFpPO3KmU
      kgAAnclBUu1fnchk46XaqZHJ18//RUY0g8cKzi3cfNcyfu3zP7599vT4vds3nD0Bu81eZqVC
      Knbq1EQ0UWpUqv/D3/3qd79/2wJ4U3dXcGs3MHUxt7MuM1V7/zSbjPzg17/aO6trcWEni+PG
      hdncPiNFTJ8+jSi80xfo9vWMjY/7urs9DitBGQL9Ay67QQYITRLe3t50tvzyKy9nIhuebr/b
      7aEIHLQK/NT4dnKUyNRsKmnzdD+WtR5CJZXKdHd79/5SG4FOFkcYgY7SVbe3+8lfIgj6mPVo
      fBfoeME5COHJ/YtscqiCcyiKtr8T/U0Fx/FDXSV4FgXnUBQ9uQb0HSw4h2HYUZgBeh0AABSo
      SURBVAvOQdioVSrV+oN/KXKD4QCAjUbjsY9BCGuVUq3OPA2dNU42j/5Wyunttz+ewYH0k1/8
      Yn1xYXTU/+md6Eg3fW859Pq1c3Wop2AjW6xfuHghE1r4bHEXiMIbr11bC+4YMa4ErRaM7R87
      7TC39xVofJt4FBeWDK/gnqHsxlwsmTS6vDN37qISH8mxkK/P3rmxGklX8kmUK1He8Vxovnto
      em3uC73Vuzb/Ba+QIlu5fuM2L+MTI4G9rbeKCzsJNG/2qF/TNLN0n9w1kJq4sL2IovjIgCzO
      rs25LzGz6+qVS6uLC+cvX9ab7KCR0Tu8E8N9Xf4hn9fd6+sy2bv6/L6ZO7etnl6XCWdEZGxs
      VICYy0SfOnfRbvlaVsf2BgTlG599ipH0+spiscp6nigIty+KJMzcvxdPF3q6Dz7MVeSbH79P
      23uC926wlHlzaT5TrHZ3tT2MVu5/el2gTcHV5VS21OVxgoMNaCd6Zztfju3O7eYzOoSbCa33
      uHxqDEjm6/dm5jL5Slt9uFp+ZmG1UK2vL85TBqsaZzAAAErM3bszxRrnaVGgbj9UGBCcW/5o
      N5/OZDaj2USXvfvRFIbi1A9/+ovmz2/+zVchFmf39QaZf/aLv2r+dOr8ZQBAqwCqliiyTFF0
      JpOFEESikVOTqkKrUJycnhxbCSVbCSFIl8clKdDn9RRFieU4AagZCJHuLg+DUtMTQxvRNukA
      UCCbzY5UKZIrRad8Hr2+vW+uCUYZp0YDoWT7nIe0yTnSx6TLDKk3ZbKZbo8qg0Bw/dhQ73JY
      rW/xMCBDveNzazdI6ynIJcHeC2WNYvL//A//7v/57bulQr5er+cLJY6pF0slUZIL+RzPlO7e
      X7h7bw4C+Pmnn9z57E/vfzFfKBQkkS8UipVKOZ/Pi6KYT4Zvz20eRiGI4wRBkgSB9fX2qfyM
      InHvvvehxdoqxy9AUL3egKMordfjCNDp9LSq80xEp9ejMvfu+59Y2uUcZiXEYzJiODbSf55l
      mS7XgSljH0Piqu9d/9xqaV/OjK1kP/pi1mTQEzh+iM0gX9+MpEyGp+8XYKq7a7GIyzko1GMW
      Wy94rODc7GfvWCdf+eN/+cer1164/uEHk9NTdYa3ONyz9+798q9+srwcSqYL/+v/8m//5be/
      04l5jnTeu3v3xatX4iUJ53Mjvd0lFg6cuhxavv/mrx6MT1pUxsniuFEZlE5PYOjY1Nl6Me10
      OXFS99JL10iDdSzgzWRLzq5el4WCAOAY5vP3jY2N+/sGAn7vhUuX+vuHXv3hGxsbWxMBB0Fo
      DrHvEEeJC9tYWR6cmH7MF1Yv59e2U9MDrngVG+59kA9bG4FOFlpg4VNGM6DWMAzzIC6sQzXS
      mrUyDlt165tD82tR/4U2C86d6P4eyhJkWX6wsO9Qn5vWc6IP1g4r/50qOCfL8kmNGdX4hqAZ
      kMax0AxI41g8OtwsJsJlxD7QbctEN8Il6NMLtHcsvrkkC7XN7cTFa6+Gl+de++nPyNbBdqqR
      hcbi8obV6eGqBcpk52tFncUV6N3nruO+ZONhFrX1davKaAYAXJqftXf19rSrn/UQtpqLZrnh
      /oPvWEJ5desOStlQqSbjJgoyjEKM+SfUNK6I3OLKmsnqGjq43tnDxwSXFt3Dw5G1DYPVOTKo
      9rC+c5SLkZJIMpUIQtoGugYfjUBspVCoshDCOzOL4Y1Fu8t57/bNVL568YXvmcxmF15Np9P3
      V6NPSw8UowYH+yvFfL5YyqQSEkrGd8LqPy6I9UpF7YUkKAuFUo1h1SZ1VGTx7u3biUyupRTi
      cfbVG2lGBKlMsMpx+dy2yqwcCEYMDQ5Uq63qlz3UpV4qlwtpzOKtFDvh2zo08fgcIK1drv56
      owj2TmE4SS3e+ezG55/Rtp5rpwaDOYjV0+evXgMIMBiNSxvxn//qV9XE1tPSQ+RqH396y+Gy
      07SB1htktmZ1HCKu3unqokj1F/8Qq9XMc5xqcfT0ufOtfUk8l7+58InfMywI5W7PsCyyDteQ
      ygWBLDAfffyZQ1X9UKyru0tvtlfTEZwyqmu+s0Da16PnPp293ucbB0eLylCPFpVxstDqhWk8
      azQD0jgWmgFpHIsHs3WHvA0IgsiyfHJdGYe9E90M6zm5/T1sWA+Kog/iwjrkQFYURVGUk+ud
      bqJefwjhifbGS5JEEMShLtVrU5jGsdAMSONYaAakcSweHXkVYsGVFE8JlfPXrj05hzfysXAJ
      oZhUUaQuXjh1/JMyma/PLa5ZnZ5GKWuwuSFfSxWZV168dOyG9wPKK0tLhNE+qtKXBOXlxSXK
      7Aj4W/nClja+QGkHLtdQyoHJtRIrTQ2e7cz6Gd6/c9sXGFMZ1vMMWN743GDxd1k8jyyBqRS+
      uDHrtBptTuMf3vr47KmBZL48PHV+6/6ngYs/evlMf/DGuyii6Anyo7c3Ytli/+DI7N17P37z
      fzw1eJSsLihOT04Mr2zGh/zdy1vJCb9ZojvlKYSKnMsXsYao0oCgIuUKRYKVWhkQQPq8w0s7
      mwpXMFmJsZ7+yNLtp6Xw4/qI9WKVtzINAL4hBqRkiwkXYQUWz9emsFdefSW0sbWysoLIXLnO
      6mh6J7hW4uRCoYhghJ3iTJ5BgecFAX3lpfPJeKJSZ+SjXmWUReb9D2/4ez2pbBnH4HY8P9Lf
      qRzTiiQQOgMK1FYgUESe1JuQlvICX75+791R/6jV5m/UM+FkhKL1HVoQQIj6fN2VUrEzzR8a
      iSs6nMMNpgL2RmXIkqAATBR4DENFUVq+e6v33ItdZh3LsjhO0jQpiQJAcUkUAAA4jikQcCxr
      MJqwgy94tLhUr8hStVYnKBpVJIykAVTI9kmfjw7LNFCcpFTnoWaZOorTKALBAdt4RRZrTJWk
      DFDmCdIoCQ2M0ANF6dA2nmnUCEpPdCxPdBPVl+phvVGmdRaB47SojFZoURmt0co9aRwXzYA0
      jsWDuLCOlns6ufWzmr4t9fo3v8YT3d9ml1XKQwgfbOO1gnP78l0rONd8WZovTOPZoRmQxrHQ
      DEjjWDxyZdSLmS9nl7r7RyaH+wAAPM83L8MX0jHM5LEaOnTKB0Ob6zqrW6jlMZ2t13fyCh7G
      EisSaqQQjpHxXnff04ma+zpQkbaCQYuz2+PsYMGeQ7GbWEFIm8vkeGRAlfROQ6Fvff5ZPeWr
      QEN44YsrL/9FcDPo81hkKtU/2JcJhbejO5RBR5ucfisWyrK/+NH3j6kHlITQdvT0eddWKDJx
      +hvi6DkMUFqPLI6OvLweng/0X+mE9QAAFEl0eXs2N4Ie54XOPOHQ0DpLcGfFNf7K16YwlmV+
      9OMf37n9xdp60N7Vw1eLlVIqW+GYSmF1eTkSi6F6l6woXCWbTGfDoUPlQtwfCMD0mQvJ3cjE
      9JlMcvf4DT5jRKE+Nfb9eHxhZPBaOhvq0FNQnIgE18empjvU/qFRxFB0YXLkGtgbF8ZWiyyi
      sxvpTHKnKmBmUmnwMsdxRpPJbLbEYrt2iwViFAokAKHI1VmFHBkOtF5DtY0LgxAmdiN6q5uv
      FXC91WVvmTfzmdM2LgxCORpbtTsHysWoydpronSdiAuT+MZ6cNvm9KgPzT4aKuPCZKG6urPh
      cQ1YaKMWWNgKLbCwrby2C9M4FpoBaRwLzYA0jsWD2bpDy5SmZ+7kroGaXjz193sQBDnR9dEU
      RTnUGuhBkk31HzgszZY7136nOaz+34L+NlEvr01hGsdCMyCNY7FntoawmM/ierPZ8LUrzDxT
      S2ULGKnzdz8FRxWESjqZcni8JI4qssgJisBUcZ1Z5msIaTSrLjADocKwvEHf/ra1IkucIDHV
      koLRbmf7ikySwMsI3qgUKKOVxJ4czGG+GDcYu3QkUSolOIiZSVxEKAOBlFneomtfgKeJLPIS
      wCmi3SV5CNOppNlmz2czlN7scanMCdlBSuUkQduhWBUBSWPko4JzEPD/8O//I2qwsoV4OFmq
      ZHY2w7u70YjVZnvvrX9BLbbw2mq1VlsL7gC+tri8TOt0t2/dtnf16A5ONfdkwTmmnK2wwnY0
      4fO6lmY+3U3Xo9FdXhRSqUwum/H39KjsRnRjfjGcG+xrn5RzbfaLaIGNBje8vX0GXVsDlb94
      70+i3phI5kr5rMfjBl/PziEJtUQhE4pt9nr8N2f+5O0aLZZTW7tLocicoKAuuxdVl53jzidv
      83SP09JGH65eLDFiaCviMmHRHNvT1Vl3oYqCc9JOMhqKrezEl9OlvN/dv2cKU9DLV86vr29W
      G+zdL2/OzC8ntzZqlVQFmAN+39hgdyzHyQK7fu/O7MIcRcD782u5fC5bVJMp8hF6q6tRyAwM
      DfK1/G62Us6naLOrUSkKXIOX1F7kk0V2azvOMrW2kkKjGEmW6pXS8MRUJBRU0TY2Pj6KETSm
      8Jlc4cn/RjG6XIoNB85KYmN48IX14E2H2SnLnILbG42C+gXB6PiYGmHaaOfL2cDI6E4yf2Zq
      SHXzHQOibD3V7+khjAEKx8DXpjAEYRluamqSL8eGRie7bHoKIwxGzExj/oEhHaU/e3pCrsb8
      I8M9Pp/fbzNk66F6Ua873Ba9lk8WGMXJ1vIK+NHrr6WyXKOaIQ39YqMMKLXjP0boXn/jjWii
      dRZVAAAgDfY33ngtlS/XS3mPV9XwprPYAWngKWJ6+tST/1spRiTUyDOZGmovlWKB3uloKjTU
      f6VR2SX0B9fffALa6LDC9jdk2GouXWbNHsHV1U1hz3/BytaTVQnvMbqtlYLdOQ2OVu5JPQfF
      hUFF4UVRXQnB58lBcWEsV6MoI/rEUP8djAt7PkdeCIp+862nBTpa7WD5ref5j4oaJxrNgDSO
      xYPAwuZk/9SBEEqS1KGgs2dA8z6Q+mVi8z7Qya0XdoS4sAdroA7Fwilf0YnGnwFNzdXrf9hI
      1m8aR4hMRff+q5BLVxsHViSBUNqNRuPJzEn9+9LoAI92YRDw/99//q/nX33NSUoVRWclxWS2
      okPZGmrHuPLI6UvddnD9/c8tRnH65Z8mt5bHz5wPL895BycykXW7f3Q04HuO3dB4XnztJPri
      5XPr68E6x8/dv7O4vIoL+UJdNur1iMJ9Ob8OAKiUcuFUrbKzYHD1fPbxR/lCKRHfFRVw9+6d
      59YDjefK106iOZadmprkK/HBkfFup8mmxwWEisUTDZkYC7gBSv3wL39hwBsKbV1bnL9y9cWt
      5TmTyZQs5MbGRg/7YCgLn372+djEeCS8Y3E4CTHPEj1nxnufZucePksRF+YXZEx34cyUGnlF
      5OYWlmSUOn96skWrt2ff6fZNplJbCGmmASMghtPDF9WkEIMSPzu/iFKmc6fG1egjseU780Gb
      wz45+vy9GcHND1l6SK6FWEidH778yIAQlPj+Gz8FAADwtW8tEBh4+PPk5GDzh4G+XgBAf083
      AODMlKoyfY+hKKLFbEulMxRJxOPxV14Y24x0ZCcIAEBQYmQoMLOyrVIeJejRob5opt5KSBFo
      nTWZjaAomstvKTJqs3WrPBRBcGp0sHcxmFSpD4LiJIEl4vFvggERCG529UKKzTQUsHcEYkrJ
      3/3pU4jrxvq7dZSMW3oH/e6d9bkP7m5iKPa3f/1TnY4UZKSUz3X5/CR+7AMkBUIEMZkstWI+
      MDCA4ZRe16mLfFAWguEdm1Vt0JksMJ/dvDd97mILGZ6riAq0GGy1en58+OVKMYLTal3lisgE
      I0mbVe1xNorhQJEDAwPtRTsPi5n8WOVPGwsvnPkh2BtYuDV3o24eH/bobnz0sSjkTc7+XC7v
      dDrWQnFUZP0e78SZ3mC4sLa69st/9XdDPU41D9Piwk4Wx4oL6x87FZr99M/XPzfbrIPDo1Zv
      IL6bOD3qN+pIq8Pl77Xfvbvq7Ooe6HFW643O6K9x8jgwMpWplrZi2dOTh14d70UbgU4WRxiB
      Duyq3mw7Pdn+AqjGd5zOFpxDUVRRlJNbgK3p1dIKzh3Esyg499id6JOIVnDuILQkmxrHRTMg
      jWOhGZDGsdjjjYfSO7/9Z4N3iM+GGQX/i5/8MrV2ez6Utrt7fvT9q3s/c//G9XC2fP7yy8O9
      xw01hLI4NzdrsLgalRyut6k8NYCyODs7RxptpyZGWkvKIruwuGr3dBcSEXfvUK+62Egoi4uL
      SyhtGh8OtBDLpldKklGo7UiYiYQNQu/p8/SrXD4El+7quqf8TkNbXRZu3/KfOr2zuUkZbJNj
      g+qaB2uzN22Dl73Wp58aNZNeKctmvrotILqJ3um923hYzGXNvZPpdNrcPWbS4+v5NCeB7e3t
      u2j5xnJixO/CAXz9L3+ZT6dlVFdJBf+3f/yPL790ZWEzZcAaTrPJ3tVj7B67POE/hDooPjTQ
      N78Ru3bx9P35VfWfOn16enZxva2gJDANVsqtLdEEpavWgDoDYqu5RLbi9xtbSsFiMYG7LvSb
      h2a21gjYoBQC8fSr0h8AHFNYVk2pNQVVYC69k6kIfsMh7qnhiMwKHbnXVsxuUT2vbocTBG0H
      X5vCZMFgc22srljcvb/+5Y+alkUQJIrApdUNoMhDbkNGpEgUIKju57/+lV2PSRDBUXDuhRdd
      Lu8vf/XLGzduT4+oDS1tAmVhO5rCEfmdt96yu9VWPoSy8M4f/qBGniANJA4dTrfVZqnX2wci
      NiF1RrvVWKu1lkdEiNtIIRiP6giMoq28wKlsHwBgsZjVCWJms5E2Wi0Gut5Gn69hNqts/9DU
      obHXIKCkzWiwgL1xYRBCWZYQBAMANk8yFFmWZBnDsKZMaOkOdI6O97pkWUYxDEAoSSKG4RAA
      ACFbK345v/naq9f2PkxFvTAoSRKCYrIkIQhKEKrOcJuXuNXJQ0mSUAxXZBlBUUx11Q5ZkgCK
      KrIMDt7GK4qMIKgkixhGKLKIorgkSSq38RAqECBPRpbt9xQFQRBZllAURw+u7fd4+4oCEVXt
      70VNXJiiyAiCybKAYgTHslrBuVZoBedaoxWc0zgumgFpHIvOFpxTFOWkF5wDhwzrabr/OqlU
      BzlsWI+iKFrBuVYcLbDw5BrQYQMLJUk6qa9W4xvCIwOCUPrT737zya2Z56iNxonj/wfpKR25
      sN9u8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Bicycle Access/Egress' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
