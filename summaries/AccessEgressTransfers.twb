<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='AccessEgressTransfers' path='/workbooks' revision='2.8' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AccessEgressTransfers' inline='true' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' version='9.3'>
      <connection class='textscan' directory='M:/Data/OnBoard/Data and Reports/_data Standardized/tableau' filename='AccessEgressTransfers.csv' password='' server=''>
        <relation name='AccessEgressTransfers.csv' table='[AccessEgressTransfers#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='weekpart' ordinal='1' />
            <column datatype='string' name='access_mode' ordinal='2' />
            <column datatype='string' name='egress_mode' ordinal='3' />
            <column datatype='integer' name='boardings' ordinal='4' />
            <column datatype='integer' name='freq' ordinal='5' />
            <column datatype='real' name='weight' ordinal='6' />
            <column datatype='real' name='trip_weight' ordinal='7' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>access_mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[access_mode]</local-name>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias>access_mode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>egress_mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[egress_mode]</local-name>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias>egress_mode</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[boardings]</local-name>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias>boardings</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AccessEgressTransfers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one  end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Bike at one  end&quot;' value='Bike at one end' />
          <alias key='&quot;Bike at one end&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Top Ten Index' datatype='integer' name='[Calculation_492299755485048832]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Transfers' datatype='string' name='[Calculation_7970221122403174]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Access Mode' datatype='string' name='[access_mode]' role='dimension' type='nominal' />
      <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
      <column caption='Egress Mode' datatype='string' name='[egress_mode]' role='dimension' type='nominal' />
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\AccessEgressTransfers.tde' schema='Extract' tablename='Extract' update-time='09/19/2016 10:52:07 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3000224114639164]' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one  end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' />
            <calculation column='[Calculation_7970221122403174]' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='639' timestamp-start='2016-09-19 22:52:07.242' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>639.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>639.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>access_mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[access_mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>access_mode</remote-alias>
              <ordinal>1</ordinal>
              <family>AccessEgressTransfers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;bike&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;walk&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>boardings</remote-name>
              <remote-type>16</remote-type>
              <local-name>[boardings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>boardings</remote-alias>
              <ordinal>2</ordinal>
              <family>AccessEgressTransfers.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1252.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.9593114241001566</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>6</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.0224303342736625</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.0216299972944398</statistic>
                <statistic aggregation='Var' datatype='real'>1.0453637884429532</statistic>
                <statistic aggregation='VarP' datatype='real'>1.0437278513718373</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3120.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>egress_mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[egress_mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>egress_mode</remote-alias>
              <ordinal>3</ordinal>
              <family>AccessEgressTransfers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;walk&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>4</ordinal>
              <family>AccessEgressTransfers.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>129</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>76530.0</statistic>
                <statistic aggregation='Avg' datatype='real'>119.76525821596245</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>12922</statistic>
                <statistic aggregation='Stdev' datatype='real'>705.07501633920117</statistic>
                <statistic aggregation='StdevP' datatype='real'>704.52309843361297</statistic>
                <statistic aggregation='Var' datatype='real'>497130.77866572473</statistic>
                <statistic aggregation='VarP' datatype='real'>496352.79622649826</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>326335072.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>5</ordinal>
              <family>AccessEgressTransfers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Golden Gate Transit (ferry)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>6</ordinal>
              <family>AccessEgressTransfers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>594</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>814542.48017145297</statistic>
                <statistic aggregation='Avg' datatype='real'>1274.7143664654975</statistic>
                <statistic aggregation='Min' datatype='real'>0.0096677240000000008</statistic>
                <statistic aggregation='Max' datatype='real'>148388.29434055299</statistic>
                <statistic aggregation='Stdev' datatype='real'>8173.8904700828907</statistic>
                <statistic aggregation='StdevP' datatype='real'>8167.4921203978047</statistic>
                <statistic aggregation='Var' datatype='real'>66812485.4169119</statistic>
                <statistic aggregation='VarP' datatype='real'>66707927.536760233</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>43664674697.560783</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>7</ordinal>
              <family>AccessEgressTransfers.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;WEEKDAY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>8</ordinal>
              <family>AccessEgressTransfers.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>566</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>966440.9751473628</statistic>
                <statistic aggregation='Avg' datatype='real'>1512.4271911539324</statistic>
                <statistic aggregation='Min' datatype='real'>0.019335448000000002</statistic>
                <statistic aggregation='Max' datatype='real'>148388.29434055299</statistic>
                <statistic aggregation='Stdev' datatype='real'>8519.5728792188329</statistic>
                <statistic aggregation='StdevP' datatype='real'>8512.9039366084162</statistic>
                <statistic aggregation='Var' datatype='real'>72583122.044321075</statistic>
                <statistic aggregation='VarP' datatype='real'>72469533.433923081</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>47769703473.735039</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_3000224114639164</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_3000224114639164]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_3000224114639164</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Bike at one  end&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Walk at both ends&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_7970221122403174</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_7970221122403174]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_7970221122403174</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>6</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>639</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>24</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Acc &amp; Egr Details.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Access Mode' datatype='string' name='[access_mode]' role='dimension' type='nominal' />
            <column caption='Egress Mode' datatype='string' name='[egress_mode]' role='dimension' type='nominal' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[access_mode]' derivation='None' name='[none:access_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[egress_mode]' derivation='None' name='[none:egress_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:egress_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' value='72' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>([textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk] / [textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk])</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Acc &amp; Egr Details.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Access Mode' datatype='string' name='[access_mode]' role='dimension' type='nominal' />
            <column caption='Egress Mode' datatype='string' name='[egress_mode]' role='dimension' type='nominal' />
            <column-instance column='[access_mode]' derivation='None' name='[none:access_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[egress_mode]' derivation='None' name='[none:egress_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:access_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:egress_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</column>
            <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' value='72' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>([textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk] / [textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk])</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Acc &amp; Egr Details.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Access Mode' datatype='string' name='[access_mode]' role='dimension' type='nominal' />
            <column caption='Egress Mode' datatype='string' name='[egress_mode]' role='dimension' type='nominal' />
            <column-instance column='[access_mode]' derivation='None' name='[none:access_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[egress_mode]' derivation='None' name='[none:egress_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:access_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:egress_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;walk&quot;</bucket>
              <bucket>&quot;bike&quot;</bucket>
              <bucket>&quot;pnr&quot;</bucket>
              <bucket>&quot;knr&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</column>
            <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' value='61' />
            <format attr='text-format' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' value='72' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>([textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk] / [textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk])</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Access &amp; Egress.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Simple Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one  end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Bike at one  end&quot;' value='Bike at one end' />
                <alias key='&quot;Bike at one end&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Access Mode' datatype='string' name='[access_mode]' role='dimension' type='nominal' />
            <column caption='Egress Mode' datatype='string' name='[egress_mode]' role='dimension' type='nominal' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3000224114639164]' derivation='None' name='[none:Calculation_3000224114639164:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk at both ends&quot;</bucket>
              <bucket>&quot;Drive and park at one end&quot;</bucket>
              <bucket>&quot;Drive and dropped off at one end&quot;</bucket>
              <bucket>&quot;Bike at one end&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='120' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' value='88' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Access &amp; Egress.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Simple Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one  end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Bike at one  end&quot;' value='Bike at one end' />
                <alias key='&quot;Bike at one end&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Access Mode' datatype='string' name='[access_mode]' role='dimension' type='nominal' />
            <column caption='Egress Mode' datatype='string' name='[egress_mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3000224114639164]' derivation='None' name='[none:Calculation_3000224114639164:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk at both ends&quot;</bucket>
              <bucket>&quot;Drive and park at one end&quot;</bucket>
              <bucket>&quot;Drive and dropped off at one end&quot;</bucket>
              <bucket>&quot;Bike at one end&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' value='98' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='120' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' value='88' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Access &amp; Egress.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Simple Means of Access and Egress</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one  end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Bike at one  end&quot;' value='Bike at one end' />
                <alias key='&quot;Bike at one end&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Access Mode' datatype='string' name='[access_mode]' role='dimension' type='nominal' />
            <column caption='Egress Mode' datatype='string' name='[egress_mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3000224114639164]' derivation='None' name='[none:Calculation_3000224114639164:nk]' pivot='key' type='nominal' />
            <column-instance column='[egress_mode]' derivation='None' name='[none:egress_mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Walk at both ends&quot;</bucket>
              <bucket>&quot;Drive and park at one end&quot;</bucket>
              <bucket>&quot;Drive and dropped off at one end&quot;</bucket>
              <bucket>&quot;Bike at one end&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]'>
            <groupfilter from='&quot;bike&quot;' function='range' level='[none:egress_mode:nk]' to='&quot;walk&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' value='64' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' value='98' />
            <format attr='text-format' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]' value='72' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='120' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Top Ten-Bicycle Access/Egress'>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Acess and Egress' datatype='string' name='[Calculation_3000224114639164]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (trim([access_mode])=&quot;walk&quot; and trim([egress_mode])=&quot;walk&quot;) then &quot;Walk at both ends&quot;&#13;&#10;elseif (trim([access_mode])=&quot;pnr&quot; or trim([egress_mode])=&quot;pnr&quot;) then &quot;Drive and park at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;knr&quot; or trim([egress_mode])=&quot;knr&quot;) then &quot;Drive and dropped off at one end&quot;&#13;&#10;elseif (trim([access_mode])=&quot;bike&quot; or trim([egress_mode])=&quot;bike&quot;) then &quot;Bike at one  end&quot;&#13;&#10;else &quot;Missing&quot;&#13;&#10;end' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Bike at one  end&quot;' value='Bike at one end' />
                <alias key='&quot;Bike at one end&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_492299755485048832]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Access Mode' datatype='string' name='[access_mode]' role='dimension' type='nominal' />
            <column caption='Egress Mode' datatype='string' name='[egress_mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_3000224114639164]' derivation='None' name='[none:Calculation_3000224114639164:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:8]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[Calculation_3000224114639164]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_492299755485048832]' derivation='User' name='[usr:Calculation_492299755485048832:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_492299755485048832]' derivation='User' name='[usr:Calculation_492299755485048832:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' />
                <order field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' />
              </table-calc>
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3000224114639164:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_3000224114639164:nk]' member='&quot;Drive and dropped off at one end&quot;' />
                <groupfilter function='member' level='[none:Calculation_3000224114639164:nk]' member='&quot;Drive and park at one end&quot;' />
                <groupfilter function='member' level='[none:Calculation_3000224114639164:nk]' member='&quot;Missing&quot;' />
                <groupfilter function='member' level='[none:Calculation_3000224114639164:nk]' member='&quot;Walk at both ends&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[usr:Calculation_492299755485048832:ok:2]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_492299755485048832:ok:2]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[usr:Calculation_492299755485048832:ok:2]</column>
            <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk:4]' scope='cols' value='Share of Trips that Use a Bicycle to Get To or From Transit' />
            <format attr='subtitle' class='0' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk:4]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk:4]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk:4]' field-type='quantitative' max='0.5' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk:8]' value='p0%' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='57' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' value='24' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='324' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk:8]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk] / ([textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[usr:Calculation_492299755485048832:ok:3] / [textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]))</rows>
        <cols>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk:4]</cols>
      </table>
    </worksheet>
    <worksheet name='Transfers.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Number of Origin-to-Destination Transfers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Transfers' datatype='string' name='[Calculation_7970221122403174]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7970221122403174]' derivation='None' name='[none:Calculation_7970221122403174:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='163' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='39' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' value='102' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='92' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='216' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' value='56' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='false' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Transfers.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Number of Origin-to-Destination Transfers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Transfers' datatype='string' name='[Calculation_7970221122403174]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7970221122403174]' derivation='None' name='[none:Calculation_7970221122403174:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='163' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='39' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' value='102' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='92' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='216' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' value='56' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='false' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Transfers.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Number of Origin-to-Destination Transfers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AccessEgressTransfers' name='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2' />
          </datasources>
          <datasource-dependencies datasource='textscan.17sxd0p0gtks4h11j0pvj1g1pdf2'>
            <column caption='Transfers' datatype='string' name='[Calculation_7970221122403174]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &quot;None&quot;&#13;&#10;WHEN 2 THEN &quot;One&quot;&#13;&#10;WHEN 3 THEN &quot;Two&quot;&#13;&#10;ELSE &quot;Three+&quot;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_7970221122403174]' derivation='None' name='[none:Calculation_7970221122403174:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='163' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='39' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' value='102' />
            <format attr='text-format' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='wrap' data-class='subtotal' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='on' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='92' />
            <format attr='color' data-class='total' value='#3f6a6e' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='subtotal' value='#567332' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='width' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]' value='216' />
            <format attr='height' field='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]' value='56' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</rows>
        <cols total='true'>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]</cols>
        <pages>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='Access &amp; Egress.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Access &amp; Egress.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Access &amp; Egress.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfers.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_8461011141606189:ok]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_8461011141606189:qk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_9741014131520740:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:boardings:qk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfers.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_8461011141606189:ok]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_8461011141606189:qk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_9741014131520740:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:boardings:qk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfers.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_7970221122403174:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_8461011141606189:ok]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_8461011141606189:qk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_9741014131520740:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:boardings:qk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Acc &amp; Egr Details.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Acc &amp; Egr Details.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Acc &amp; Egr Details.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:access_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:egress_mode:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Ten-Bicycle Access/Egress'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Bike at one  end&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:Calculation_3000224114639164:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:operator:nk]</field>
            <field>[textscan.17sxd0p0gtks4h11j0pvj1g1pdf2].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Access &amp; Egress.trips.est' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9aXRc53nn+at931CFKuw7AZAECVIUSYnUQkmOZdlW7NhxHO/ZOufMme7J
      zJkzMx9mPqTP9DndPWemOyd9Ot3uxEnHcRw7ju14lSxZsiSKO0HsO6oAFKoKVYXa97pV9975
      AIkWRUpcAIIL7u8LgMKt+9z3ve9z77s87/9RybIso6CwC1GpVCr1vb4IBYV7ieIACrsaxQHu
      MfVKlr/8q7+lKm2xJ1ov8Orr5wCJH3zrb/i7b32LaX9kW67xYUZ7ry9gt7M4fhmNWmRsPkRo
      5BfksOE2CEwsRnjmiSO8dXGGL37uE/zt3/w9H/3MF3jsYB/nX/85vxzxM9zlJBTPYLQ6qFQq
      aCzNgMzGxgbmxhZUtSz/6c9/iKzV4zPX0bnbWZwYo33oKKWVMRx9x7BXQ/jTGn7/q5/HpNPc
      6+rYcZQ3wD1FZmJ+mY6OVmbHLpMvC/g8TmLRGLIsYbQ3YqHI/GqS3k4f4+OTINWYWVgBsUpN
      peMTH32GYDBIQ2MTKtXmWfVGCz09PcjVHFqzHZUkojHYOPnIXhKZHPW6SHdvL9Pj4zR1dpNa
      WySWLd/TmrhXqJRZoHuJTDKZxu1uIJlMYtSpyVUkGqwGYqk8LV4X4fUYTS2tpGJhzE4vDquR
      ZDxKTdai16mxms0UqzWK+RxGsw1Pg51YOESxWsNs1PDXX/8G9vYBvviZF3C4XCSjYQw2N1Il
      R1XW4TBp2MiUaGttQv2uB+0SVCqVSnGAh5jNWysDKlQPUOOu1WrodLq7bkeZBn3IUalUqFTq
      B6rxAwiCsGO2FAdQ2NUoDqCwq1EcQGFXozjAe5DEOsVikUpV4N2Zgdvvj8oIQu0mh8iUSkVK
      pTLvzkHUawK3uxYmCL++ToU7Q1kIew8bgTH+9uVRrGqBFz/7OaqlIn7/EsMHDmI1ahC1RmKR
      KL17+tAgsbrsx+z0UStnKFckujpbWAkucP5sgC99+Tc/2FCtyF/8xX+h2eOka/hJWuxaQstz
      NPYdo7vZRjZfpppP4fC1YzcbSMYjZCvgMGvJZfN4WztIx9Z447Uz/PYffAXjzlXRQ4fiAO/j
      0PGnaa4tcvqN16gbGpGLMYTcG5TrMkaNwNsXJvjIb/8hzx7qYOLKZQJpCV1pHbPZyrjLgcrs
      oCRJN7XT1DXAFz76CH/zz29xPpOlr1FLXTvL2IUoLqedl3/xOl37j/Anf/h5lman+Olbozy6
      x4eoMyKOjRNLlZDy2R2okYeb+6oLlIn4mV5e5wf/+G3isTWuTAUAEIppLo6Mcu7SyHXfEcp5
      0rkSsiRy7vyF9/1XIh7f4OLZc9Rvwb5Gq2P83C85NxNnf08zB4eHsVtMHB0eICfbGOjppqW9
      h/7OJqrFNIFQApvZhK+jlwMDvTT6momFQxiNN3smq0iGFvnv//gSjxw6yJ7B/fg8DfQfPMJ6
      KMrRRw7S2dbM4YNDINeZm1vEYbOjtTVw7NHDWG0NqCtZZI2e909wirUcf/dX3+DvvvVtgqEg
      U/PznD83/oFXIokCG8n0LdTOw8l9tRAmFOL84Ecvszi/SM/APjr79+IfO0fX3mE2EknS8TV8
      7Xv55MdOEZge4eXXz9PWbCelbuX3P/0Uf/b//TvMrjYef3QfFy6P097dzZu/ukBPqwuNXssT
      L/wO/a2ue13Mu0qtusG//zdfx+7UcviJZxDqAvPnx+k+/AhyepVY1chXv/BpkqEl/vknr9DW
      3sz4co7/7X/6Gm+/9M8shlIcPtjPxbF5vO29GApBsrj43c/9JtodWk4oFotYLJa7bue+WwjT
      WdzEApM888nPMDY+jZkClVqNSHQDgFwmRblaQ4WKpaUAlXwUm7uFRm8jAHqzgwa9xOjEFP1D
      B4gnMnS2NGMx23n68YNE45lbvpZaKct8IHjd53WhTLV28y7OjZienuJ2nze1Sp75pdVrPium
      ovzq7fO88ctfkitfP+D2tfVw9NBeIsEQ+UKZTGqDqlBmbHSc8MoqFQmCy35q1RIaow1fkxc1
      EiuhBN0+C/6VEENHn6SS32B05ArhUJBK7davu1rKE4puUM5nWI9tkEhd/4YpF7IUKzeZLHiH
      9XiU9XTupsclUmlEWSaVTjK7skpgfYMbVbcsScQzm93H++oNABD0L9LY2U14JUibz8XSagSr
      3Y5Wq0GWZJDqtLR1sBFeJpkr4/U1kUznGejrYGl+hqpsoL+7hanpOfr3HyS8vIBGb6G50UZJ
      MtLovPbJEpwb5a0rM/QMHqa2sURStOLWFSmW62zkyvQNHODk0QOMnvsVM8Es6nwA577nef5Y
      Lz//yY8RTV58ZgF/MMaRx59g4sIZeocf58j+3qs2RKHEj374z8yFkjxzZA/pugkKcaoGNy1W
      afO7jz7CmfOXcfva6WpQM7Oa5vjBbt4+fwljQw+/8+Ip3nrlJ0TyYKnFWUpV2YgX+L/+z/8d
      s+7Xj2ZJrHLl0iiS1sDegW5yxSqSICPLVXQaiVQJ9u3pIpeKEY6laPB4SWwk2LdvkHxyneX1
      LL1tbqoqE6V8Fp1cISNoGezt5FYXlNcm3+Y//tMFPv6Il+m4hqGBTtobTOREE+1uA7PLMTrc
      OopqF/lUDIe3DbuqSGSjwJ6hAxhU4tU3wOiVM4ynJKq5FCcfGSadK2PViZQw4dHLRDJZDu3d
      x/T8HBcWV/hfPvdpwiE/X3/pDJ9+5klqhTSOxlb80xfR+/Ygl3Ps727h9Yk1fu/5k6r7bhDc
      0bsHgL6+HgCGhm7cZWlq76Hpnd8bPW4A9gwOXf3/I0eOANDb149aq0WtUnGjl2ouEaOl7yBT
      I6dpb2ljaXGGUoONF59/mv/nz/6CzsFHAMgUyiSDS/T2t9DV1UkpEyVbt1IPLlK0Gzk23M+Z
      t99icSWMaPZe4wClbJSqtgG3rUAkluDxJ0/y+ls5SAZYMqgZOniA0QuXqGobyIfn+cVYDIPR
      xmv5NEePHGRhtQBUWFhJ0+HRUTW6eOrUAeam/dc0fgC1xsCjjz129W+b7dryNr/z0+FuwuHe
      rMEmr2fzM08zhzybR9gAnFYAPEKN6wYbH4oKr1nNZCiH29HIeixOLpyhpPVQcamZX42j7/GR
      r6WIFWSE+dOoxQItDiuRlm663aarZ7qwEufjx4b5y5dXmJgcpaN/mJXwMpcC6zRZVDTZzfw8
      mUZvdlKty6hQ4XW52NPdi0tMc6GoIjR7GpNK5EhTmcnVBcIbG/i69gMP0SxQtZQjFM/R1GBm
      I5XD3tCIVM7wqzd+xWOnXqCYSdG3pw+t+v13Us1aYIFTv/FJ1pemOH7sOG6HCZPVxVf/8H+g
      Wi4BYLeYGDp6jN7OZpLpKJa93fQ1BZD7TtJgkvF6Gjh5qo322VGa9+y/xoLV3U67a4mSZ4hO
      rwN3YzsD7SvUjN0kl0dZWU1w6qlH+eZPzjB84gmedsDEUoxjh/u5NDLJ/sG9gImTxwaI5OBY
      jxfJ6MCg2t74/Xw6QaYiY9FDLpunsaWdbDzM6798i8/+wVcx3fwUABgsdh577DDpooBNp0PW
      abHKRhajRVyNXWhXo2hNdlxWA65WD7monlhgkoVggbbj196fp/Z28eMLkxwc3IeRCo+2Oviv
      Y0n629posJmxaySavC5euTLNYFcPKhWUy0W62jpwezQkxs9yaP8B4iuzrEY3KIkG9nga2Nvq
      Be7DLtCd8u3/9h8YXQhz4sQxslUtMhLVRBQ0Mj3dXYzOrPCFr/4+HY3XPhLzqQ1kox272XBP
      rjsejeBqbEYrlYmkq7R679EgXarxZ//2/yaUhWOHe9DoTYiyjmgyD4Uc/+J//Ve37AB3wviF
      N5kP5/jkJz+OXKvszkHwVmhr76S7f4hWj5PDjx7HabNgNakpViWa2zqxqAU2UtcPpGwNjdvc
      +CucOzt606NK+TT5cg1vUws6jQqVznzbjf/y2XPc2jDyFlCp6ezqZN/wME6Xm2NHH8FidaIV
      8ohq7e31gO6A4eNP8zufeRGzfmd3pT00b4CdplbO8p1/+Ec8PQdJL4+Srah44sQRLly+gqT1
      8sdf+/QNvzd+/g3OTS5jIYtr4BQff2wP3/3Od6lqnbQ6ZILhDYaOnmB65AKd+47w3OOHeOXH
      /0SkqKXLrcEfjLLvyONMXzpHMlPhT/6PP3noVoJ37TTog0QpG2dscp5QeB1RZ+XQnhZm5+bo
      6BtE8yGPS//KKpmNNdxN7Xi9jVSLaUpYEDNxooUaHzl1nKWpCSZmFgmvx0GuMXpllNDKKrF8
      mWefPUloaR7R5MFh0u9cgR9SlDfAHSLLEgszk5gaWpFrJawGLVqTleWAH4fTS3dX6w2/t7I4
      S7Guxud2kClL9HU0s7I0S93gwqiu0+CwkS1LpKMrOJt7aGl0EA+vEsvVcdsNOBx2MoU6hUSI
      usbM4N49PGxb2XfyDaA4gMJ9h9IFUlDYIRQHUNjVKA6gsKtRHEBhV3M1FKJUKt12pKKCwt2g
      UqnsmK2rDmA2m3fMqILCzdiJWSBQukAKuxzFARR2NYoDKOxqNH/6p3/6p+/9IBXxc3Zihe52
      HxfefIXTF8Zp6+7FqKvz/b/7e85fGcXh68Rl++Dg2Fphg5nVJBq5flfGFkI5z9T8Ml63k9HR
      cXzNPubHRzC4WzCoZaYnrrAWz1DLJ5hbWsWgkRgbn8La4MWk38oWCJnRSxcoCDJul4P1VT9T
      8wF06jozM3NoTDamRi8h68w4bFvpw8oszU6xtBrG6/Mh5BOMjE6gM1uZn54gU6rjdpoYnZil
      ucm3BTubWzzHJ+dpbvIiFFKcv3QFjcnK/MQoNZWO8PI8iWwZt6fhrkeEvkutVkOvv8U4J1nG
      vxqgrtEzPjtDpiqSS8eZW0/Q3ugmsbHOpYUATpeb9bUAgs7M5NwMyWKNr//5f/zX170BRq5M
      Eg3Ok9kIspBU89Gnj1Kvi6hURl742JO42wdYufRLfvLLN/nZD7/D93/2Kt/+67/iv/znrzM2
      co6//ubfsx5LsDhzhf/wn/6SYlXc7vohnUoSi29QyqUIrcep16usLa9QkUAsp5hdXqdSLjM5
      NYNUE4hFQpSKWSLJwpbsyvUKgdXwVUGqpWCEAZ+eUF5LT5ubVf80q+vZmwtj3QJN7d2oqnmK
      gohKZ8JjVTExepn1TJVKpcz0+DiR+MaW7aRTSWIbcQCKmRjZYonVJT8r6xtUBYGA37+jYrW3
      S00oc3FuCZ1Wy2B3FytBP4FkhVo+Sw2YXl6jyapmdi3K6dkAJq2aga5OQtEY8L4ukFwvMju/
      RCWbZHQhQjm7wdLCIrlS9Rqj+XyVE48OEEsXWF1ZRdLaONDppqazUEpGWAisIBttdDS3otdu
      fy/L19qGSafB6vLidpjR6Ey0tWw+CVUqDS1tnQilHC6Pj2abjpnVDQ4OD5KJJ7dkV0bNscdP
      kI6uIcqgkmUKZQGtXGEqkGB4316efPoJ1laWtlzGWHAJg6cDh1FHKZfB0zlAMRWnq2cP2USE
      QqlCPp2itsXnS2NTGxbDphR5IpZi4OAwhUKWEyeeILq2wsEjxxHzMYr3qQ/oDGY8DW4MUoW3
      JuZ4aqgfo9lCSZLRAc0eFyMLQbqafbR63OhlgdPjs5x69BDwvmhQoZghXpBocVtYW0+glyuE
      kyWGD+5Hp1FTrxSIZspQKeLraGV6bBKzw4Feo8OiA5XRzNKin4H+XgoC5OJh+vYdwLDtTiAR
      jyfxehvZiMfxeL3kknEMTg9BfwCbSUNVZaLBrCKcKNLV6mYpsEbfwOCWukCyLLO2vIja7KaU
      S9Lqc7MazdBg0RBNZmlu7SC7EaahuRuPc2tdoIWZSSp1NS67HpOzhejaMp19/SRCy5gammly
      O4jH43i93i3Y2SQej6Op5REtPuJry7R395KIrGJ1tyCXU5QkA90dLTvWBbrdYLj1ZBKjSmRu
      PUlXaxu5dByPx0csmaHRqiNb19DrcxNNpbFoZabXYrS3tNHudjxs0aAytVp9R5Ir7FQSh3qt
      hlqr47qtzA+onVthO6JBZVmiVpfRf0jeMyUcWuG+RAmHVlDYIRQHUNjVXB0R1ut1JRhO4b5A
      FEVqtW3Tu/hQrjqAKIqKAyjcF4iiiChu//rRjVC6QAq7GsUBFHY1igMo7Gquc4BSNsHsUhBZ
      lgkuzXDm/GUK2SSvvfYar711llr9zrTxd5J6tUR0I4Usi4Qj6yDLhMPhG2rF3w6yLBFYmCUY
      2YydScbCTM0uUC5mGR+fIJ0vUytniSZurmV/OwjlHJMTk+TKAvVqkfV4ikgwwEoouq12auU8
      kxOTZAslFudmiCWzLM1NMXJlDGFnuuTbQmg9xMzaOgClYp4rC34qdZH5gJ9otogsi/gjm3V3
      nQOMX77E+fPnqOTjvH5xAYdeZG01wOjcCvV6nVsWib+H+OemWFoJEQ+tMjo5SzmX5PS5S1vO
      qCiLNSwuLyuLc8hATVKjK8aYnFkgU5Uw6DVMXnybxXBiO4pxlWK+TFeXh8kpP+OXL+APhlFp
      DawuLWxrlshioURXt5cLb79Frm7CPz9Nd083xbKA7gHqK9TREg6vUQdG5xdxGSVeu3CJmtnD
      9NICU3NTXFmJAO93ALnGxOQMlXSEyaU1tEYLPp8XrVqFr6Wdgb4eNPfDWvlN6Onfi14DvvYe
      GmxGTA4PnS1bj5lRa/SkIwGauvpRASatSLRmoau1icN7Wjn75q9Il2WymVvPRHMr2F12Ri7P
      0t9hI1Gok81k0Ok0aFQS5VtJfnbLdhxcuTTNsccfo16Ik86VCC7O0z24/0F47r2DTCYdx9fS
      gRbwuuxcmvWTKIv0OCFfKDAXSWA0bIbzXxMZJhQynPzE7zDY7mTGv86B1hJvj8zy5PFhtJOL
      nD97kYbf8mE33P0YmK2g1uquJn1obt5M+NDc0vxhX7kl6rUSiWwFr7XKajBIJh6hwWZFVmlY
      DAQ5dPxJPMY6y8ntncOOhVYxO92IGisfeeYpwvE0yXgcR2MLxm3URYyHVjE63JQrNYwGLfsP
      HEArlvA6Hpz94qJQIpqv0eNUsbweQ6PR0tM7yB63hZHFCL9x4iT1QoKqzgm8Jxq0Wq0q6wC3
      wU7Fq+xGyuUyJtPWshFIUp1ipY7N/MHa2SaT6f5LkfSgoDT++xu1WovNfPPm/QANbRQUth/F
      ARR2NVffEWq1WhkDKNwXqNVq1OqdeTZfdYCd2N2koHAr3JYqxBZRukAKuxrFARR2NYoDKOxq
      3ucAIquBAMsrQWqiRLWUJ5UtIApl/H4/wfA6QqWI3+/H719GEO/VoFmmUCgCUCoWEEWRSGiN
      6juBetnUBul8kWopTySWQBJrBIMhpDsY5BcKBUBmPRyiUq2yEvCzuhZBkqGUz+D3B6hUKywH
      /KRSKfx+P+HYHcYCSXVWlwMsr4aolguE1+PI8mYQXii4eU+i4TXypSr5TJJE+s6D7tKJGMlM
      nnIhSzi6gcy1djaiEYoVgbUVP4GVVbYSA7lZh1AuFrjaZGSRfL4IyOTzeepCmbVw9PYDFmWZ
      UDRKpS4ST2yQqwiE1sPMB0MIoowsSwSjUWqSzGo4xHo6RzKVIFPalGB/30pBie9+63s0NVvo
      Pv4JxMg4yxmZzz7Zz8/emMAlJhh+9lMsnnudsqWDls5O2DG1mF+z5p9hZD7Gb370cb7/j9/j
      1FOPEcoI+EMJnjx+gPVYkvXYLDqViEYNwQUNZpuRhKDjkb5blxIsZTb47k9e40u/+Sy5UpHA
      eJqDexo5e2WJjrYWJkdHaewZILEyR7RspKnFgpCN4g8naPV5br9gKjUNTitnRmZZWaxgtbtw
      ut0UghOsF9UsLodpa29l7tIlZFEACZ78yLPvv4k3RxKIbmSJrM/Q3tpMPhXHYHVAfIZwTk1g
      LY630c7sUpBHhwd488wInZ2dt18eIBFe5tXz03zm+ZP84Ac/49Nf/DIWLQTmRpiLyJw40MxP
      3hhlf7sLlUaDoLXQZL31jkkxlyBTKjJ+IYDB0oAoBHliXx8jY7P0trcyMTOJ2mRmbTrBerrM
      qf06rqxuINU3xd6us6TR6LA5HGQTMUZGxgktTBHLVknG1lhJCHS3tXCgv5fBoWFMd0H17VZo
      7x3AbTMycuY06HQkcyVy6QRqjRbQ0N7qpVQVUMl1coUyohoSqQw6bu8xZnY20t/Vgt7mxmHU
      Iskiq4uLHH7sOCoVNDa3UAwvEqkY8JhEJuZX8K/FeXS4/84KplITD62yd/gQlUodlVAiV64h
      yhoyySRmpxt1OYGnpZ16tUi5JnBHOwfVehodWow2N51tTaRLMg6zjrqsJZtMoDNb8LmsCHWJ
      TDRI99AjH5r7+MPwtHbT6nVgsLoY7Nt0IrGc5tKUn2I2xekzl1DVKtSQSWZyqOXbu0cGawPq
      ah6X2wu1AtFMkdVQkMMHhtGqVEQLVZrNGgRRw94OL5cWVlHXS0TSeeC6N4AGu01Prlijt1ng
      5ItfZtALo1MBfuPjn0GbXmAjXcBkcyKZ7uW0qQq73c7w8Amcs5NYbXZK1Rp2u5noeoSV5WWc
      rgYcOhGVTsBut1EsFbEYb/+a7XYHlewGS2sbuBq81CvgteiIRqNUK0XydQ0ek5pEMkNz5x4y
      cgWD5s4fDFVJR7vHTqW7jY10Acop6moTVosVnZhjcjXO0EEvTqcTQb5DISuxwpkL4/TsHeL8
      22dwejtIJ6MIKiNWqxWLTmRmfhmXy0VeqNPZ5bzj8gA47HYArHY7KqlKoiDz+c99mvHxIMPD
      A4yPj2PWgYwW44cIWd2IpeUlEhXwNWjJpkWeOvIIG7E19toNhBNJWpxWJiJ5Wl0Wouk0bV4P
      kY0ETxwaBh66RNkyqVSahoaGu24plUrtiJ1iJoXG5sJ4p4/gW6SUTaGyuDBp764dqV4jWyzj
      ctg/8JjtCDSUpDrJXJlGp+0Dj1GU4RTuSxRlOAWFHUJxAIVdzdVBsNITUrhfkGV5x9rjVQcQ
      BEFxAoX7glqtRrVavfmB24DSBVLY1SgOoLCrURxAYVejOIDCrubaUAi5zve//S2ypSpHn/sU
      XlMdk83Byz/7BT6fi8G9B5BRodfIiGo9gdkxevceol4t43Q3YtxSDt7bp5RN8NNfnuUjTwwz
      tRDC1uDl8P495BIh3rjsp92tI18UcDS4EAppbO0HGGx3374hSeClH/2Y4Wc+TjZwibSqjROH
      e4kEA5w9e56hA/uJZASG9/Vw8ewFDhw5RlvTHQTDAQvjZ4nVXVjENPmSwOHHnoBSirGRCxha
      DtCizRDIael01AjE4dknDt+RnXcZOf82mUKFoydPIaUDXF5Yx+FsxCjm8cdL+KxQFbWcfOrJ
      LanD1co5fvyTX/Cxz3wOs1zktTcvYG9wY5SrxHNVultchCIx9j36JNY7bEbxeIjX5yLscZtY
      TRb41FOPo5ElXvrVq7T17SMcTWAymfBoK8SkzfCOa4tUSVE2tvK13/s9+nwmzp95g+/84Bcg
      SUyMjXLpzZc5N7HI5NglvvHfv00sFuP8Gy9x5u03eOXc5J3Xzh1isDhpb3KT3IgzcPAI5VwK
      WRS4PDGLQQPlGgy2NWL2daLXqLFb71BrRqWlr6cLgN49fajemSzzNXlp6hzAYTZh0YqE10KY
      7S5CofAdl6mjqxe9RqZSV9Hf4iJZqGB3NaI2ODjYaWdudQNVvUpbTzeGLe+blakJAoIgIMky
      kigjlMugNaJB4uSTJ5E1Brx2DYUtpknV6C10tW+KkwmZKHlRR7lcYejAELVKmY49g5g0MkLt
      zqTuCtkEFxeWcNobONDbgyhvNu4r0xNsVDXEolEeOzyEUK1gMxrweTYfhNfWoNGNRVjnm9/8
      JhMzsyyF0mjVEhqdnramRkpVOHRggJnZRQwGHWqNGq3BxOPHjiJJO6+eqtFq0ajVeLw+5iYu
      Y3Y0kM7k2bd3EEmSMOtUzIUTpJfGCGYlDOo7nOZVqdHptKhUKrRaLWq1inQ6TS4eoqG1a7MW
      ZRlJBo1GxVZCxLVaHWq1BpNWZjGSwUyVilBDYzCh05sZ6OtEkuXN47ZBr1Cj1WIzm8ikk2QL
      Ak6PB5VUJVOVabTqUYlVNvISVsPW7Kg1GrRaDbIkUFZZcJvUyLLE2Ng4Rr2e2elJZJ2BWvXO
      PE1nsODWa/G5rZyeXsRlt5LK5els7cBiNuC1W7gyMU53Zy8b+Srtbivw0CnDyUSjcZqabj3m
      /06JRqM0NTXddTv5VAy1tRGL/u4O1wqpGFgasRrurh2pLpDIFPB6PjiQcLuU4dZTeVo9rg88
      xmQyqR4yB1B4GNgOB7gVTCaTEgynsLtRHEBhV6M4gMKu5uqM604pcSko3AxRFDEYtjjtdItc
      dQDVg5MCRGEXsFPt8bouULmQZXl1DVGZEVLYBVy76CxV+Pa3vktbq4esoEaTC6KyNWOhhtvr
      IJbIk4jFsLp9jLz1Ev3DJ9jf3062qqGj6e5vEFdQ2G6udYBqHpW9hVPPPUU6tsbPF5NoihNo
      VGaOH9/D5ak1JK2V8rwfWVZhEJL80w/HefJjn7lHl6+gsDWudQCTh163yLe/+32eeOYjWGpJ
      tL4eOuwSZy7O0N7Vg7Oxg0zUgKZuxdrcRfTtGXqaHffo8jcppNYZnQngamxlaE8rZ8+cQ29r
      wKKuEs+Wafd5iMRi7Dn4GD7H9g2u5qdGiW5k6OjuIhIK09a3j8TCBbxDz9HesH2TCtVshLeu
      rHBoeJCpK6P07N1PYs1PWdZz4vGj2zaVJ0t1XnnlVZ5+9jdYnjiPpmkv5MLMLq3ywideRL+N
      CfnuJufHrpCuwkePP8JyYIGVZJb+rm7mAgHcDV4qhTSSbjPx3/vi7lQ8/fynePqdv/Z0fe3q
      f44+9Z7DhnoASK2v8slPv8hdlpK5KatLc6C1byZVEGsUqiKF5DJNTiO5fJmGI8coJkJki5Vt
      dQB/YBlXQyMrK6scPfIIozN+PEYtQn17x0/pjQ1UGhWJ6DqlukgqlSGVTlERdd4uELEAAB+h
      SURBVEgydyaOdSPEGjqDEUmWsJtNxKp1BnxOUoLpgWn8slRjLZGmrjagBro6ukllx7gyMYpk
      cmLOJzG420lFV4DrBsEyV86+zt9/+ztEUvmbGmto7mR476YzSPUqiVSC0StT21ykm+NwufF4
      PCQ2ogiSCrfDgtlioSar6Wh0MTMzjaO1lXR8exNYuxt9OI0gyGqCayEsNvtVFbTtRGu00dPV
      QnwjQXd3D9lUArXOiMOsobqNMYgqnQm72QCocTg2BaX8gRD9e7q2z8hdRqzksTi9OC1GhFqN
      syMXkK0+2j0eBprsbOTK1MpZ9KbN+3StMFY1yTf+8S1+55MnyFVEXvv5z9DYfbjURUKJNHuH
      hpkan8Lu68CrKxAuqDi2t5XTFyZo9jqYj5XZ296Grp4imCwzPNDB6FyAtp4DfOLZ43et0LIs
      EY9GcTZ6Ca6s4nM7QW9Gr6qTKQg0NtiIxpI0tTSh2cbptVq1RCJbosnjIhbfoNHrQ6qVkTRG
      DNuomypLIuvrMbzNTWQScUz2BqRqAUHS4nZtr8OVS0UMRjOIAlVJA2IVg8myfW+ZW2CrwliJ
      VAK90Ugkkcdp0lARZVob3URTWVrdLqLJFF63G51G/T5luHqRr3/jOxw50Iuk0TE2v462msSg
      MfP4iQEujK/ibt1DYnma8PIUVb2Pfd0NeNoHsWoqTEeyqPNFytUCTQ4tBdHAnsMnWJq6zOd/
      +7PbUTcKu4CdVIa7ThoxFQ+zHE4ydGA/Yf8camsjunoFZ4OVZKaEwWSjWsph0kpEszX6O31M
      zS6yd98ggcAqNqsdq0Eikq7Q3mhDNtgpZFO0t7Xd9QIpPBzcUwdQULjXKNqgCgo7xNVp0Fqt
      pmyIUbgvqNfrCMIWNyHfIlcdQJIkxQEU7gskSUKStpCU7Da4rgsky/J1zvBrsdIPFy290XcV
      FO5nrtMF+uE/fItSTaJl8CjH97aRq0jE5i9j6jmKjTxvnR7h488/RU1lQCMLFEsVvL5mtCqB
      7/79PyCIIn2HTzHQYkHSGlkcu8Keo8epZjI0tbSg3UL6IAWF7ebaTfGlON/62ShDrTrWilrS
      wVn0Gi1GuxOjUU+6IpNLJMnFlino3Ay1mlBp9DQPneJIi8xPL63RbiqSU7vR5ENcXorhlis0
      dvq4ODLLky98judPHLjXZVa4z9nJTfHXvgGMbhxynGm/jKOlF4tBS6oMXrMBo93FytQcWp0J
      j8dNc2MfFl2Jff09rFUlDK5WVKnTLIoyTV1WpmeXMdvctDbYqOtMOFweOloa70pB6tUCV8Zn
      6OwdwOc0M7+wwHoiT1+bm42cQG+bi9mVDQYHB3FY7jwWSJZFZqcm0Voa6O/pQKwLzM776Wxy
      Mb8Sobd/L+WNZfTefjx3Km92A3KpOCurq8gGB1Ilj62hCbmcoljXMjy0l+3cOxJdnUPt6CC+
      Oo/R6YVymgpG9g/23YOEuLeBLJPLJUlUtUjlFGlBzdE9XRRyacZXwwx0dzKzsExvVyfr60Fs
      Ti/w/i6QSs2Ln/vyez44cc2/Tzx+7d/v0vXOz89+8StXP/vIk09cc8wnP3FHxbol8hsh4tkK
      bZIMGh0dzW4yVQ0Ol5tF/2UWSxtUVHbkrd5CGRq9XiZmA/T3dJBNJlhbjyKX07R39DA1M482
      58dn691WB7A3eKkvzNPVO4hB08rlkctkkyl8bZ1IwHbFqYnVApcvXaJtUEZt9LIRCTKwp4fL
      ozPsu88dQJYlLo+N0NR/hPVMHeoFoIvLCwEO9jbx9sUrCCY7XbUSC9EUR5yb2lHXZYo/86tf
      8sorr7AaTX24RbHMon/taiIDoZBmZXWVYHjjxhdYr7Aaim61nDdEa3Zx4tghAosLAPgX/PQP
      7iFXKNHW6EK2NfPo/mbm5la3ZEeWRARRjUEtUZehwdeCw2yguaWF4HIAvdFE1x0mlP5wu3WK
      oganWc/YyCUOHH6ExqY2tPUC5TtTErwh8UgYo9VGvlCkXqsiy1AqC7jMakq17bNzN1CpNehs
      Xpr0VSxWC+I7k0iSSsV6NIm7rZPn97cw7l/no8eOEFxf3/zetcJYEsm1RV6+tMjeZivxihpd
      JY1sa8FUTxKJZzl2/Cjnz1/k+InjzM8scmVkhD/+V/8zgYuvYWhp481XLzB4+DBuo0yz106q
      rGJqbJSjTz7H6LnTfOa3P7PtTxKxVmFhYYnmzh6SsSg2q4VGn490PEI8W6GjqQH/aoQ9AwO3
      nYf2vciyRDCwhNrsQijl6O3tJRaL0WC3sLC8Ru+efqRSGtHgwmbcvvhhWRLZSKZwmHVMzy/j
      9Pgwa2oU61p6Olu3tT7L+SQ1jZ1UJIDJ1YRYTFGW9dtu50Ov4Q7HAOuJJE1uF7OBZXxeH4ls
      HpdRTUZQ0WTV4Y9nGGj1sbAWprOtgxa383pluFouxk/OzuIohxl46kX8kyNMz6/isKgZ7vWR
      0bWQCi/ia25mJZKnXkjwxS99gZ9+/3scPDrEyGSCzEYAu1FLT7ubgr6F7LqfhvZ9rM9e4cUv
      fZG7t99fplaro9Pd/STetVptR+zsRrZjELz5tgbDhzzwrh8EA2q9mf7uDox1Fy6rnlKhwL4D
      +2mw6vG5zOirGuKrEh5fC0ZLjdKGilRRoN3roChZMEp+Bg4epVFXZH41xsBeK8mgiNfjIG62
      cHfFV1Q71iiVxn9/o1JruBWZ023TBq1X8qTL0Oi6cWZuuV4lmirQ7L0DfX6FXcVOToMq4rgK
      9x33ZB1Ao9EoDqBwX6DRaNBodmYT8lUH0Gp3Nr2RgsIHIQjCjo2xlMAchV3NdaoQr//s+/z1
      N/6SM6PzVz+dHTnDcjwP1Hj5pVdvfCZZ5KUffpdv/NV/Y2T21wtOK/ML7Exkt4LC7XPtlshy
      nL/50SWO9jqIlPUkli6TKsn0dDRjtDuZnFlArdajLsUo6H10WStsZMocf+F3OeAW+OG5VQbc
      dfIaL6XQOOOhIvpshK6D+xm5PM0nPvc1Tgz33sPiKjwI3LstkUYnqlyIQGidSDROtS5hM2io
      CiJCpYzd2YBKEsnnC+g0GrRmGy985AnyhTIGRyPF9UWCkQTR6ArzgTiyKNHV2YFcF5DVWmBn
      NjmEV/2svBN2EQ6HqVUKTExMUa1v3b4s1QlHNs+dioUZm5iiKsqkE1HS6RQTE+NMLwS2bOe9
      iEKZqYlJStUa/oUZIvE0sfAqgWBkW+3AZk6ybEnAvzDDeiJDLLzK4vIaD9L0SDaTZPyday6X
      8ozML1Ku1ZheXCCeLyPLEsvrm/fwfcFwer70ta+wkcrR2OilXilQFCQsBi1qvYFsOoVOb0Sn
      khBkLTq1hMGgp0nSoNLp+cpXvkgqW6CxsXFTvEmrR6dVIau1nDyZw+29+8nroM78UhAZGYe2
      yi9+dZHh3mZ693YzOhHgsUf67vzUsszc5BUCGxVaW5qYmZrG1d6HRizz6ssvceKFz9Ns1xOp
      b+9adzGfpcGu4+3Tp6nLWpqrKgqZJGatTKmlBfM2zV/IUo03fvFj+o59nGg8jxweo5hO4m7p
      pLur/Z4rAN4SssRP3j5HV0cfdSCVy+M2yoz5QzQ57FyZX6TNLDGR2OyYv6/qJMJrIQQJTBY7
      Lrud987Get/bgKUaG+kiNrsJPSDVKlTqMqJQQUaNu9F7zZlt77zShHIBAQNW010a5dcF6qJI
      TVYxNTO3KY5VqmGxmqgL2S2eOs9KKEWxKiDJ0NazB101wUu/WkFrMJHJ5kmtxTj55OA2FWYT
      rd6MrClRzcZoP/A0qdA8eoMerZqrQV/bQWhhirreSnwjhigIoJYx2T3o63lKNbA/CDlU6gVM
      jhayhQw6wKBVMREscnRwD5V0iHqtykQwhcnVClznADLp6ApvTAR54tGDyDoDmmoOnbMVvZgj
      nshx8OAQo6Oj7BsaZHR0jsDSAl/6/T8keOVNUlh46ZU3+ernX6SKCae+ykaujlTKIOlt7Ott
      JV3IMzYT5rc+furuVIDGQHOjC0Ft5MjwfpqXlmhqsHLp4jxDhx7d0qm1Bjsf+/jz+P0BQmur
      qCWBcF7NRz/yDPl4EI3diUFsQ7PNMmpyvUwossGhx58lFV2juaMHjZClJOmxbuNzpH3wMI4G
      NyW1k/DyHEZ7K3qpSK7Kttq5q2itdDfo0Jg8LK/HiETWcDsaKOUzBLM1Hj84jKaSoqzfTJ96
      nS5QLRflh29N4yiv0nLkYyT844zOhXAaanS3NFC3tbE4M82Jk0eZmg2RT67zR3/8L/jZP32H
      IyeP8cbZcVamL1HVutjf1cDwyWc5/dppDu/xMrEc4yOf/AxvvvJTvvblL92T+tkuCoUCVqv1
      Xl/GQ8l2DIIlqU6+XMNh+eAVZZVKdX0wnEqjx+txYa1Cm9fKyJvrNLU243MY6WlxkBRtJB0m
      KlWJ5uYWbKo82bKAx26irjHT1dVJkwUEo5cGfZXWJh8Dg4McOtTFL0d+SJtLi9m0/QKyO43S
      +O9v1GotDsvNB0fbpgxXSq8TKxvobrlxpph4yE+8rKPXo2O9pKenVQmKU7gxijSiwq5mJx3g
      6jtCFLdRaF5BYQtIkrRj7fGqA9TrdSUaVOG+oF6vU6vtzCZkJRhOYVejOIDCrkZxAIVdzfsc
      QGBhfnnzV1lm7PJlqnWR+fl5ZFlmfn6Gs2/+kpdffhl/KM74lctUavd+8CwKZaYmx8kUNjWK
      AgszLASCyJJIcC1EtZRlfHyCcm17g/E21teYmJpDlGUS0RCFssDU+BVC0e1NxvcuslRnbnqS
      aCJDaGXpLgSpyURCa9TqdRbnpglGNlhbXsS/Gn6gguGQZeaDawDUhDJX5hfIlspcmZ0lmi3i
      Dy6zEIkD1zlAlbGxuc0vlhKMXDzH6NwakaVp1kIB5lYz7BvsJ5mv4rPUuXThAmNzwR0t240Q
      qlUaXHbmF5dBFpmfX0Sv1xOPBJmcXWR6Ypq+Ph8Tk9sbpSlr9OgrG6yn8rz15puk0jGWVuLo
      9XcnaKaQCFJSOVian8a/skZ42c92Pn7kapG3zl0ktb6MP5wmlU6xvLZOPrpM4T4Xxnovy8EA
      Z+Y27/XIzBwtHjtX5vw0+3xMLvnR6s0EQiHgRvLo70xBTV66SN1oY3zkEocOH+Dv/vZ7HHvs
      CFabDaPJxMLEGJLBzNiVS9zrySNZpUKrMyLVyiCL7Dt0lLXlRXxt3bisBiQZtDot8jZPrenk
      KhuijWrMj95oJJUqcezkCeZnJrfVzruY7I3U8lFyhTKyJKJWy9S2URlOZbAy0N2GKNZp6egh
      n4pjN+tZ30hvn5G7jCgUmVgNYdBtRuQWRZl6MYvT5WJ0wc9wTydWkx5Ztbnn+H1rxXqs+jI/
      +NFPaW5p44//4BMszExi9HTx/Meep9luQBIkBvq6kYUyf/T7L7A0M0lFlDHdw1hZrVpFKLxO
      Z3cXq2vrVIs5PE2bSflaW1vxuixMjC8zdODQttoNRWK4LCaaevfS4PGhNtlZWZqns6d/W+28
      i0ZnxGTQcnD4EOV0lIqkw7DNe8d9TS14vD4yC7M0t/egFrIYnU3YHpBgOI3ewgvHjxDN1Qis
      RxlobiRWFHFoS5QdDmRElkJRhnq6gW3UBbo/kCmVKpjNd19SQ+HusR2yKJJUp1QVsZo+eG/G
      DZXhHmxUSuNXADaD4aymmzdvZRpUYVejOIDCrubqO0KtVj8EYwCFhwG1Wo1avTPP5qsOoKgd
      K9wv1Gq1u7aW8n6ULpDCrkZxAIVdjeIACrua9zlAnUgkRr1SJJEpfOgXhVKeTL5MrVIgFApT
      qNzbYJFyIc+7sW6yJJIvlKgUswTDUepCmUX/MuK2D/Jl8vk8slRnZXmFuiizvrZCrlTdZjtQ
      KOSRZIlgYPFqsF02uzWdow9DrFUolgVyqQ2iD1AoxCYy+VLp6l/lUpGiUCcSWydXqZFOJ4nn
      isB1oRBl/vzf/b986fd+i4WkGp+2gKdrkGoyRKYMw/u6uDgyxaOPn8SurvLyq2focdbJYcab
      L5HbWMfR1IG5niEjmnhkaGBbc9h+EHWhxE+/911OffGPaDTA9MhZ4qINXTWNXqsilW6ixVpn
      ZH6dY4Mt22Z3I7TCaxenOdTrxWD38OZrLyEZPXizVYaHBrbNjljO8Z3v/YivfP6TTC0EOflE
      G9HVBd4cDfD5T39s2+y8xyLnX/0ZpoEnyK5OoZLB/dxzPCjTJLNzE8yk4bOPD1MXSnzr5z/n
      8cOHmIvm6XWnSZZkpHoZuEEXaO/QAc6++SZSrUxZKPP6q29w4dIYQmKRi9OrZOPLXJ4NorV4
      MIlJZiIlmkx1wqt+IlmBi2++zj985zv86Ec/orRDodJavZmhfb9ucANDw5i0oJbr5PJlmltb
      mFmKMNjl/ZCz3D6Nbd20NjooVQQaPR6SsTD2hkZSyRunir1TNCY7BwZ7qIsqeno6Gbl8gQuX
      x5GqBe5OFWsYHj4AgCiUKAs1HqQt400NTjqamgF45dw5yhgIRSLsabIwuRSkpa0NSdrsDbzv
      DaChvbefJns76yUNq4EUrR0thGfXWc9b2dskEMNIl3lziurI8D5WihZshjwenUSz1UvarKGr
      xUXF4MGo3bkhhsXhRK+SWF+P09hgx2G3gU5EXRQIzo6hsrgQKhUwbq+ej9PppN3nZHxikmOn
      PkYsEqGhcfs1UB0OJ2oVpBNx3N5Wnj11isnJSbaQ9fVD0RjM2FR6cDVQkbRss9jdXSVfFeny
      OghtJPn4088xMr9Aq93IdCTB44cOEAz66e3e1Ii9BVkUkbHRKQ4dHt6BS98qMul0BpfLda8v
      RGELbIsynCiQKtbw2D/4PIoukMJ9yb3LD6CgsMtQHEBhV3N1ECxJO5O9RUHhZsiyvGPt8aoD
      1Go1JRpU4b6gVqshCDuTWlHpAinsahQHUNjVKA6gsKu5LkdYrVYHlQqtRnvDOB5JFFGp1ah2
      IsjnDpFEERkVahWIkvzOTwm1RoNmh3Ya3W3eLaNGczfKIyPWRVRqDbK8ORjVaO7SkvNdRhRF
      RElCo9EgSRLad36+27jf5wAF/vzf/1dsDSZOfeoLGGt5XE4LZ0dmOHp4H8WKhH/yAh37j9PU
      6KScK1AVyqh1RsSagLfRxVooSmt7B4a7tUZ/E2Sxylunz2GwONDVC+TLAj39gyyOXaT90FMM
      tD0EmWlkmTOn30AQtTz93NPvv4lbRqyWGBmfQlQZ0MslMnmBp5479cAEw72XTC7NmyOjdHZ0
      kitV0Gn1pDJpZM1maa6rO0kS0RosrE2+zetvX2Lv0DDJTBGXSeaV05c5vK+XwOQlyvsOMH36
      POuJBJJYocFq4fDTT3P5Vy/Tc/xFTm0lH+8WEMs5skUBk5THrq1RqVRxNHjQOxrpb71x+qYH
      DRkQqhWqsn4z9/g2vwQ0BgsDPR2MzAY5/Mg+zo3M8mA+/8Fu0tPg6+SRPX2MTo+DXk1Ko0an
      24xne1/Vqdgz9Ch/8Ie/z2BvBw1uL8PDBzGqBCan57CZLag0WlwuJ6dffZW6VkdTWzddvT3s
      7WtnLbBETW1AFrdRr+820Zjs+FxWNBoNWp0eu8VMuZTBbPXc192220NGbzBgNuqp34WZ61o5
      y9T8Mga9hpd/+jOcDS4e1GWi5VCY/q5OJiYv48+KeCwm9Do9bvtmosaHTBlO4WFgO5ThbgWT
      yaTEAinsbhQHUNjVKA6gsKtRHEBhV3N1GnSnlLgUFG6GKIoYDB8sa76dXHWAh2eKUOFhYKfa
      o9IFUtjVKA6gsKtRHEBhV3NdLNDbr/yIqWCK3/3il7EZNnXa5fdEzwUXJvjnn76Cr/8Qn/vE
      c6hVKmRZfs9xangnq6xKreZu9uRWFqZZiybZe+gIE2+9yuGPfhqnrs75M+eoqQ08+dhhfv7y
      6xzoayWSztPWM0Rbo20LFmUCM5dJ4+XIvk6KmQRvXZpiqMfHWiyFu9HLeiSKzenhyPDebStn
      Lr7KyOwKLR3dhBYX6N03RDUXZ2ZhhU+8+JvotytQR5aZuvg6+qa9xILLGK0OqKQo1XWcfOJx
      7mYexPnJK6RLAn17D2G6g/KI9Spvjk6iNdk40d/B98+M8PlnniASWWUmHKertZ2l4Coel4dM
      NoWsNQI3CoYTa2h0ZqrZKH/7zb+hfd8R5icnQKNDZzDyL//l/8hg5zTHnnmEf/Ov/y0ffeEZ
      Xn/5JY4/8SRjk/PYXF5U6QC2nqP87qd+465KI3b17yceeZlCScButVCXQSymiSTz+HwmZsdH
      qas1ZHI5rFYDC3MB2hq3pm/kdjuJrL2zXU9jwGRQ0967F6k2ytLSLHVLE45tDrkWygUK+TyJ
      WAJBhmQyRX+TlVzfge1r/EAhtc5aLEVfh5OjhwY5Pz5HMhylqb1zMxXuXbyXuXwevQ6Wgxvs
      6779oEWNVs+BrhYuBWKcnZzCZDQDMLka5eieJr7z2hlaOjrRalUkcgVMls2Ku+5OqXQmxGyE
      s+fOg9FOvpCnb/8hOjq66G1zI0q/jhfqO3CUamINm91BvlDiyMnnsOtk9u7fx/zMBEL97kZQ
      BRZmcDZ6yRXKWExGQKYmqfE1eigVcuhNZgrJDUxWO0K5QmNz0xYtqrDZNpXlKpUKFpsNjUpF
      2D/NTLjAvr17aHA6yKS3N1N8Jl2ge2CQaun/b+9cetu4zjD8DMnhTaJIiqQpkaJESqRutuU4
      dZW4cVI4dVMEWSRG/1k3BbppgS6KAlnWgZGkSJO2aNUEqW1ZUiVRokRKpCSK98twhnPpwojQ
      QIEtxBQV1/OsBkMOPh7ivHO+M/Od91SJjo3RqFfZzOSZScZ6GkdRdZyiwFF+l48+/oLZuXnC
      oyPonQbKOVsjBoYDqF0IBr3f6/qDwh7HkoZoMRD0LpImIMkyolVgOXPI7OQEiaCb/cIho6MR
      Bp1PRoBTxliy1KTeUvB7B6g3WlhtNqwWK4ZhIAgG7oFBpFYTp9tNuy3jsBq0OgpWmw2b6EDr
      ygiGRtew4vN6zjUF0lSFcrVBIDCMKnewOhzsZHYZCQ2jCSJDg24kScJht1GqNAgG/M/9eM3Q
      VTqKTj6fY2pyCkmSMLQu9WabwSEfaqeJc9CH0967Kn1D1zg+LuELBGnVyjgGvAi6isPp6vkI
      qyodVB2q1Sqiw4XbbkHRLXg952tUpXZlas0Ow34v7e9hjGXoGoeVGkG/H8FQkbtd9o4bjAc9
      dDQBr8vOUbVByD9EqVrDO+TFYbOaznAmPzxMZzgTkz5hCsDkpcYUgMlLzclMrV9OXCYmz0JV
      1b71xxMBGIZhLok0+UGg63rfvEFPpUC6pqEoXc4mBQNFlpFlGd0Uj8kLyKmH1R99+HuKioMP
      7r5P+WCfkUiUWrmEIbrIrT1gdPYaWqtGODrBgFPlN7/6NeFRH77U6/wo4adrceF1CuSP68Qi
      IbLZPaITCZwX5BNkYvI0TgkgNTPN9l8fUTrY5x+ff4L7UoKD/T0MwULApiD6Q2w+WEKMvMIv
      f34VXVMpVhpMuTU+/NOn2I0OgWE/uWKDd95+g7//+T7R6+9wZ3H2ItpnYvJUTgkgXzjEaRfI
      7aRpqVYGBYGpmXk69SKXXAKZjTUqMoxZnuRoEzPXmIu7ydYknMhodg/J1CSZnb+wtrqGLNgR
      9PN9j660azxaWScYSRAf8bG+scHeUY1ULMBhuUVifJTtnRypy6/gH+jdyje12+HxWprUeJjV
      zR3i05dxqWUKLTup8d7uSAmAofLV0ldcGp9EqhSQdDvXrs717G27Yeg8Xn7EzPwCertM5kjC
      rtVpdq0sXJ7ty5a3vSC9u81GvsjtxUX0dpUHmT2mJhJkcxk8vjAxr41c7Yl31SkB3H73Lre/
      Ob7z7GDv3/0FANMAtxZPzs9defV523FmMuvLSLoLuSODVSQ24qem2Fhd/Q/+YJjl1TRv3rrC
      l19vcXOxd1WajWqFw+IxgtJkdmaOxxsbWGs5lODlcxGA2qqSOyrjGxmjUDhA1kW0K3O9q9Ls
      SmSyeaam53n48DGGywdKG69DoK6Atz+rFJ+bUd8Qhx0LLqvAFxvbXE3GuP+3zzEGQ1wfhvT2
      Jh3vJPAdk+BseoWPP/2MWr3C+tYekiSdfFbY2eDevXv88+uV/rXmDDicLqaSKY4O9gHY2sww
      PZvEF7hE2CNSl2TqjRY2h7Oncf2hUTwuO3abhVa7jdysoItuqtVqT+N8g2G18/rNmxRyGbA5
      8bmEnhapCfYBYiMBOs0KhiBSLlcxDIOuamB7gaZwD7ezXE9OAKAicHhwhGvAx5vXEhyWmoii
      k3j4ScXpt53hlBq/+8N9fvbGVSTDys7WDv/68t8s/uQm8aCLrZ0sx7KF0lGJ2zcWiKRiZLNF
      susrxBde4/rc5IU0WNe6pDfThGNxioUCPq+HQChEo1KkUGqSiIVJb2VJzUwj9thNuVgsMuwd
      ZHNrl3gyhROFYksj5OvtfsQAhqGRSW/iCUbRWiUk3U48FulpalIpH+PxDmNBp1JrYCgtWpqN
      8ejIuRY2/i/P6wx3UC4T9g2xvndI2OPgWNJJhIZY2c0zG49Tr9cIDPsZcLmEbwtArvLbP37C
      e2+/SrXZZHmzRLuSZzrqY2m7ymtxD1pomvTSZ7gH/aQWUuzuN7HLZVR3iPfu3Orbn/TdGHS7
      GqLYa79kk37SC2tEw9Dpagb2pwxdp60R7V5+eiPJ0oMNQuEIc9OTJMdHGY1FGQ5GGJtMcrC1
      SnT+Bm+99WPye0WSiSg2USQajVxw5wcQzM5vAoAgWJ7a+U++dxZz3Hw2gycUxeMyvYNMzp9+
      muOe6XYZGU+c928xMbkQTgTwom6BY/L/h9VqxWbrTyp7EqVfAU1MnkU/BWCuBzB5qfkvkdh3
      +ttm+LQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Access &amp; Egress.trips.pct' width='192'>
      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
      JljlELEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Access &amp; Egress.n' width='192'>
      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
      F7lk+RmcGwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Transfers.trips.est' width='192'>
      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
      evOiUavhbe+mmMkyNNSLIIp0dvdRyqdba+g9dPUOYDWKdA+M0eaQiSZLH/+lvSAIrC/cpm/s
      WEvW5EGXg47Q7m+1FI2B2UqzUueJiT5WNrZwOG2o797775FEylKV+E4Jk1pGNthIJBK47CIX
      L8/w+NNPY1XL5Koa44fGsZkMrK+s0D0wSHR9HQFwOy1IgomVxUUOHT+N2/752lnKppI4XA62
      kkW6AjYqqpHNpQXMTi+dQRdmVwibqbUe0KyVWVxZp394DLWSx+D2ktpcxegIEGnbp3Twmkoy
      ncFq0Igli4yODGLYx2LFmipx6+Y0FpefkaEBatW9SSKb9QolWSSVSTHW20M8nSHkcTCzFmOo
      p5u1aJS+nj7cVtPHa4JVRaZaa+J07n868IcBTVVRNA2jnkpy32hNoWyNpqz8yUwTgiAIH/u6
      JhqMOJ37dRjq4UMQRfTReAgQhE+UZkXfBtV5pLmnULZ+FELnQUCSpAM7nHn3CaBPfp0HhYOc
      i/oSSOeR5n2R4AIv/ssrGD0hvv7csxhFAVVuUmkouBy7kbOb09McP7YfSVkfLprVHJvJOtQz
      qCYXNlFiIxbn5BNPtzQSXMwkWF7fpm9kAmM9TRE3+a0lXKEIvZH21hl6D5qmMj+/SNBjZyOR
      5cjRI/saCd5PSqU8C5tRTHYv9UqBcLiTciGFYtzd1bw3PXqzQrlhgM07XL3mZHV5lTavidWC
      mWG/Rln0US8mKWSzdIU8RFM51tY3sTqc+MO9eIQ8m3mV739rfworPyhomsqtmSnqcpjxoSBT
      s8t86ekzrG9nWq4JNpgd9Hd7WI8myK9dxz90nPX1OIe8ba019B7WFmZY2kgTF+u4PAHqkvrQ
      OoDL6aHeXGWk30+zbmN6PUYun8Hm3D2l8IElkKIoPPX8d8itz7K+sY7R4sTnsZFIFlhbXwMg
      Gdtgdu4OmXSGsbFRbMEIpcQam9tpNjbWD7SDnwVyNY+kmcgX8lTqCk4DJLdWCPWMfPyXPyWa
      XOH2cp7+oAGjzUUuV+LUY2fZ2dpsua1dgwqFcp1GqYDF7afDbyWdr+2PrQOgWc2BLQBSjWur
      Wxzr9NDTP4r1XYnnPZJIRa6RTFfpaA9QrxSYX95kZLifzVgCtVnD5vZhFMEqquxky3i9bmw2
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Transfers.trips.pct' width='192'>
      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
      B6iWD6+GCATjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Transfers.n' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29V3Qk15nn+YuIjPQOmQAS3tvyvsiipyRKlCiJ6pbpVqt7Zuec7TMP03vO
      zsvsyzztPuyefdozZ59WM316Z1stylsWxRJNFVmGZQAUvLeJRCKRSO8zzD6gWF1VdBIrEwUS
      8XshgUrcL+7N+0XcuN/9f5+g67qOgcE+RBAEQXzUF2Fg8CgxHMBgX2N61BdgUFkKiTD//Uev
      UDLV8Vff/yYus4yiKFgsFkqlEqJkQkRDF0Re/fk/03/2BToafZhNEqWyiigCgoTFLD/qruwK
      gvEO8Plj7uabJD2HuPabH3L6qS9y/dLr9B4+xY3ROXxeDwFzCm/3GYbe+QMNdbVML4V4/pkz
      zG7kKIZmaT36NN/+6jOPuhtVx3gH+Jzjb+7EpaUom+zkM1kGjp2l1mUh0NzO+NQcbV29NPic
      2F0ezKLAmXNPc/zYQcbHRtEe9cXvEsYT4HOIpqmAiKapSKKIoqqIgoAuiKBrCIAuCKDrSKJI
      WVExmcQ7f6OgIyKbpEfci+ojCIJgOIDBnqNYLGKxWKpux1gCGexJFEXZNVuGAxjsawwHMNjX
      GA5gsK8xHMBgX2NEgv9ElsevcHmxSKMU5ehzf4GsZHE4HBTyeQTJhFkSKCoaDrutYjYjqzP8
      9o9XEWUr3/7LlxE0BbPVhloqIMkWzHJlvr5cPMw//+hfKFrr+atvv4xdFpFEAUEUKJVVHHY7
      gvDntzt89S3+8PZ7dDTX0XXqixztaUItFxFNMuVSCYfTSS6TwWp3sLk0gV7TTYvf/kArOuff
      usBiNEVf/1Ge6G0BQaBUVnDYrBSKJUyyGUFXmJwcwtR4hAZi/F+/OE9nZz/fe+4skiCRioVJ
      CU4CTjMWGX57ZRQwHOBPRikV2FpbIEme/BvnSWYSOOwepheWsNqd+IUEk8EM/8t//s+4zZ9i
      tnwII7dH+cq3vkv49hv8+hevkC9q2L0+Fkau4es6zn/4H75bETv2mgaeOXuElKuXC7//NXNT
      s3QfOoiWj1MuaTz/rR/QUef8s9s9/vhzzK5EODXQwOtX32Z2oobIyhSdLQ1cG5nm3LnHuXbl
      CifOPU1kZgg9cJB//zcv39eGkt1ireyk06+Rz8T5P//5Xc4dGuD1q1c5euAgK5EE3ho/WnqL
      8HaK//nvH6PW7KCrpZkfPHOU//Lz31JExC/kaO7s519GbtLd1YvsbgaMJdCfxWPPPEc0FESW
      TeSyOcwWMz0Hj1PvtSPLZmr8dUiVmfsADPR289uf/ZjrM5u01bt5+tnnUBUF2WSittZfOUN3
      ECQrDtL0DvYQL1mw3nmqyRXo1InTjyNRpqG9l/7OZiw2JzVeJybZTF1jO9/567/iu998EdMD
      tkTZTiK8yPJ2CpNe4vCRx1lbW8IkWcmVVL722GH8LhepbB5sLnyygK7k0CU7uqpQKJVwOpwI
      AiyvLlPWTeQKBTqaGnb6bATC/jTuDpOugyCg6zrCA+sCXdcRxcrdU3Rd/1A771/DB37/kLY+
      6veCKPJpLX1su/eM4719yWZ3lpf3fvZOl+9vVxDuXte//iwAOjo7d3ftnvHTdz549+9EURSM
      JdCfyN0v6M5/P2zyVXJCvt/eh7ZZYTvv2/pzfl+pdv+U9nfG4ePbvf/nf3UM8Z7fCzsfvO/v
      jCWQwb7GcACDfY3hAAb7GsMBDPY1d1+Cc7ncR76xGxjsJoVCYdds3XUAu/3BCJyBwaPj3m3Q
      amIsgQz2NR9wgGxym81YCl3X2VhbYjkYRtchn44zMjLC6PgUivbxS6WNjY27QZzPC2q5wMT4
      GLFUFl3XCa4skMoWiYRWWdvYIpPcZnV9syK28uk4y2sb6DpoSom52XlUXWd5fpZsoUxweYHN
      7WRFbN1FLTE1Mc7kzALRcJCJmXl0XScRi1VNH6yUckyMjTG3tEZodZG5xVUqMWPyuTSz65vo
      Oui6xtjsDKF4GqVcJFMoE9xYZzOZBT7EAd69+BZvvH2R6Mo4b1ybZGzoOtmyiiCILI5dZSuv
      cOn117hx8xa//OWvWV5c4Pz584zOLPHepT9y+eYY09NT/OSH/zdD88EKdGdvEAvOs5nRcNpt
      6FoRFTPDt64xt7RBcGGGzXia5fnpikyWre0kkbU5cmWVRDSCWcgxdOsmW0UTQ5ffJBgvMjc1
      XgFL9yCZ6e5oYjueYnRsHK/HQzG9zS9/c55q6bNMZjutDV4S6Rxj45N4PO5PHXG+l8vj0ySj
      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
      /wfA69uiihKR2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Acc &amp; Egr Details.trips.est' width='192'>
      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
      Spp/AKck2oBcg8abAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Acc &amp; Egr Details.trips.pct' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9+ZNk13Xn93lb7vtWmZVZ+9p7NzZiIUCA4iZSQTFG21hWzISskZdwSPZv
      9i8O6w9wzITHobAnHLbCY2nk4UikSHE4JAECxNpo9F7dXVvXvldmVlXuy1v9Q6ObrAa66/VS
      qAbrfX5BAKiT9+Z97+S999xzvlewLMvCweGQIh50BxwcDhLHARx+rbAsiwdZ1DgO4PBrxcrE
      ef71//1dLMticW6aWlNjZWGWcq3F6tI85XqL1cVZCtsVNlYWkQ+6ww4Oj5P3PrxAbX2ba1cv
      cH12k+GNNa4tbHGyf5m//v9+QN+JZ/DUVuk88TI7M+ccB3D49cEyWnQOP83v/F4fZy/fhOYW
      qpTBxwo1w81Lzz/L8JkvsL0wSc3QGBw+gnCQUaDbTQuCcFBdOFRYluWM9V0c6B5A0zR0XT/I
      Ljw0pmlimuYDbbgOmmazedBdsIGFaZrAr47x/rXmLIFsUNzYQFREBFGhXq9TqTWpbt5ks6ST
      Gz5OXy5NNOg76G7+mtDib//t93npK6+xPjfN5laeM8+8SDTsJ1+sMNDX9VhnsQNdAqmqiiAI
      KIpyUF2wxfWzb/D6hQlkXWfwxBmmxs6R7RnELQm8d2mKv/if/gd8ypMfUGs0Gvh8T7qjNvk3
      f/nXuDwCXl8QQS+x1vDT7a1wdmyBP/sf/2d6Ev7H1pozA9hg5ORpJvM6VqtKwmuy3ZEjkUjg
      UVz87m9lWV7fYqQ7edDd/DVBIhryIARjdMZDWEKGHkFEkOCl6AAdEc9jbc2ZAT5HPGrQ4PMx
      A3y2PPnztsMdVFW9s0F0eDw4DuBwqHEcwOFQ4ziAw6HGcQCHQ43jAA6HGscBHA41nysHGBsb
      4+rYmI2/bDN2dRKAifFxxsauYn6Gpx2m3uba+OSef7exOMU7H41x9dzbXLpyhcXN0q7/b7Rr
      TM4u7vk5NyZe529//JdcuHntzn8rV7e5/ZXHps5iPuBxj/2xNhi7eh2A2clxbty4SkN7oKYe
      mTEb/axvrfHjn7/P3PglLl66zI3ZFeBJPQk2Nd54623WV9bo7OpEMlQKLRlBrdCql1hdL/KN
      r72GeM8DIY03/uOPuDY9RTrqZ2drjfmFVVIRmYn5Lf7wj/4pHun+h0nTV97ng7FZBgcHGR8b
      J5btxtxZ4fhLX+PoQO6+tpaucvbdn7NdrrIydQ1NCpAJi/iyo7z89PE7f7e1tswHF+aJGXmi
      uaPU6k1++sNJXnvtJd5+8x1eefVlNrbrjA703Le9I30nmMq36FDq/D//8L8w2HuCNy+9z2tH
      j7DWlEHd4cTwC/forMUbP/8522tLxHO9eNwSU4tFQm4LQ2+zsrTMV3/zm7juOV4WZ99+gytj
      1+jKJKjVtrg2tcJIV5gLV2f4zu//U5Kh+5/eFpcm+P4b5+jp62d97iaiL0bM3SY+cJrnT43e
      1xbgyoX3WCuUaRYXKFZMRvpTVMQI33rtBW73ulnO89Yv3qd2JAJilGimwXuv/8cn1AFEhebm
      PDtVFW1jG2o7lA2ZrlQYtdmkXK3t+REuj59qeQsXKlqrRU2vUd1cZ3mjTkO18Hjv7wCNWgVf
      OMrK4hypnlH02gaCO7zny3/Hvl6jXq/jCiYJm22qLYtXzhy/668E4h4d3Uqitxs0dBG9vsX0
      wjqCVmNsfArZ7WdldQ0QSSain9pWsTBPPNnL5PyHJMJhijsb5JJJLs9dR/HGiQfS3PO3QhDw
      GHW2a1Vmx5fpD+usbdQI9Wex1CZFTYY9Dp5F2YWl1VjfBI/bYLu0zZJeYHFpiUqtuacD6K06
      gidAfnUJX7QTl1GnoUt89eTeLz9Aq9mkWq2D4GEgqZDfqvKlb3/1E90ezIYpNEQ6vCo7tRZu
      QX9yUyHqlRKmKGNaAu16BVHxIH28YBMFCIQiSOK9nozB5tomktePjIkFKCIgKZSrDTrTyT3T
      Ca59+AbNQD8nBztpqTqWoQEC0Whkz+9lmQblag3L0EGUES0TEwhHo7vWnM16hbZmYCFgmSaK
      20N5q0ginWFrc51IPIGmqh8vX0T8Pg+yLCNJ0q72Ws0ypuTDJWisbxfpjKfYqpbQtSYexYug
      +IgGQvdMhVCbNVoGaKqBYLRQLQmXIiEALllA9oRw3zPZz2Irn0dDxucSMQFFljERKJUqZLOZ
      +8zUt9icvczldYsvPnUETdUQLAMLiESje/keADs7Owhwq21BQLcsgpEI8q+0q7cb1JoqJiCY
      JsguWtXtJ9cBHD5Ju93+VAewi5ML9Ek+V5tgB4fHjeMADocaxwEcDjWOAzgcahwHcDjUyHCr
      0uggCi1utymKjh/awTCMRyoINwwDwzAeY48+/9w5CNO0z/j8Gj63kigHxe2X92F/rAzDOJDn
      /CQjw60aU4/n8RYb28E5B3gwBEF4pHMA0zQP5Dk/yThrD4dDjeMADoeaTyTDrS7OEOroxSuo
      XB27Tu/wMeJhHxNjV9ipNekfOU46HrrnBy6vLNOZziDKsq08jnthWSYLszNEO3KU8yv4oh3U
      SwU6sjk01SRkU4ltO79O3ZBwmU1coRSiqRIOh23Zlrfy5MtNUhEvDUPG55Js22JZFIpFQn43
      a8UaibAffyjMPdOXHgP5/AyGHEYxaxQbbaIeGdEdR0IjGkrZ6TSFjVVUwYOo1vBFO8DUCIfu
      /bx3WVsmW1s7SJaGKnrwyILt8VKbNeaXN8ll4hTLLaJBL4F9Hi+4ywEsy+Dsu28R6n4KY3uW
      niOnuDkzS/zpE8QTcc5deRtBazOleKjl18gOjbI4Pkko24O7tYURSGM2ivz077/Lq3/wxwym
      Yw/dsVZpg0ID1q6cZ2DkGJPjl2hubTO9sMHJ0ycJsmeSIgBTswuIooBpqFR3xug99gyhUMhW
      NKWhGlTXF1nddCG0a0QTXRwLhu6ThPdLmrUd3nz3LM+O5LixVqE7FePI0aO4lP1KwFWZXlnA
      MNsYaoX+/peYnP+ASr1Jd+/zREN7C3dZpsnMwgpYJpbWonptnKGTH4+XjR7kVxe4NLlCIqhQ
      q1VJZvsJ2Byv8WvXiafCvPXueRS3TDqR4Oixo4jyw+137LJrCbSzPMnyjsnEjau0dYNAIIhL
      lgGBeDJFOBxmZ3OT4aEeNMvgyuUrGEqYwvIcuqGzuLBIfmuHeCJN8j6zhB3c/gh6bYu6arG+
      MEX/yFM888LzBMQm7777AS3NfiREAI4dO0Eyl2bygzdY2m7bspONJro/wQunTxAIRtjaWODa
      xKwtW28wRncmSc/IcfpTYfJbRS5dsVNg8nBYhoFLNik36/T3foGVtRsM95xAEU3Gb16iaTvn
      UUAQRE6cPEUiHeXquz9no2wvctSR6yHid3PixHHC0RjrcxNMzq7asjUtkCSR/pFjZOJhtrYL
      XLpy3WafH55dP0eq4OVP/8s/pboxjycSZ+zSJYaOPwWAKCmcPnUSyTCJhkIkkzmOnIjjUUIY
      eoN2vYQ/HSDil1FMlUa5QTjx8E4gKm4S0RCDQymWl5bQWg0ikQCnn3uB8OI6btne3NjX3UnT
      UAj6PfT2HcMjeUhH3LZsS7UGAZcEipe+/kGqOyHCyazt79DX14cku8h09ZBMxjGUoG3bB0UQ
      XYR8EUaHXqawOU5fzxkUweBLz/02s5t5vILAXtrQgijSk02hCV58Pg8DQ6fwuUMkAnZnLZG+
      vl7cHi99/UNEgwHiWXuSkUeOjTK7uMHoaIZK2UMqUUHwfnr9w+PESYf+HOGkQz9+nCiQw6HG
      cQCHQ43jAA6HmjvJcKqqfuaNa5qGIAiO4rFNVFXFMIyH3gOoqvrQtr+u3NneH8Re+Habn6d7
      tg6S25dAP8p4OWO9G2cJ5HCocRzA4VDziROOZqOG4vYjiRblUgl/MEyjWkY3LcKRKLL02fuM
      ZZmomoHWbuHz+zEME8VmSoHaaqJZApJlILo8CJa597mDZaFqGqJg0WjreF0SuikiS/bPLCzT
      oFJrEPR7abRUPC4FSVbuLVD1GGi1KpiCC7ck0NA0FMECyYOIgSLbS4O2LAtN0zG0NrLHB6Zh
      +ztraouWZuKWBUxkJJEHOuNRVRVJFGipOi5FRt7n8YJP5AJZ/OT7f0Pq2G8gl2bZaYPLF2Hq
      6gekc/289rVvEvF99g6wNH2FhZKAll/Al+pmaPQIybA9B7hy5TI6EhIauqqT6TtCf1fHfW02
      V+e5enOdiFfAo0hst8GFQSzRwejwgK12tzZWWVpZpW0K7DR0+jsTjIzYUzp7WOZXJihWy6BX
      8Aa7aDfWaGsmqY6jHOs5Yu8zJi+zXnchtQoYlkRu4Bg9nXFbtpcuXsStKFRUE8nSSXbkGB7s
      tWVbLxX56bvnOdGXZmGrQVdHgpGREVu2j8Kut7m5s8LcZourF8+xVizz6muvMTrQhcvtJZFI
      4HZ99ie2twRil2jU2wyMjmK1Snx07iNU3WbkSJRxyyK5bA7J42Hm8lk2K/ePeHVkb+W0REIB
      drbydKRzSKLAxtoi0/P2cltC8RQ+j0Q0kaYjqLC6vsHVG1P2+vxQWLhlSCa6qLcNGo0dOmOd
      1Os7zCxcp2XZG6+eoRHcAnR39yC6ZCYufsB23V7lXjjoZ6uYJ9OZQ5IlVhduMrdSsGXrjyTI
      dcTJdvcS9Uqsb25wfeKmLdtHYdfPaKGwwz/70/+G4tw1/LE4/+lHP6L/yCkyqTjFQoFKtY43
      +vjuaLWD5A7w9a9/nbmVHZJhF4FIjJn5VUSbebLxSICmoZDJdCC6AyxrGl7XXqFAgUQijiLo
      hNL9jPRl2PCKlIvrBPz2UgmqOwUahkJfOk3T5yLeqGDIAVu2D4OhVlgo5Dk62EdPRw7Jm8Qj
      w/MnXmU6X8QtCNgJdAuCTDwepaMjjOgJsahP3UcWcTder5dEboCB7jQBj8zW+jJ+n/0KtEQi
      gS8UpTPXTatWQvDs33jdRrBuQbttL0PycXL7HECWn0yN3ieN23H8h43lt1otpyTyLpwokMOh
      xnEAh0ON4wAOh5o7i++DzMl36gHsYZrmI9UDaJrmjPVd3NEFOogkqdtKZ06Clj1ub4Afdrwe
      xfbXFWcJ5HCocRzA4VDjOIDDoWbXCdTqxAV+8N51JJebP/3Db/O//uv/k//qz/5b/ub/+t9x
      u72cfv5lPvrFzzD9af7ZH/0+nn1cTppak/MXr+D2hXDRYrFYQ2nskOobIdGRpdOm4sTq/CTz
      BRW3WUJyBQhGUwz13f+mx+L6ImM3N0gGBERvBL1doaEKxKNhhocGbbW7U9zg/LlzhBJptus6
      Q7kkA0PDtoSe6tvrXJ6Yxed2s7i2xbGRfrr6B/b8tbo49lMMOYybJqWWjosmghzA641xcvC0
      rX4vTo+xUVewauu4gzHC0Q76ezK2bA21wY/feI/udJiWIRONRhke7LfX7s1xlja38Ho87DQM
      etMx2+NV3lzi2twyXklmIV/j5FAXPUNDuGwY7xpTXVdRdZP69g43rpxDNzXOXp6m2WxSrTfx
      R1O8+oXTfOHlV/f15QcQFS8jA11UGyqiZfD0M88ST6UobqwyPTWJbtgr7EjlckiGRiQcYadU
      YnVuinLz/hLh4XgarwKy4qKUX0X2hNAaZdbW1lje2LbVbjSewBtOMtqfIyAbLK2sMTO3ZMu2
      sLFJ//GT1KtVUrEAi8tLTEzukRdjlJhdX0NVt6mpMm7RxOt2s7I2wVpxDdVmIUy6qwt0jUg0
      yvbWFkuzk9Ta9vKILnx4FlXTCAbDtOpl1laWWC9WbNnmi2WOD+dotAU8tFleW2du0V7e1fpq
      nmNPnaZWqZCKeFhYWmZyasaW7a4ZQHF58bhkFG+E5WKbP/mT/4IPPzzH8Imn6QyI1GpNIm4f
      bmX/Iwm3kuBW8PtCtAxIBH34BgfY3NphYm7946tD9/ZwRXHh9XoYHOxD9AaZvXqFlmYS9t77
      OyiKgtfrRZRAkBR6+wdwyyLbm8s0m3up69xCa9WJJNJEklly5Sa16g6NRsOWbaozw6XrY6T7
      juAVmtRqdQq1PWwFD7lkB15fnGa1iCecI+EV8LoCTBXKiALYuRlAUdx4PW6GhjpR/HluXrtx
      K/HQvfdq+diZZ9HHrtPTP4ApKmwuzdFs2UuxSaei3Jhe5dipZyltLlMtF22PV7YrzdWLV8iN
      nkZWK9QbNSo2bR1doM8Rji7Q48fZBDscahwHcDjUOA7gcKi5owt0EJen3dYDepSL3w4Tt1NH
      HnbbZhiGcy/bXdyJAh3EwNwuiHGwh67rWJb10JtgxwE+ibMEcjjUOA7gcKhxHMDhULPrJFhv
      1/jJT14Hb4xvfe1LCMCNi+eIdfcRCEQJen95YDU5OcHoqD2tmYfBaNe5en2SYKyDbFRhPt+g
      WVwh0zuI4gmQitm7baW8tc5ysYWil1H8cVyKTC5rL7dl/uYElaZBwKfQNiRCfi+5nL0bYgpr
      iyxv7hALB9gotehORUhnc/t66ZuhN7g4dZmY301VtXALKpI7hiTAQM7es9reXGazBlY9jzfS
      gUtxkc3c/4K9WinP3FqZkGJQrLaJBFzogpuAz0Mu22mr3a2NZeZWCiRiIbaqKpl4iIzN8bJM
      g/MXLnB0qI+LE0sM92RIZDpRbBjvcoD5G5foPPoCPVGZhcnL/P0/vsPRkR6uTt5AEL1UVIWj
      PQFuLJTpTvm5fvkcpWqb3/7DPyYZcNn6onYRFQ/DA92Mz65SzVdQ5Sh6s8nU9DTxZIZENIBo
      YwNtiSK1Uhmf0mZ5dYJQLEmyI23riqXi1jaWWmO7nkRs71D2BvGHY0SD3j1ttwpFZNFkamYJ
      SZFYaFYQXD4yqYe/OPB+WJbO2PRZ2rpENjXK2fFz+MQWG0vjxJJH6cvZjByJArVSCdloszY1
      QSTRQTKVxCXde7wM06JRr9HWqmxX2ihKkp3CKp5AmFAkTsi/95VUi0vrDPamuHh9BVHUUetl
      ZE+QjsTet0xahk6j2UJT2zSbdWbn52lbEr259N5f91f/JdWZ48ZH7/DTN9/j+o1xZEGnpVtk
      c7c88fQzzzB7cw611UDVNCRvmNNH+2i2Hn9kQW/Xef3N98l2pvF4veyU6zz1zBmSYR9z84uo
      ur0HGolGEAU4ceoUud4chbkp8nsIY90mGonQNBSeffo0qXQnZqvCyuq6LdtYPEqt1uTIqafp
      zXYgyQLLy8u2bB8GU29jqmUsyc308gxet5++7BFy8RSFnTyazdBpOBpFQODk6VNkuzKsz0zt
      KYwVDkcQBQETgZBfoXfwGOnOLO1ykdXNoq12gz4XMwvrHD11hq5MGkk0WV62lzwoKm7CAR/+
      eJZjfRkUl4uVFXtjvVsXyLJQ1TaIMiImumEiiiKSKKLpOrLiwtBVLMQ7U5MoCoiibFuo6le5
      ny6QaRo0my0kWcHjUm71RQBBFFBVDZfbbfMeYgtdN5AkEdMS0DUVl8tlK/xqGjqabuJyKZim
      iWHoyLLL1ne1TJOWquLxeDANA8syQRCRH6EkcS9dINPUsZDQ9SaS5AZMJFGkrWm4XR7aNnSB
      bp0JmUgimIi3xmuvsbYsdMNAwEIzTNwuF6ZpYegasstlb6a+PV5uD6ZpYJkGiLJtLVpd15Ek
      CdM0EbDQTWxdSesIY32OcISxHj9OFMjhUOM4gMOh5s7a4yBSEkRRPLC2P48IgoAoig89XoIg
      OGN9F3d0gdxue7enP05uPxCnIMY+j1IQYxjGgTznJxlnCeRwqNldFN+q8L3/8O/53o9e535R
      Y7vxWQeHJ51d8cfZaxfoOfUl+hIu3n/jR0wvrJPNpEkMHGFp/CILN9cIdKTZXpkk2ztCKh7i
      qVe+TsLvLGEcPp/scoB0Vx9/959e55riIRu9dSmcIEt8+PZbBIM++o+cRle38eeyHBvt4acf
      zfHV39ynl98ymBq/QTDZRbWwjC+WplZcI9vbj26IxCL2bg9ZW56nrku4aeEKdiCjkUgkbPbB
      Yn5hEb9HomHIBDyKbdvqdp7Z5U26sh1sbNfIxEJE4ol9zQVaXB7DUiL0pDKsFtcx1RKCO4mM
      SjrRY+MTLFYW5lAFD6JWwR/LIlg6ibi99A3L1Fla2cAt6aiCD59LtD1ejco20wvrdHUmKJRa
      JCN+ovs8XnCXA4Q7evnnf5QFQUISBTRdR1EUXtW0jyM2AmABFusLk7z60vM2T2MfHEtrsLCa
      x1+psb1R4OSzERZuTrOUrzA8PEw0ErDV9uLKBrIo0G43qFYmyQ4eJx6P24qGFFbn+fDSOCPd
      cXZKZYKxDMFw1JYsjCkoxL0mV66NU21pNMsRhr0BQv79OohSWS5s0tbmULQU01sSVm2CSsug
      M3uGdKJ7z0+wTJPljS0EDLRmldrUHN3Dx4nHY7bGurCxwtTsCjGfwE6pQrSji1Akhkvee6s5
      MTFNLhfng3NXEWWBSizKUX+IgPfx5pjdza6eWZbB+Q/e5dL1KQRRvJMy4HK5kGUZWZY+/qdC
      1+AJnjs1BIDaarC5skSxYk8zxw5qs04glsJotTj1zHOsLCzz2te+SlhRuXx1jKZqT6zJsixM
      y+ILL3yRrt4sy1fOMl+0d+pd2C4hmy2OnHyGjnQnaq3AjQl7gkuWVme5Aq996RVO9GepNluM
      37huy/ZhsHQNRTRQceORXOSywzx19BVCbonl9XmadnKBBAHLMrEseOGlV+jMJpi7dJbVHXu5
      U6nOLoIehaee+QKZbCe1/BKTM/ZyciQBmi2VI6eeZqi7k1a7yY1r+zdet9mlC7Qw9j7zaoKE
      S0Ux61y4Mc+J0QHGJqbpHRpm8cYEwUw3MblBmSDZgMnUyg71/Azx3DF6enOMXxtj9MRJpq5e
      wp/q5be/8eo9G7+fLpBlWSwvzBKMZ2iU8njDKXwKSIrC2nqe7q6srV/x0tYmDUMmE/NT1yS2
      N1fJ9vQg2YyH7+zsEImEqdeb1CvbBOMZfO69UzeKGytsbJXp7htENFQMrYkh+YmFH/6Swfvq
      AlkWi2sTpDtG0FslFF+UZn0Hv9vN0laBvnQvzWZzD10gi+38BqroIRny0DZlChtrdPV028rn
      AYudnTKRcJB6s021VCSazOLZ81JC0NUmCyub9Pf10KjV0Fp1BG+YSGDvzNtHYZcDrN+8zHuT
      2wQUk3p5k0TYz3K+ztCZZ1ieuIjsSmOoReYmxxDCfWQTCn39Q+RXZlHcUUqNKtF4B8XCOqFw
      Bq1Z5Hd/9/fv2bgjjPVgOMJYj59dDmBZFisLM4i+KImgi7mlPF2ZOIbkolkrI4oeTFNFEQyq
      mkQiILO+3SAV9rBVbpDoSLG+tEiup4d6vYVpqKTT987JdhzgwXAc4PHjSCN+jnAc4PHjnAQ7
      HGruCGMdRD3AbY2agxDl+jyiquqdwo+Htb+dgOhwiwMdjQNcfTk4AJ9yDnDu3Td5692PMD9+
      Nw21ys35VcBiamrqUz/E0Fq8/cZP+fDS9Ts5RIam0tYcFTKHJ5tdAe2lGx/R8mfQVqeYnZni
      4oWLjB4ZZmm9ytWP3qFY01lfvEnbFUOsb1CoqHz7d36fybNvEus5zsL4FRbCCh98dAUfLaRY
      llZpi1NfeIWRXntSJA4OnyW7HMAXCLF5dZ7CzCQ1TSfe2cXN6Rlk2UPNcKEIKhc++hAlNUpX
      0kt/OkC1aRAIBpiZvcnU1ASKS2FzY5ljQ6M0GiUuXxsn0T36UA6wsjCL7A1SK++g+EJ4JIt4
      KoXa1vH57KUU1MrbNA0J2WzhCsQQTG3vSIhlUavXEUyN1Y1tOjNxVFPGo4i2oyimrrKyXqCz
      I0ax1CAc8OL2+vY1t2Vp9Tqq5SIRDFCs1Un4fQiuKBIafu/e8iIAlmVSb7RoNyr4wgksXbX9
      nVv1Mjt1g5AbNNGDS+KziTpZJktLy3RmO9nMb5GIhpHcHmQbg72rKN6yLArrK7QsF7l0nLm5
      eXLdOWp1lVZtB2QvPsWkZblQBBOXLOAJxnBJAqtL88i+CD7ZZLvSIBwK0FQN2rUSHblefO5P
      hjrvVxRv6Q1+8vp7vPTKK0jtHSZWt6ktz2IFOzjz1Bkifns5IufOnbt1iimY1Esl+k88R3f6
      /sldmyuzXL25QcRtkuwaYDu/htZuEk11MTLYa6vdrY1VCvkN8pU2TR2603FGR0Z4lIKsvYri
      1WaBK4sLtKuLDAy8zOLih1RqNXr7X2C4s592e++i+LmJS6zXXCj6DvVai+HTz5FN2nOeleVl
      VpaXEV0KWrNOKje454WEj4PV6euogTAzly5Tk8MMdSU5evSIrdNr6S/+4i/+Am5FYrRWjbX8
      FroJyUSMWDyOLCv4vB5C4QihYACvP4jfLaEaAtFoFFkUqJZLILlIJON4vT4ikTBer5dgwE8k
      EqHRaODxfLISyTTNO2V+d2OoLXzhOLM3pyiXyhw9fopAwENtZ5OxyTn6+/uR7yPWdJu1tTUk
      UaC3p4emqTFz8TyB3DAhz73TGQLBMFuFAh3pDHp5jUB6gGa9SjG/Sl2XSMUje7ZrmlCv7eCP
      ZPDQZqNQYKtUJZvp2NP2XhiGgSiK94zkXJs+x/HhZ5HkICvrN+hKZtncWmVxfZX+/hMIhrGn
      AkcoGqKQL9PX00lTbzF16TKx7mH87r0jT5ZlsLWxRvfACI1GnY3lOXQpSCJqT8XvYSmsrRLu
      zNCsG2TjHlbW86znt+jp2lvFb/doWDB19SyhgedY/cmPCSVSbBbLHBnIMD23zImTJ7l68QJH
      jx9hanKWmaU8//Wf/ue8+95ZxGYFPRTj1Mggsi9CtVRgbWGWzNBJZm5c5Vu/9a0HyhyVFA/V
      7Tm6egdAb+FRRILBEMdOP41nYRXFxssP0JmK0zBl4rEwKD4UQyC2Z/2CQGc2g4xORQpzLB3F
      r/RR2fISStpL77WMFnVVZrA/TTPkIZmoYsj7+yIkEr24JIVmfZNM+giKaPLyU19neiOPVxCw
      E+gWRIVMJkk04kNwH0XBRdhrT7amXinhj3eSikeQpQFCPjcJGz8Wj0rvyAjXrm5lyOUAABs+
      SURBVE8yfOwYWqNCPJGk3LIXYfyELtCld35MdPQFzr/9LsdHurhy4QO80Qz9fT2sbDUwG9t0
      JONs7qjomsp3vvUaf//Dn+HTa+QGurk0NsPQ8dPk15YJKOBNdLO9cJNv/N7vcPeixdEFejAc
      XaDHzyfm0kzPEBG/h1Mnj+GSIdE1wvDwCF1d3fR3ZRARSKRzjAwPEg/7MEUFr0ticPQIa8U6
      v/Wtb1AprDM4OIAkCkQjISSfDyfZweFJ5LEow1VKO/jCUT5Nb9YydUrVBtHwJ292d2aAB8OZ
      AR4/j+XNC0Wi9/x/gih/6svv4PAkcMcBXK79LT37NG4XtDjZoPawLOuRskF1XT+Q5/wkc0cY
      6yAUw2636yRo2eN2CPRhx+tRbH9duSsXyGJ9ZYGF5XVu56mZepvCVhmwyG/mP/VDLMtkce4m
      a/mtO7lAlmU5yW4OTzy79gD5+Wu8PbZGQGjj973IB++8x+kzR7g8USAolLm5usMLJ/poKjGU
      dpH1rQZf/cbXmb30NgsVF3rjJqeO9XPpxjw+o4IR6cKqFnnqxdfIxPc3Bu7g8DDscoBmvUoi
      08HEmz9kp1LhxDPP8s7bH+Bx+8j7kniEPD/7+ZuEMkMEXQadUS9bVY1arUYq0c9Pf/g68WQH
      pfwiSiyNWM8zNr2IO5Yj89JTD9y5X51BLADTRHhAQV3LNO/MSrdt9rK9rYwgCLdOdEUBLAQE
      4QHatSxM89YFI5ZlfWwnPFIqhB1uXRDx8XhhgSAiYGE38/325eVgf7xuYxgGlsXHF4g82HjB
      L5/3Zzled9UEG5x79xfUTDfPnT7Ku+99wFPPPkOl2mZzcRIxkCKitCibfuIBhYBbIpwZwCdp
      vPOLt5CDHXSGZWZXigwNdFMs19leX+bo0y/R1fHJSNH9SyJN3vnxP5B9+qt4anNMbWq01meJ
      9w7T1TNIZ8LejPLhe2/TsmQUq4UguYhn+hjpv39+ytT4NZY2d+juiLC6uokrGMDQTZLxBEeP
      jNhqN78yz9TMAorHw3qpzWhXipGjRx8pGW6vksjyziI/HztHOuBGxYtolDEsF+FoN2eGztBs
      3r8k0rJMzr73DprgQlSryJ4AyewAgz1737UFsL6ywHsfXCCT7cC0RJLJDo6MDNqyrZUK/Pit
      c5wZyjC9Uacvk2D0EcfLDnc5gImuG3vG5m+v729vqG7/aliAdI9NlmWacNdme6+a4M2561Tk
      ODfO/wI51MVAh4/NwhZtPLz26hfve3Hbbc6ePYssCSRiEZbW82iVCqe/9HUSgXtFniwMvc2b
      b7zDi196iQ8/vMTRkR5mZ+fRdJPugSMMdO/9QpimyY2LHyCG0lS2Nqg1NdKdXZw4Yu+F+DTu
      5wCGWuIf3v5bfIFekn6RhfwGx3t6uTF7HcWb4Wsvfwez1bq/A5gG585fBMukIx5ica2A1mjw
      7KtfI+LdO/LULK1zfblOLiozM7+I1tYYOHaGnkzc1vc7e/Ysx4b7uT45TUM1yHR2c2yk35bt
      w7LrLW/sbPJXf/VX+Huf4uVjPXiDIcq1FumYn+JOlWxXF8tzM3R0RLg0Nk+jrfKtb3yZn/74
      x+i1DYT0SQbTEXKdSVY3irhkkbaq05XLsLY0Q6Ed4MUzw7Y75/IGCHjCfOe3v83EXJGuhIdg
      LMHU7IrtvKKw30PTlOnp6UbyBlm4cW3PLMHpiQlCsRhXL5wjlkgTS+VQddjZXLmng9/N5vIc
      TVz0pNIEPAqtegnD5n1XD4PkivCbz32DvOYnv3yRE6MvExAaPHv8ZaY2t1Bs5AIJgkjALaGJ
      Abq7u5B8YebGx20vQ6rVOr09XSQCEqolUViZtz1eAJFImFC8g2yuRaO6jfAI96nZ5ROqEBfe
      +iGxYy/z0//wXZ59+jjvvv0WXf2DuFxuDMnD7NQEr7z8PPNLecqVJv/in/8Tvvu9HxMwd2hY
      bs5fvMJTT51GCHZSWZnk1JF+bsxt8upXfoOLl8f4vW//5p22HFWIB8NRhXj8fGKdE4ql8Lpk
      Tp55Cq21TSrbQzKVZnCgj8WNEkK7gmlJdPcMsLZ4E0uUccsi3bkhfJEOLMnL6SO9WKEcxbCL
      p589znuX/h3pkETAby+v3MHhs+Kx6AItzc/R2dv/qblA5eIG+ZpOR0BCdUVIhH4pdefMAA+G
      MwM8fhxhrM8RjgM8fu7oAt3W6PkscfSAHozbz+hXY/UPaq9p2uPs0ueeO3uAg3gZdV13bi58
      AG4/o4edAW7ddu/86PwqTmaUw6HGcQCHQ82uMKhpGFiCgCSKmKbBraWmiSgpmLqGaZmYpoWs
      KJiGicu1v5tXTVURJelW5ZgoIXKr7V89hd4LQ9cxERAsE0GSEbBvCxaGYSJgYVoCovhgqduG
      YSAKArphIkkigiDua26LrqsgSIiChWFaCFgIogSWhSjaq30ydA0LESwTUZLhgcbr9jLNwkJE
      FHji0693jcrq5AXySjdPD2e48v6b3CyLnMnIqPEjzFw5S1dHmDc/uMR3vvNtfvB33+dP/uy/
      J+rbHyew1BrvfXAJr89HMqQwl69i7eSJ5Prp7hskHbN3Sd7F8+dQLQkZFQuRZOcAgzZFurY2
      Vjh3bZbOmI962yAeTzA6MmTLtlXd4R9//gHPHeni2nKZwWyS4dHRfbtTDQw+GnsdZB9uQaOu
      mYhWA8OUicb6ONF/Ys9PsCyT8x+dQxcURK2GqHhJdQ3Sn0vZ6oFaL/OPb7xPX2eMpmaRSHYw
      MrS/qQyPyqe6p2WZXLp2g+XJMTpGzjD29g8JdfRx5tkXGB4ZRS0sILsVzl7cvzucDENH11UM
      S6LVaPPcs1+gb3gItbbN2NUrqIbN6K10q2i/M9OJKYgsTlyiWLMXCYmncyTCfnK5LCImmxtr
      zC5t2LL1BKP0dCZJZnJ0BBXWNjcZn7R3v9jDYFkWLsVFcWcOTQjjkSU6Ih2UKhssrc3StmxE
      jiwLyeXFLYvkcl3olsnc9UuUmvY2zh+d+xDT1OhIdyIKJusrCyyubz3iN9tfds0A3mCEyfff
      pbqe5PTL32IwIbFaaNCT6+L4mWMIgkm6I0VN1/jz/+7P+fDDj/atY4KoEItG8QUjSJZKyKsg
      pdMEIjFuzq/Z/iWNBLw0TZlcVxbRE2BpatyWoNYd+0iEeCpDS7MoFdZxPcCZRSQSwReKkcnm
      iNXL6PI+LhlNFdOC00e/wU5hGl+0H7+o8uzRLzJd2MIlCOx11Z0giAQ8MproIZvtRPKGWJia
      xG4K0xe//HWmp6fpzHZiiRLFtSWUJ1zw4LGoQjwsjirEg+GoQjx+nuwdioPDPuM4gMOhxnEA
      h0PNncX3QazDb9d+OnsAe5im+Uh7AEmSnLG+izu6QAcxMLfl0Z2HYg/jY3lzxwEeH84SyOFQ
      4ziAw6HGcQCHQ82uBeH69GXem60RMiu88rWvYqg6LllE0w28Xi/1eh2fz091c5apooi1M4/m
      ivLMmWOYxq2/aTSa+P2+R87xt/Qm7589TyCWxtXaQO4YZe36edL9w4RjHWQS+684PTN5g/Vi
      lWjYQ1MTiIWDDAzYy21ZmZtmZbOAx+ujUFEZyMbp7R/cV52bi9d+RtOQ6U4muTI7QSYcRHSF
      cSs+jg2c3r+GP6ZUWOPK9CrJgEjLUoiEQgz09+57u4/CLgdQ201WZydYtiA7cYW//7ufcvJk
      P03VJNY5wNLY+/R94bf4yjMDLL//AyTFi6gv8OO5MXYabUKRKBfOX+IP/sWf8/Tw3vcz3Q/L
      0ClXqhiSnyOdMQqqiT8YYHV5keJOlWTsjK1bAB+FgeFRFhd+hpTso1FcpVGv4A3F6Ezufe1P
      tm+IYiGP1+dHLldYWFrBkr0M9DzauNwTo0mxXEJ0BVAsjeNHXqO8/hGzi5cJRocYGdj/yldP
      MIxLXMbr9VNYWaNWKROMJEjZTFw8CHYtgSRJ4eUvf4V2ucTN6WlisRCaZtHWDPTaFm3Jh6Wp
      CJKLdEgkN3wSt9uNP5jk5RfO4HL7SKY7SYT9j9wxXdcIBMO4XdKtl0iSOXJkhFymg2JxC8Pc
      /wc6PXEdj89LZ/cg6WwOxWxTKlVs2c5e/4i1qkkm10NXJk0k6GFnZ2f/OmupKC4/0VCS1XKF
      3kSCZLyL0e5Rau0mn0Xlt8fjwaUo9A0Ok8l1I7RrlKu1/W/4EdizKP76hQ/pPf08gX2InjlF
      8Q+GUxT/+HFUIT5HOA7w+HGiQA6HGscBHA41d3SBHlZr5lG43eaTXjf6pGAYxiOFlw3DcGRR
      7uLO1vYgBJNuF8Q42EPX9Uf6sTIMwxHGugvnp9fhUOM4gMOhxnEAh0PNruOt7dU5Xn//Epnu
      AV55/gwAxWKRRCIBwNLMON6OAZJB9753zNTbjF27QTzdRTIgslho0NxaJdM7gCh7SUaf3OP1
      g8Fieu4jLCXCcHaAKzfP43eJiK44smDSk7F/M89D98AyuHZ9gojfRVvwEPC4yGTs3S92UOxy
      gHqpgCZ6mJmepLR0nYoYYXvxOl987Wuc+/AcgwM9sLBB91A/i9duMLu0gtvrJhjL0J9QGFsq
      8cf/2T95LB1TGyWahszs9DhFDzTlKOr2Nlt1lUxnjnjEv+dVR4cLnc2dLZraKkYzz1a1TsMq
      U6xeJ5E6Rndm/887F29OsrxRREwFKRQX8YUThKJx/J4n96DzE0ugzq4+/uB3v8PK8iKlco1M
      touVuRnaapNKQ0Uwdc6f/YDtWo101xCxZBLFqDN1c47SzjaPa5hd3hCS0UCWXcguN+Vyg+df
      fJ64X2F6Zo627lzC/atYehuXLOH3RdHUKobgZaT3KdLhMJvbG6ifwYG/gYjaqDB89BSZbJZ2
      aZPFlc19b/dR2KULpKstDGTcLplmo4ZmiiiCgW7eCqFJsozb5aJWr+NWFBAkECywLExDw0Qm
      FArYFq26vy6QRaVUwhsIo0jQUnVkUUCURGq1BsFQcB9lBp9M9tIFKleLBAJxBFNDs0QwNRRZ
      ptJoEA6EaX8GukCtVgu324Wmm6itBh5/cN+zdh8FRxjrc4QjjPX4caJADocaxwEcDjV31h4H
      kZJwu00nHcIet6+TepTxcsZ6N3d0gdzu/Y/t383th+nUA9jnUeoBDMM4kOf8JOMsgRwONY4D
      OBxqHAdwONTsCsBblsX1yx/hT/XSn+v4xB/vbK5w6foU3nCCF585ta8ds0yDmZtTxNLdVAur
      +GJpKoU1Ml3daLpAJGSvtjW/vkxDl3FZTVyhFJKlEY1Gbdlu5dfIl1qkol6ahozfLdu2xbJY
      W18nGvKxnK/QEQ0SjET3VRdobX0SUwkTkE0KtQZ+SUdwJ5DRSEQ77XSajZUlVMGDqFXxxTII
      pkY0srcMDNx6Zhv5IgoaqujFq4j2x+uAuMsBWrz+s1/wwte+SWl5gtWqgN8ss1XTEICvfOOb
      1POr9A4N8O/+5t8zMNDF0nqJnpSP+dU8x46OMj45y1d/85tE/Y+22WqVN9hpy2yOXaK3t4ep
      yWs0NjeYXS1y7NhRwiGfrZPg2YUVJFFA11pUyjfoHjlNJBKxFQ0xkWkWVri+7cJsVAnHOwmE
      wig27gxq1nZ4/9wlnhnJMrG8Qz0ZZeSoH5/HZaPXD4PK3PoKmjFNubRKrusplrdvUm2qdHU/
      SyK698WAlmkyv7KBgInRrlMdn6L/6Jlb42WjB4X1JcYmV4gHJCqVCvFMH8FQGNnuHUsHwO6e
      GRannzrJuQ/Ps1ncZmryOmvFMoquEQ9LVDUJv8+H3yPijeVoVHZYnppicXWTkb40K/ky5a11
      1vKlR+6Y2x9Fr23RVDUsQcYyBF740iuEpBYfnrtAS7NZFWVZWJbF6TPPkOnKMHv+bRa37J16
      680yhNO8+NRporEE1e1Vro/P2rL1BmPk0nF6Rk4wmkuwXakwNnbNXp8fAsvQUSSDuqYRjfbR
      rG9zYvBZvDLcXLhB024ukGVhWfDUM8/RkYkz8eE7rJXsVZGlst2EfC5OnT5DPJWiuHKTidmV
      R/hW+88uWRTLMhkfu4w32olezdOW/AQ9MrIo4nKJ+GOdVPMrhBNxtkst9FqBUsMgHAwSjXip
      NTWWl5Y5cfopWxmA95VFsUzmZqaJpbsp5VfwhlMEPSKiLLO0ssngQK+tbNDixioNU6YrFaLS
      FiisLtIzMIxi46K8+ZuTNDWLgeERWvUatXKRYCJLyGdvdisWCyQSScrlMnq7jiEHSMUeXtLx
      vrIolsnM4lUynccoFWdQfB3IaPg9buYLBUZyQzSbzT1kUSzyayuooodMzE9DE9lYXaJvcMhm
      Po9FsbhFPBahUmtS3soTz3Q/0dmgji7Q5whHF+jx8+QuzhwcPgMcB3A41DgO4HCouSOMdRD1
      ALquAzhiTTbRNA3DMB5aSExVVUeE7C4OdDQOcP/9ucT6OKTr8PjY5QCWZTF24SyzSxuf+EPT
      0ND0X/5SG3qDt994g/fOnkf/DLT6HRz2g0+cBL/zzoc89+UwtY2brJQtQmKdje06XklDjHZj
      ltbpP/UiA2mJpdUSHnmZiUiIqetjHD15msmxK5x87gUWblwi3DXKsyf2X47DweFh+cRJ8PGT
      x/joowusbRaYmZ4kX6rRk/AgecO4BJNqrcrNhTUA2q06WzWTysYsyc4c4+MTaK064zfG2CpX
      mb5p79T007HYLhZoawaV0jb1Zpud7S0M06DdVh/hc+2jqy2K2yXazTrVevOB9kmWqZPPF9B1
      lZ1SBbXdZr8nynp9i2qzga412K7sUK9vUW+3aLbqtm+IsSyTVqtNtbRDWzMecG9o0Wy2aNWr
      1BrtA9lXPii7iuIty2Rm8gbuSBqjVkQVvQS9Ch5FBFFhu1Sm1WoTT6ToiAfIF+u4xDam7GVt
      eYn+oSEWZqZJdnaztblGMJqkq/OTSXW3uV9RfLu8yZXZIkJri1LDIJ1JUJyfRYllOXriBPHg
      /hd3Xzz/EYpostUS8QgqsWQnI0P2Lsm7ee0yhtvFyuIGmuyhL5NgZGSERynIun9RvMbZK78A
      UaRV3yQUG6JVX6XZUsnmTjPaNUy7vXdR/NzEJdZrLmRti3bbpO/IabrS9hLa8qvzXJ5aJRFy
      0Wq1SHX2MtTf/eBf9DNk1wwgIJBIpQkFfMRTWYYGeunszBJLZgj6fbhdLjKdOTIdCUTZQzod
      J5bqJBGLcvLUKQI+H8dPnqYjEePoseP3ffn3QvYGQGuQ31zHH0lQrdQZOnYMSa/w/nvv09b3
      X87dsCAWcNGZ60aSZNaW55icXbZl22hppFMxYqks6aCL1fU1Lo+N71tfLdNCkUUK5Q10vDQb
      W3QlcrTVKuMzl2hZ9sarZ2gEtwi9Pb24Ax7Gzv6CYk23ZZvKdhMNeBjo60VxuVmaGWdm6cnW
      Bdr107u1MsUb52dxKxIdkQDVnWWEcB9PHx/k5vWLnJ/awDQMvv21VwlHfFSbOrPTNznzhReJ
      PGL2592IkgufW+L0869R38kjerNEoz784Siz82ufidZMT7aD9e06J4ZSFD0i5a11QuGwLduB
      oT6m5lYZPXac2k6ReLOKIe+nnKOFLEp84eQ3KRenkbxJXLLFi6e+wvRmAbcgYGfhKIgyqVSc
      RCKI4AkhmSJ+t91goUBHR4pwNEZPr8D2xjKR0JMtYblrCTR39T3ySg8Zr861q1dRpAadfSd4
      +xfv8fSZoywWWzQ2FwmF4wwOpijWRLbWlznz0pcZ7ko9cOOOLtCD4egCPX52uXbvsWdpLF9j
      fn2Lvv4BRo6cRHAFkBWFI4O9SFqNTP8Rnj4zzPJqiWw6hdfrwedxCq0dPp/sqQxXr2xTaUEm
      FXvsjTszwIPhzACPnz3fPH8ohv/hU9gdHJ5o7jjAQebkO/UA9rAs65FmAF3XnbG+izvCWA87
      qI/C7VsPD6LtzyOiKD6SA9y2d/glTmqgw6HGcQCHQ43jAA6Hmt3ZoGaLf/O//R/0n36etfHz
      +JOdfPVb3+HGO9/nZtFAcQf45qvPoAkuZAEkwSIQifGT7/6/lEUPz7/wCoqlkYxHKGyXUSQB
      VTNIJeOopkjI/yAhOJP3f/YjOk+/Rmn6fVy5k6xc+YBk3wjpzh46k/ZCU0uzN5jPq3jMEoLi
      I5LIMtyfu6/N1I2rrBSr9HREWVwtEol4aKqQiEYZHbWX3boyN83y2jqWqFCs64zkkgyNHtlX
      YaxaZY03r54lGw6gij6MVgFL9BIIpDk9dGbvD7AsPvzgXTTBjahWcPkjRFM5Bnv21hQCWF2a
      4+y5S2RzGUxBJh6LMzo8aMt2fvIay4VtFNlFuWXSm44xvM/jBXfPAIKL7mycUrWGruuIip+g
      V8LUdSwEqtUS1y5f4N/+zXd57+23+Nmbv0AADF0HQWL26nv8q3/1L/nBP/6Qt85d4/vf+x5z
      45f5++/9gGLtQTM4Bfr7ejEt6O3vB1Mi091NubjBxPgNNMNeemO2tx8XJslkinqjycrMDXYa
      989tGR49gtFs0DU0img0CUUSWGqDjY01FlcLNtsdQMSiqztH3CuwvL7B1My8LduHwdAq/PzC
      j3ErLhbXF2i1GkQDYTbzc6zlV2jbyAWyLBNkD4pokurooFqrsTR9g0rLXsVeIhKge+gEXZkO
      jHaD9dUlVmxqRBV3apwY6cYQPARkg9WNTW7OLdmyfRR2zwB6k3ILvD6B/qOn+fJvvAZAIBxF
      qZQJJeJs5NdJdaQYyYW4UvQgChBP9/C13/gyW7PXWd1uc2y4HyK95OfcvPTiaf7lX/41Pang
      A3ZNwO3zY8giiuzDa7lI9fYQitaYnFu1fRmfJEkEAn76+roRPEHmrl3do4DHYvz6dQKhMNMT
      1/EGQ2S6epFEke3NZTTdXmLY7I1LNAQf4VgHnapOo1ZC0+zZPgyiHOCVEy9SMKJU8mOIngRh
      v4szIyGm8jvINnKBBEHEI1toop/+/j7+//bupyWBIIzj+JeUoDaTTFZkITEiCDsYFIKBRRcv
      vYHemJeiW9deRNDN6lAaKOHBQipLjVy2nMUO4V6E2FxJYp/PdQYGBh4Y5s9vglqYu5sStst7
      h+1Wi6VkglgoyCcBnuo1lHJXPEY8SrnaIJXepP14T/ftBdVzF8jlxYi5QH0q11dEEmtE52d+
      7NlpNqi/WqyvJofaJBfodyQXaPwkGOsfkQIYP9kFEr4mBSB8zckFmkQ2z2BM+bjNncF8jbpq
      tW3byWIS35xdoElMjFLK86+HfqKU8pQNJAUwTJZAwteGToKPCocspzM8lIuEdIO9/D6ls1Nq
      H4u8V87ZyB+QWjGwTBPLNJnWNKq3VbLbGU6OC8wuxNnK5uh1O+gxnedmi4vLIru5HQJTfebC
      kT95zyuEG1/nbVzk5VpXjAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Acc &amp; Egr Details.n' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Bicycle Access/Egress' width='192'>
      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
      vwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
