<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='DepartReturnPurpose' path='/workbooks' revision='2.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='DepartReturnPurpose' inline='true' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' version='9.3'>
      <connection class='textscan' directory='M:/Data/OnBoard/Data and Reports/_data Standardized/tableau' filename='DepartReturnPurpose.csv' password='' server=''>
        <relation name='DepartReturnPurpose.csv' table='[DepartReturnPurpose#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='weekpart' ordinal='1' />
            <column datatype='integer' name='depart_hour' ordinal='2' />
            <column datatype='integer' name='return_hour' ordinal='3' />
            <column datatype='string' name='tour_purp' ordinal='4' />
            <column datatype='integer' name='freq' ordinal='5' />
            <column datatype='real' name='weight' ordinal='6' />
            <column datatype='real' name='trip_weight' ordinal='7' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depart_hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[depart_hour]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>depart_hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>return_hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[return_hour]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>return_hour</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tour_purp]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>tour_purp</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Work&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Time Away from Home' datatype='integer' name='[Calculation_597289929475764226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='int([return_hour])-int([depart_hour])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Mdnt' />
          <alias key='1' value='1 am' />
          <alias key='2' value='2 am' />
          <alias key='3' value='3 am' />
          <alias key='4' value='4 am' />
          <alias key='5' value='5 am' />
          <alias key='6' value='6 am' />
          <alias key='7' value='7 am' />
          <alias key='8' value='8 am' />
          <alias key='9' value='9 am' />
          <alias key='10' value='10 am' />
          <alias key='11' value='11 am' />
          <alias key='12' value='Noon' />
          <alias key='13' value='1 pm' />
          <alias key='14' value='2 pm' />
          <alias key='15' value='3 pm' />
          <alias key='16' value='4 pm' />
          <alias key='17' value='5 pm' />
          <alias key='18' value='6 pm' />
          <alias key='19' value='7 pm' />
          <alias key='20' value='8 pm' />
          <alias key='21' value='9 pm' />
          <alias key='22' value='10 pm' />
          <alias key='23' value='11 pm' />
        </aliases>
      </column>
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Mdnt' />
          <alias key='1' value='1 am' />
          <alias key='2' value='2 am' />
          <alias key='3' value='3 am' />
          <alias key='4' value='4 am' />
          <alias key='5' value='5 am' />
          <alias key='6' value='6 am' />
          <alias key='7' value='7 am' />
          <alias key='8' value='8 am' />
          <alias key='9' value='9 am' />
          <alias key='10' value='10 am' />
          <alias key='11' value='11 am' />
          <alias key='12' value='Noon' />
          <alias key='13' value='1 pm' />
          <alias key='14' value='2 pm' />
          <alias key='15' value='3 pm' />
          <alias key='16' value='4 pm' />
          <alias key='17' value='5 pm' />
          <alias key='18' value='6 pm' />
          <alias key='19' value='7 pm' />
          <alias key='20' value='8 pm' />
          <alias key='21' value='9 pm' />
          <alias key='22' value='10 pm' />
          <alias key='23' value='11 pm' />
        </aliases>
      </column>
      <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
      <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\DepartReturnPurpose.tde' schema='Extract' tablename='Extract' update-time='08/01/2016 11:14:08 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9541' timestamp-start='2016-08-01 23:14:08.968' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9541.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>9541</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9541.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>depart_hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[depart_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>depart_hour</remote-alias>
              <ordinal>1</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>9085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>2</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>172</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>74829.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7.8428885861020854</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2959</statistic>
                <statistic aggregation='Stdev' datatype='real'>56.28503520146397</statistic>
                <statistic aggregation='StdevP' datatype='real'>56.282085483923943</statistic>
                <statistic aggregation='Var' datatype='real'>3168.0051876300386</statistic>
                <statistic aggregation='VarP' datatype='real'>3167.6731464197219</statistic>
                <statistic aggregation='Count' datatype='integer'>9541</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>30809645.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>3</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9541</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Caltrain&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>return_hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[return_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>return_hour</remote-alias>
              <ordinal>4</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>8822</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tour_purp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tour_purp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tour_purp</remote-alias>
              <ordinal>5</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;at work&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;work-related&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9541</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>6</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6754</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>813357.29683812812</statistic>
                <statistic aggregation='Avg' datatype='real'>85.248642368528266</statistic>
                <statistic aggregation='Min' datatype='real'>0.0064451493333333304</statistic>
                <statistic aggregation='Max' datatype='real'>17382.057724404502</statistic>
                <statistic aggregation='Stdev' datatype='real'>476.67036464114659</statistic>
                <statistic aggregation='StdevP' datatype='real'>476.64538388151192</statistic>
                <statistic aggregation='Var' datatype='real'>227214.63652712363</statistic>
                <statistic aggregation='VarP' datatype='real'>227190.82197555387</statistic>
                <statistic aggregation='Count' datatype='integer'>9541</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2236965237.7847462</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>7</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9541</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;WEEKDAY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>8</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6027</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>964739.97514736746</statistic>
                <statistic aggregation='Avg' datatype='real'>101.1151844824827</statistic>
                <statistic aggregation='Min' datatype='real'>0.013984198</statistic>
                <statistic aggregation='Max' datatype='real'>18600.874602671</statistic>
                <statistic aggregation='Stdev' datatype='real'>515.54630487002839</statistic>
                <statistic aggregation='StdevP' datatype='real'>515.51928674748967</statistic>
                <statistic aggregation='Var' datatype='real'>265787.9924651403</statistic>
                <statistic aggregation='VarP' datatype='real'>265760.13500864047</statistic>
                <statistic aggregation='Count' datatype='integer'>9541</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2633167308.6820903</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_3970910124543128:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Work &quot;</bucket>
            <bucket>&quot;College&quot;</bucket>
            <bucket>&quot;Dine out&quot;</bucket>
            <bucket>&quot;Escort&quot;</bucket>
            <bucket>&quot;Other&quot;</bucket>
            <bucket>&quot;School&quot;</bucket>
            <bucket>&quot;Shop&quot;</bucket>
            <bucket>&quot;Social or Rec&quot;</bucket>
            <bucket>&quot;Work-related&quot;</bucket>
            <bucket>&quot;Missing&quot;</bucket>
            <bucket>&quot;Error&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Leaving Home.trips.pct.pic'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Time Leaving Home</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[depart_hour]' derivation='None' name='[none:depart_hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:depart_hour:ok]' member='4' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='5' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='6' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='7' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='8' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='9' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='10' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='11' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='12' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='13' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='14' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='15' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='59' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='136' />
            <format attr='color' data-class='total' scope='cols' value='#3f6a6e' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='color' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#555555' />
            <format attr='font-size' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
              <lod column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Time Leaving Home:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Estimated Trips:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>&#10;Share of Operator Trips: &#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-transparency' value='155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Returning Home.trips.est.pic'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Time Returning Home</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[return_hour]' derivation='None' name='[none:return_hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]'>
            <groupfilter from='10' function='range' level='[none:return_hour:ok]' to='23' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='59' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]' value='42' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='136' />
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='color' data-class='total' scope='cols' value='#3f6a6e' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
              <lod column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Time Returning Home:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_9991014155747149:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Estimated Trips:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>&#10;Share of Operator Trips: &#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-transparency' value='155' />
                <format attr='mark-color' value='#cc721e' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Top Ten-Non-Work Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purp]' derivation='None' name='[none:tour_purp:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[tour_purp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[operator]' ordering-type='Field' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]'>
            <groupfilter from='&quot;at work&quot;' function='range' level='[none:tour_purp:nk]' to='&quot;work-related&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tour_purp:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;Missing&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;at work&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;college&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;eat out&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;escorting&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;grade school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;high school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;home&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other discretionary&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other maintenance&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;shopping&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;social recreation&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;university&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;work-related&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='Share of Weekday Commuters' />
            <format attr='subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' value='p0%' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' value='p0%' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' value='12' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='240' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk] / ([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:3] / [textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]))</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Ten-Work Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purp]' derivation='None' name='[none:tour_purp:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[tour_purp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[operator]' ordering-type='Field' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]'>
            <groupfilter from='&quot;at work&quot;' function='range' level='[none:tour_purp:nk]' to='&quot;work-related&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tour_purp:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;Missing&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;at work&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;college&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;eat out&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;escorting&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;grade school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;high school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;home&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other discretionary&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other maintenance&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;shopping&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;social recreation&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;university&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;work-related&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:3]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='Share of Weekday Commuters' />
            <format attr='subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' value='p0%' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' value='20' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:3]' value='40' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='336' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' />
              <lod column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk] / ([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:3] / [textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]))</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]</cols>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Shop&quot;</bucket>
              <bucket>&quot;Social or Rec&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Work-related&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;Dine out&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Error&quot;' />
                <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;Work &quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Shop&quot;</bucket>
              <bucket>&quot;Social or Rec&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Work-related&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;Dine out&quot;</bucket>
              <bucket>&quot;Error&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='work in progress'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Time Away from Home' datatype='integer' name='[Calculation_597289929475764226]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([return_hour])-int([depart_hour])' />
            </column>
            <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[Calculation_597289929475764226]' derivation='Median' name='[med:Calculation_597289929475764226:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]&quot;</bucket>
              <bucket>&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='DESC' using='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='181' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='Leaving Home.trips.pct.pic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_1830910123736507:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Returning Home.trips.est.pic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_9991014155747149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Ten-Work Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Ten-Non-Work Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='work in progress'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Leaving Home.trips.pct.pic' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Returning Home.trips.est.pic' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29d5Rc53mn+dx7K+fOOQGNRqORM0CCpJgAZkoiJVlDyQqWk0bj8Xp9PN6d
      GXtm1h7vnD1zjnfSsWe0K49lZdkWLUomSIAgARA5h0YjdM65u/KtumH+KKDQhYoEGrHucw4O
      +X3166++ulW/G9/3/QRd13UMDIoQQRAE8X5PwsDgfmIYwKCoMd3vCRjAxEgP7+09xsZ17Tgq
      m6n02hAAi9lMLK5gtVk5+sF74HCg28pZ394E8QhDM1GaaitAB1VV0BGQJInOzk5WtLeBaEJE
      Q9HAbrPy/vt7aK/3EXK30FTmuD5+HEEQMJstxGIyNpsNQRDu9ya5ZxgGeACorK3F6fRijvt5
      +4c/pKLaha6KmK0mRkam+JWv/jrhUJBgMIivTOfb/3031RVlCN5yzl0QEMJh/BEZVbDhdkhI
      okrn+VOYHG7MCMwGw3z9K19manyIS8FJAuIIIx4nw/39YLGDrmOTTIyMjfDEy19gw7Ka+71J
      7hmGAR4IREpLfdicdmpq6lm6tJRYDKKKSkVVEz6HCU9pJW0NVXReG2F5ewetSxroHpkhFphG
      8nkpqXGBaEWI+dEFDaHUB+igKMwEIwDUNLTQVuOlbzaGHArQ0NiIw1tKPBZDDkbwlpXTVF1y
      fzfFPUYw7gI9yuicPXkM1exmw5qO+z2ZBw5BEATDAAZFywN9G1SRw+w7cIjZsQE+PHAUJYdN
      lViYffs/JhYJ8tHBI3nH3r9vL/3dlxibi+bVxiIB9h88WtCcJ4d62H/wCNFck73O3PgAez86
      TFzLr9V1ncOHDhJXtbza3kvnOHe5mwKGZbjvKkdPni1IOzrYy+739hBT84t7r1zkwKFjFCCl
      7+pFjp06n3cO0eAcBw4fZ7C7iyOnzpNLLofmOXD4GMHZcY6cPJdz3Af2GiAUDNA3MIg5PIUm
      SYzMK8RHznP4XB8eh44sK1gcXl59aSeRYJDe/kHWtjczODgEQO+lsxw8fQ2vW0SOxrE6PLz8
      4i4kUeDy2SNcvOihY/1WLkSDOGxWwrJMidNC78gkNc2reHz9MgACfj8Dg4PAVg59uJu5sI4i
      R4hrCqJo5dmXX8FjSexHyuuamfhgD3PrNtN3ai8zAZW4HEVBQRKtPPXCS5TYEpvcV9lA/PAJ
      oqrGmY/3MemPJ7SCiiRYeGLni5Q5zIltMTXAex8dZ/3m7Zw7spexuRjxaARN0hEx8/hzu6hw
      WQGYmpljKjxJx7Il7P7F2+iSHSUeIS7HsDo87HrxBczXd3snTpyguqUD0Hn3F/+AJthQ1Qix
      aAyL3c0LL72Y1JaXuonpFiySwO5fvI2CDV2PIEdjmK0uXnj5Ja5vBkaHB+kd8bNl62b27v45
      im5B16NEr2t3vfwS1uvawf4++kanaF3RwYkPf4mqW1DVCLIcw2Rxsuvll7FJEAiGGBzsZ27S
      ikXXkTesYv87b6OaHSjRMLFYHNHq5LXXXiIQCDIw2E9rrY+BoWG2bVzD+794G8VkJx6NEI/F
      ECwO4AF+DuAtq8LrsFJW5mN0KorPIXH50mWCczOEVJDMZnQlDDq4SyvxuWyUVtbgsiZ+YJe7
      ugjOzxKM60hmM4IaTe5lKhrbcQoRAvMzaLrGyPAIcVVldnoKh8/H+OhEch5lVTW4rIkfYiDg
      Jx4NMTUTxmWTsJp0QvGb+6LOo3sYjNjxWgQCfj9xOcLkdDChtYgE5Zt78OmxARR0QlEtMa4c
      YXwigMduwmaVCESVpHZiOkBNuRN/SCYY9KPIEcbH/XidFmxWCX/kpraiqpJYNPFZ5/1+IgE/
      4ThYzSaIh1P2ypWVlQz29xJXr2uDfkIxsFpMCEqE+IIDzuC1ThrbVgIw7w8QDc4TknVsZhOi
      GiW2QKsoKjarCUXTmfP7iQYDBKIaNst1rXpT27J0Gb6SChwWiXm/HznkJxBRsVtMSJrMjU1W
      UV2H3SJS6rTgx4QF8PsDhENB/LKGVTIjKDEUoLy6DodFoqa2HpOUuKXr9/sJhwLMRxVskhlR
      iycG1h9gFEXRNU3T43FF13VdVxVFj8XjuqIoyX+apiW1uq5d/29+raoquqppeiwWv/4ecV1T
      VV1RVV1R1AWzuDnmoQMf6PMhOeOYN8aNxWK6qmn6kYP79Nlgdq2mqYn31DT92KF9+nQgoVUz
      aBdui5OHP9Qn/dHkZ7hVq6qKHr8+3z179+jxBe+f0C74ZKqaqo1n197YXoVoNVVNfmeFjFvo
      HBRFSXxH17/rfXv26PKtn2+BVtdufncf7tmjR28ZGxbcBQqHw+jG9bBBEeFyuYy7QAbFywN9
      F8jA4F5gGMCgqDEMYFDUPLDPAQxS0dU4Sng+rd/kKkuL3pzr3Et8bjRN62l/CmtpQ0rf5JEf
      gKama9uewFrelDoHTUEJzaX0CaKEyfnwxg+lGUCJx1A0AZvVTDQcQkXC6bChKjECgRCIIh6P
      BzFHyGw0GsFqfTjCatVoAHRAEJBsrkUZMzY/TmxuJNm2Vy9HsjoyaqeO/ojoZE+ybS1rpGL7
      W+ljzo0ytve/pvU3vvEnIJlT+uTJXqLjV9O0zqb1aX2RoQvompLW72hYg/WWPiU4w8i7/zGl
      z+ytonbX76X9PUCw9zjRyb5k2926HWtpfUatEpolOnVT66xfjSBl3j/ruo4WDSYaoohkdWbU
      FULaOxz+4B8ZiFh47fEOfvzORwi6xptvfRkxNMNPv/fXmGtXsWl5E26vh6mJKVqWNDE2Ooa7
      tAohOktEsDPafwUiIUqXb2Blc+1tT24hcf8k8cAk9uq2rBvmBv6rh1CCUzibNmTd4DcY+vm/
      B11Dsrmpf+1f5dQGuo8S94/jaFiDrbw5qy4y0snc+XeT7ern/llWA6hyCDV8c6+qOktzzuFh
      IjrVR6jvRLLtqF0BWb4PeWaQ6aM/TLbt1W1I2QygyAz9/E8AMHsqqX3hf885D/+VAyihWVzN
      m7CUpP4eU95BU2OcOHMevyzQU2tj2YYn2bCkFLtZRCqtZvPadiytW/jgJz/m2Wcf49zx/Vy+
      VoOsmVDl09iVeWKeRtxiECEUomSFlHNin4TQ4BnmL+6h/vU/yrphbhAZvkB0ohtLaX1eA3wS
      IiOdREa7MHuqchrA4MEiPHgeebofa3lLbgMEJgfZuvMLLCuNcW1KY/TCAX5yRuTNX/kV3FYJ
      u8uH2WxiWXsHyH6wefC43VQ1LWdmqBu3tYLOIT/emlIq62qYn52HxqpF+RDOpg1Yy5oRzba8
      WkfjOiylDVg8+d/bUlIPuoaYZQ+dMm79aszeaiy+xTmqGdwmgpj43gCTK/8R09m0HmtFC2ZP
      RfpQxoOwxScemCQ+P55sWyuXIlnsGbWBa4eJLdCa3eV42nak6eTpgazXAMIt1wDjH3074zVA
      xeO/iqNuZUrfwE//ZcZrgPLtb+FsWJP6uYLTTBz4Tkqf2V1O5Y6vpn8wQJ4dRg3NJtuWsgZM
      dm9Gra6p6Go82RZM1rt+DWnkAzxE6KqCKofS+iW7J+2HEhm7ihr1p2ltlUsxOXwpfdPHf4qe
      4S6Qu/UxrGUNaf2PEoYBDIoaIxTCoOgxDGBQ1BgGMChqDAMYFDWGAQyKGiMYrkjRNQ1y1la4
      jiA+FDFdt4thgCJlbM9/TgnYy0bNrt/D4l2cp/kPIoYBHkH8Vw6Sae9u8dViq1x6W2POd33E
      /IX3sr5e88LvYXaV3dbY9xPDAI8gs2ffgQzPN92tj922AdC1jCETDztpBhi+doHhiJVNKxr5
      4L3dBHU7q5ZUcPjkRcrrl/Lip7bdj3kaAErEz/zF9xMNQaRs42fu74TyIE8PEOw9DoDJUYK3
      45n7PKN0Uu4C6brOsTOX6Ok6w0DXKfSyZWxcuYSJ4X7mwnHstltTJAwWg9DgeUZ2/znxwFRO
      nRaLEOw5lvz3oKMEp5NzDQ9fzKvXdT3vNkjVThY8l8RpYTopR4BYYILB4XHsJo3B2mpGh68R
      m9BwWHTaVqyhvqo8kTxV8NsaFIIgSohmKzzCd1sKRRALzyERxMLP4G2VSzL2pybECBa+9LWv
      47HqTAfiLG2YIYqNMqdEz8AIshwzDHAXcNR14KjLX75csjpwtz0BwMMQxmXyVCbne2sUaiYE
      QSg4v/iTaIGsORwpBrC7S7gRtV5lBbg56fVlj+6tsIcFyeamdN0r93saBWMtqcNaUne/p5ET
      4y7QI0jdS/8iY79guv1rOLOnCkfjuqyviybLbY99PzEM8AhSyKmBIJnTMsky6q6f7xZ6mvaw
      YSTEGBQtRkKMQdFjGMCgqDEMYFDUGAYwKGoMAxgUNYYBDIoa4znAfSbun0jrM7kr0kueX3iP
      2PxYmtZRuwJXy+ZkOzrZm1a97QbupVspWftySl9sdiSlKnNSu2RL3iLEjwIpn1DXVGZn5xAk
      Ez6vh1g0knh6qMUIBMNY7Q5MaIQiUSSzBZ/Hfb/m/UCjyiEiI13Jtr22PWsJ75H3/jytPn/j
      5/6MWyOuolN9yBPdaX9vurWatK6jK3LG99LV9Hj+6GQ3s2feSet3Nq3LWIR45tTbaPGbC4x7
      2nZgWYRwh2DvCaILPp+7dTvWssaMWnl6gLj/ZiSoo2ENoinzQz15ZpD4/MQC7eqUp9Ypn1CO
      TPDtv/wBbqfGc1/4LTo/+CHmunVUM8qFcR3/9BgvPruDv/vJz9iy6xWe2pRaO/Juosoh5Mke
      7DUr8u6Z4v4J4v5x7DXteZ92+q8eIu4fx9W0IW1BiFuZPvF3RCe7sVe3U7r+1aw6JTTD9PEf
      J9uJ8ui3X8P+QSI8dCGl7KKjYfWiGECeHiDUfyrZtte0ZzVAqP8UgWuHb2qrl0EWA4T6zxC4
      ejMU2la1NMUAadcAAgI2m43pkW7OXxvl1JGPUXSYHOnD5CyjedkK2lqWsOUe/vghUXB28tD3
      0LLs3RYSHrrA5KG/QYtF8mojo5cIdh8pKLZcjcyjBKYy1t00yIyuKSl79geNlF2pKJpxu6xg
      thKZneQL3/gW+kQX3WNzvPnW1zj10W5iikZJedk9v3q2lTfT9Pn/uyCts2k91vImREv+kufO
      xnVYS+ox+2ryah0Na7H4ajF7qwuah0EiZv+20zDvASkGsNjL+a3f+WaqonY7bdf/t+nNNwF4
      cufz92Jut43JWVJwrLireWPB47qaNxSks5TU0fDZ/yvZznXKZvZUZVyj60HFtWRzyjVA2jXI
      beJu3Y69pj3ZtpRmP61yLdmKraot2c61o3Mt2ZxiQPGWU1EjGO4hYb7ro4x3jOzVbTgb1ybb
      8vQAk4e/l3EMV/NGfKt2pvRpSizjRbNodT3S9YDAKI9uUOQY0aAGRY9hAIOixjCAQVFjGMCg
      qDEMYFDUGAYwKGoMAxgUNY9+vGsR4r+8n0yPdywlddirWpPt8Q//O9HJ3qzj1L38L1IqusXm
      RjKOa3KWIBUQdvIgYhjgIWLq6A/TQprLt30xrZ7m7LlfZi2PvtAAuq6BrmV/w1vGGPvgLzI+
      NS7f+kWcTalFs9RIgJnTb6f0SXYPpetfy/5+94HUfABd5ehHe+mbDPLSK6/hsZtQ5ADnLg3Q
      UFdFRUV5UqupChcvXWb1qpX3fNIPAzdCDASTNW/VtJlTb6MpMQRRomzTZ7PqwkMX0dVYaqf+
      BaDwgrL3Ck2RCQ+dT+kzuSuy6nVVSepNnsq8JRVVOQy6imi231HiTspfRmeH6J0z8fyOzUT8
      k/z8R+9Qs7SDib5efvLjq6zuaKayoY3Zoat46ldALMDpw/sI6Q6+8tWv4LDc3S/Cf3k/nuVP
      Lqo25h9n6tD3qHrqG0h2T05tsO8U/q4PqXzy63mLvQZ7TzB7+m1KN7yOu/WxnNrQwBm0WBhB
      Muc0wKOMpsSYOvpDANxtT+Q1wMSB/4/YzBAVj/8qjrrb3wmnGECyOglODXH6VACnz8d8KII+
      OonDXU5TYwAEMx1Npbx9MUiAEdw2HZOrlBaXjWhMvesGsFW35Rd9Qq1kduBsXItQQG1LQTIn
      ogkLiCAxObxYK5Yg2b0FzcPg/pAaDu0o43Of3snEvExLfQWVVQ04XQ4kyUw00IpgdVJZWcrz
      Oy04XC5EAdB1TJKA23b3LycsnyAOv1CtZHfj7Xi2IK2zYTXOhtUFaR11KwveM1U89iV0TS3I
      WI8qotlK5ZO/BhRW27T62W/BIhTrT/3VCgK+8mp810/1W1sXLCpQcXMBtNbWBzfB4WGk0ISR
      8m2/kn5x+wkWlLiXSHY3FY99OaUv11FWECXsn+AInwjVvvNwbSMc+hFECc9n7BdNFkSLPdme
      /Pi7yNMDWcepfu5bmBw3T+GUyHzGpYVFi/2hLI9u5AMYFDVGPoBB0WMYwKCoMQxgUNQYBjAo
      agwDGBQ1hgEMippUA+g6naeP8Ivde4nGc0cJhsLhuzw1A4O7T2ow3PwIJ6/O8MS6RibGhzn0
      4YfULFuJEI1QatOZlVUGBgeoranlo4On2PH0dlyizvqtj2M1GQeTu4k8PYg83ZfW76hdicmV
      Wp1t7sJ7xGaH07TejmfTCs7Ks8PIkz1pWvfSbWmFhcMjnSjB6TSta8nWh/JBGNxiAEGUUGIR
      5uf9hEZHcNYu42rnWUwqjIsxNEcp6zZv4ErXIM1LGojNjHElKrL1MePHv5D5Sx8Qm7tZy9/Z
      uC7rGrtDP//TRBzQdazlzVQ+/qtpuuj4VeYu7E7rN7nK0wwgTw8QHb+apnUt2ZLWJ0/2ZC6P
      3rwR6RYDBHtPEBm+mK5tXA8ZDBAPTqcUxnU1b0AQM8eMaUoMTQ4mGqKE6R4FEabMxuqu4pmt
      7QxOR9i87UnOnjzO2hdfIzYzyMScTFVlJeVVJbjsPqZGRhCVaez2Vu5FBb3Y/Bjx+XEcdSvz
      xn/7Lx8gHpjA1bI5a4ntGwz/4/8Dmoa9biWl617JqZ0+/rdEJ65hr2mndMPrWXXRiW6i49eS
      bYuvFrIYQJVDKbVBC6lo/bAQmx5g5sTfJtvOhjVZDRAZ7WLqeklHs6+G2p2/m3VcTZEZ3f3n
      iTGbN+Jb+VzOecx3fYgSnMa1dCvWkvqU19KC4RqWtlPXApIksuWxJxL91WW0LpB53T6a6muZ
      GB9nTVVVsl/XNHRBQLwLjggPnWf+4h7qX/+jjAs3LCQyeonoRDfWipa8BlCCM6BraNFg3jmo
      UT9KaAZVzq81uIvoOkpoBgBNDuWVR4Y7kaf7sVW15TaAGgvxvb/+PpF4nJc+/xUIjOOtqCHi
      nyUsq5S47cwHA5RX1TM/OYyrrIbg7CShuEjvhWNIVg/lSzowR2coq2kgODNBVBVpaqy747g9
      V/MmbJWtiGZbXq2zeSPWihYs3vwlz63lzaBrmDzZs5WS4zaux1Jan6jobHD/EMTE9waYXGW5
      tYCrZTO26mWYPZVpr6WuEDM/ir12JV94eh0jPec41DVFJHiQ+NwcFknAW1mGJplRYkc5efwY
      DSs249VnaF6+mt7LXVTXLWVkYi8xyUPo46NEpiaw2SQ+89Xfocye9t6fiLtV8rz66d8sWHtr
      3ms2HPWrMS8wn7W0PqvW4q1B12+eApkL+EIfFhyNa2msX5A/kSN021G/isY3/jTRyHMGIZos
      VD/z2wXPw7Vkc9bXUqJBNUXmZz/5MdPBKDue2MHHBz6msmkpoixTadeYjIp0rGvjSmcPfVe7
      WLn1aaa7T+DHTZ1bZz4iUFlXR+f589QtbUcLBSh1KLQ/9iqld2iAYifmHyc+l75InrWiBdMt
      qZzRyR7USCBdW96cEt4MoKlxdCWWphUtjrTy6NGpPtQModaOuo68S1E9iBjh0AZFjREObVD0
      GAYwKGoMAxgUNYYBDIoawwAGRY1hAIOixjCAQVGTGgoRj/CD7/4N0ViMDc+8TnOJCc3kYP/u
      f2TXZ15l4OIp+oMO1iwpx1dRTWBmAkWwUltdweDl0+w+eIZoTOfXvvZFxkbHcVk0Lg3Ms2ZZ
      LVhclHic2eZhsIjIM4MZ+02ucqQFdYHG9v1lxlDoG9S9/IfJp+9x/yQzp36WUSfZ3ImiXQ8h
      t4RCjGCtXkGzNMXE4BVO7B9AUGRsLi/v/fzvMUkSU3NR9rx9gfaNOwiNX0OyOvn13/hNurou
      s2vXTt595216e/rZ9+7fU9HUxmxA4cN/+B6UtvCvf/+bdyVQrliYPPx9dC21PHrF9rfSyqOP
      7f2vGcujpxeSLfwZqKZEiU5cy/ia5MgcoqJE/OgLVpWX7F5Es7Xg97wXpBjAVtKANP8xvbJC
      S0cTNrEHzVWC12WjstTKhSt9lFc10tAwx8r2VqZ9VkzEAVi7bh2/fP99BMnC+GAPksNDRWUN
      fv8ATc2N+JpXL0Ihu0eT6EQPSngWye5Nqd9/K5GRSxnKo2s8iOXRAeYu7CbUeyLZrnjsyzjq
      V2XUaorMzMnEEcbk8OFbvSvruLqmEho4A4DZXZE34jcXKQYQJQuf/eLNZIwdW9aniLclq42/
      eP2/Nz9MVVM7X/tae7L9zI3/PpG7NHihxIPThAfP4l3xTF6tEpoh2H8aXwFFbwM9x/Bf3k/V
      p34jLaYmbdzIPMHuo/hW7SxovhMHvkPlE1/HfEvCStocrh0mPHQOe82KnAZ4lNFVlVD/KSCR
      D5DTAGqc6WM/BhKLfuQzgP/KQQLdR6h57ltp0cQpF8FqPMzf/+j7fP/732d4Onec9Vj/VcZm
      ggSDidzgK12XOH/6LOlhVVx/vQtVu/2wI0E0IdnchYk/gVY02zA5fBQSFSIIEpItt0kWjutq
      3lRQ+Hbi0CjkjYI0uD1Ei/36eg7p2zd1fQCzg11PbeT9rhCXDv2SS55aguP9+Bo7GOk6Ssxc
      yqrmUrrHI6xuqaD75En6Ala+9eWXOHP+MpbIFCfOn2HNyg50Wzn+8W5i/mnwNVFnnuPScDWr
      GnIvLJENk8OLqyV7WGuK1u7BnSH9LxPOhjU4G9YUpJVsLtyt2wrTWp14V3yqIG3F9rdge0HS
      hwqzswxL6c2988LCvLcimq1Ufeo3gNxVpAEEyZLUFrL+gqt5Y9YQ+aypVfNBmcfXV/Ne32Wm
      u3tx2Lz4zComi53R3nO4pBjeskqqHDZQosiahEUQWd5cy4XOy0iOcUJzU6yoL+H42fO0PNnG
      9HwAbtMABlC+/a30Nb0e0PLoAN6OZ/B25D9lhUQ+eqFl4gVRLFibjzQDWLw1bFyhoLeUUlJe
      wapV6/CVVyAJOpKgYzGJbHvSxpKGKkxWB97hCTC78Vg11m9+ionZOT735g66LnbiXLsCqy7j
      behgauQyrVuNTKo7wVHbnl8E1L/6LzP2i+bUPbBkcyPlWupJvHlaaHKWUrY1863Oh7UiBCzi
      +gCRUAirw5lYNSYDoVAIhyM9ycLA4H5hJMQYFDVGQoxB0WMYwKCoMQxgUNQYBjAoagwDGBQ1
      qc8BdJ2us8e42DvO08/tpNSdeIzfef4CbatXofgnGZxVWNaUXnFNkUN8sGcvJl8tTz++CYFE
      0FI4GsPpMIoCPYgEe4+jhGazvu5peyL59FYJzyXLEd6KIJqxljXclTnebdLKox+7PMmWtnKu
      9fYxduUMcWsZWnAaTQty/PhpvDXLOHFgD8vWbqH7zAFi5jK++PlPc+iDd6ldvoWec8cZHCjl
      ww8+orqqlHN9AVbWWhC8jex6apsR7nKXiU72MP7h/8j4mrt1O6XrX0u2g30nkSd7s47latmc
      NECo/zRz59/NqJMcJdS/8od3MOv7R2o0qMlMPBJksG+OofAgCCZM872oFg+dXddY0d7K+c4e
      rvUPI3kq0SwenGIURdWxWS1MjQ3Tef4kNl8FcdlPTKqnplTg8OH9lC+NsfOprQhGUPRtM9/1
      IbGZoWTb0bAaZ8PaVJFOerhE8rV7+8gnOtFNPDCZbLtaNmUvjx6XUaOJanaCZLoevHb3SZmN
      xVnBi09v5NrgFG9sWMdoTxeqdTMOSaXE56Tzcg+7Xn6N9YPdVDcvJx4NIqJhlgQ2PbmLs6dO
      8uKbX6GuzI7PbaO2roHx8Qk2r2okbvHd8Y9flcNIVscdjXGn4xaqjQcmic0MYa9dkTciNDrR
      Q7DvJM7Gddirl2XVyVP9REY6k22zpxIe4DOPYP+plHwAZ+O67OXRxy4XXB4dYOLgXxGbG8XV
      vAnfqudzasPDFwkPd+Ju3Z5WpzVlNjpQVt1IWXUjJrOF5atS8wG2b0/E8jTWVaOpKgiJOHdR
      FFA0kTUbNqMBZpOJ8urEN1NfW50yhqIomEy5y5tnw3/pA0ry1PC/QWTsCvbqtkUft1BtdKKb
      2TPvULPzn+c1gHI918FaUgc5DGBwEzUaQA3PocXyL9UVmx8jPHgWR+0KyGkAXaX7zAEO90ZZ
      UedEEe3MTwyxZPUWJnvOEhZ9rGjwcfryIO2N5QyMjDEwB7/+xZd4+2f/QHC0C0/b4wihaTZv
      28bp48fw+EqIRsI0tq8j5p+k/9plnn/9TWzSJz8aFPojBQr+8X/ScQvVupduw720sNBp15LN
      OSsYFwOS1Ym1YglQWIXssk2fQ1dkJHv+vA9fx7NZk6NSrwFEE81NDVyNhBjqP8undr5ApzzP
      8WMnQQngss4z4xZR5AhjY6NYbU7qGiogFiSsmWloaiamzHGubwhVOEZMdMBYLxt3vcnen3wH
      T8tWTKJKMBzH5n54IwjvF76Vz+NuvZk4UEht/PtJ2aY3Kdv0xoKe7Ds9W+VSqj9BiLPFV51f
      VABp5yImh4+WWge6ezU2s8jUTJC2tqVYRQ2zqGM1Cei6QE19Cw6Pl/OXB8DiwiGq1LUso6Sq
      CX8wytq1awjHdKRIKT6XE5MgsH7TGs7uG8DlePhKaT8IWEpq82okuwdXliOPtaLltt9btDgw
      ucszvpZtPa9E5O+DfdNj0aJBR4eHqKitx5Th82pKlM4rA6xc0crw8Cj19XWL8ZYGd4gaDaZV
      mViIZPMgiI/us1IjHNqgqDHCoQ2KHsMABkWNYQCDosYwgEFRYxjAoKgxDGBQ1LkRYCkAAA+I
      SURBVNxeUI7BA0tsboSZ0z/P+JqjbiWeth0pfaGBM8SD0+na+lVYPI9+HSfDAPeZgb//Y9DU
      lL6Gz/67tFql8vQg4x/+ZdrfN3z63yBIN79GLRbNWvPf4k0PHwj1nyYy2pXWb3ZXZDTA1NEf
      ocUiyba9riNrGcpgz3E0Rb6prWnHnOVp8v0idX2A8Dh793fz0guPEQ9N8//+t7/hN//pN9iz
      5yOe3dzK/nPDjHefISCV8ulnNvC3e87we7/1pXtS7EqLRdDiEaQCCtnG5kaQZ4awVS7B7Mq9
      wecv7SM2P4qtvBl36+JUso7NjjC+/9tAokhu3Ut/kFWrq/E0A2RRJrQZ+u8l0fFrqFF/sm3K
      Ufl6rnMPanjuptbhy2qA8HAn0yd+CoDZW0319dqfmdDiMsO//A8JrbuC6md+O6tWV+MMvfNn
      1+daRs2z/zTl9ZRfkq5ryHJiI188eQSLTeBk1wh2Lcjug2fZ/sQOnt2xia1PPEvnqZNI8hTd
      E7mrSC8W/qsHGf7Ff0jZ+2QjMtLFzIm/RZ4eyKuNTvYQHjiLPJVfG/dPMrbvL/LqdF1Fk0No
      cgg1GsyrNwBdU5LbLH+Is16wVoebWjldm3IEEIDL547yfSWAGJ3l5Zdf4vDxc7z8+Cq+++4F
      Su1mgoKAroSZU+28/vImThw5TOvruRMSFgN7VRuiyYog5Y8itVW1UiKZsJTkjzmyltQDAmZf
      ep7zrUhOH6UbPlPIdA3uNjeKAhdSHPi6JlNcU4oBrM4a/vBfpx6uly5JLNjwO9/oAKBp9Q6a
      gMfWJOLtW5ZlXvFjsbGWN2EtbypMW9ZY8KohuRZiuBVRMmPx5r8wNLsrqXr6twAKWnfgYcJS
      1oAm3zzq5wrJtpY2oC5IbRQt2TPpbJVLb26zPMV2RbONpjf/fUHzFSVzTq0RDHef0dUM0Zii
      lHZdpcUiyNP9aVJbdVuKyaITPRkvliGxmkrphtdT+gI9x4j7J9K0ruYNWHz5w68fZoxo0EcQ
      XVPRFixMtxBBMiGaHqxF6u4nhgEMihojHNqg6DEMYFDUGAYwKGoMAxgUNYYBDIoawwAGRY1h
      AIOixgiHvgvIM4MpbdFkw+ypSNPNXXyf+Yt70vo97Z+iZM2LKX2h/tMEFxSavYFv9a60sA95
      eoDoRHdKn2T3ZFwtfeLAdzKGQ5dvfwtnw5q0/keNFAOo8RAXLg3RWOUgai6hptSV9Q8Huq9Q
      0bSMkb6rxBVoa297IA4nuq4TuHYYANFszfil30CJzBMeupjQmsy4WrLX54z7J5hdUB+/dN0r
      mJyZQ4HH9vyXlLatahlVT32j4M+QqYy5EpolOnEtrV+Vd6T1RSd70mr5W0obcm6LgqemqSjX
      E2hEqwPJmv03oimxpGklm+u+GErXdZTrJdpFsz2tlmiKAeIxPz/4zl+x84Xt4G3iYN9Flq3Z
      QPe5U5hL61heZefklRE+++nX0CPTnLwAw5fPU1lRyuxYP/1jU2zeupXjh4+w/ZkXaaouWbQP
      MvHxXxObHqR042dw1HXk1M6efhsAyeHNbYDA9E2tzZ3TAGosQmT4YrKtrXzuk0z/kUGNBhh5
      9z8C4F3xTM5gQl2Rk9vXUlKf1wBzF/cQ7D5K2dYvYK9qzamdOPAdYrMjlG35XM5CyLqmJOfr
      WrqNso2p0bxpO+1N2x/n+KGDBOdnsFgkLl7owh8zMT14jfHZANNjfQQicRra13Nhzw+pW7GR
      yfFxhobGWLG0hvd3v0vP0BhXevLH138SErH1/ixJIQaPBJqayCDLtsDHAlQ5uCi/h5QjgMns
      Zs36NWxa24gsOhjoU2muKuHQ/mOs3b4DnximY9VGbBYR0WTmyZ2vs3RVE72mCAJQXu7ixepW
      Os+dYeXy2y/EmomyTW+gKTImZ/6KyL7VLwDkrcsvWuzYru9pcoXq3hjLtmCvJBRpUJlotiW3
      r7W8OadWMFmTWsnuyTu2b/WugsPTy7Z8Hl2J5c34EwQxOYdM+SGpBrC4aFvmAhIXVcuXtaKp
      MWprW6goT5zvLjz56FiTWJ6nvWPFzYkBTQ2pixAsBmZPZUE6QRDwrni6IK3FV0PVU79emNZb
      VbDWu+KZlETFQurdLyaS3YOlNPXC2OwtbPvlQzTbCt6+oslSsPaTUmjCviBKOedgRIPeR3RN
      Rc+QDyyIYtpSQtm1pjuq4KyrcTL9BO503IcBIxzaoKgxwqENih7DAAZFjWEAg6LGMIBBUWMY
      wKCoMQxgUNQYBjAoaoxw6PuIEppFWVA89gZmbzWSxZ7SF53sITrenaa1ljVir1me0je27y8y
      RpQ66lfhaXviDmf9aPHIGUCJ+NGigWTb7KlKKR9+g8hoFxMH/2dKn2iy0vCZf3NH7x+d6Gb8
      o2+ndgoiTW/+aZo22HciYz5A5ZO/lhbhKE/2Md+ZrnW3PZFmAHmqL6MBslV6C1w7jKbGkm1n
      /eqsod6PGqnl0UNj/Of/9D2sThv/5Ou/hh4NI6lBeiZlWutKEcwO3n/vH9n1/PNYzCbkuIIs
      y1itVhDNCGqUuC5R4nVne7/bRp4ZIjY7hK1qWc7YmsDVj/F3fZhs1774+5jd6ckouq6nRR3q
      eu4y5bG5UeTpfmwVS7LHJmUYN9OP8UFi7uL7KfU+LZ7qRTOApsRQI35MrrJFK6OvKXGmj/0I
      AHvN8pxh7JGxK0wd+T4AJmcZNc//s5TXUwygoxOLxXF43Xy8++/4+Ng5NqxfxTylTF6d58Ko
      TG2pjXff+QUdrdWc7x5hcnqeGCJedynttQ7eO3GVf/uHv7soHzTlg4xeYv7iHsq3/ZN7Hlx2
      g+jENWbPvEPpxs8WHJxX7ETHrzH58f+k8XN/RqL++CKgq4SHzgOJPA5yBB7rmposqa9Z0ktG
      plwECwis2vg43/zmb1BXXkJJRRWrOtpRwtNcvDKMzSwimUzYRZkPDp1GkkysXruOJcs78Fo0
      znVewW6zkD+a+5Njr15OybpXsZTcv4KttoollKx7teAq1QZgq1xCza7/jUX78QMgIEjmxL9C
      yqPn4Jby6NW89kpiGZ2NT73IxqcSeakr12y6ozdZDAoteW6vXpZSXlu0OBdtDpaSuoLWHHjY
      sJY3pyw8ki834pMgmm0Zl2a6szGtNL7xJwVpreVNVD/zTYCM14JFGw2qykFisyOpnYKYNxUv
      /7hhYrNDaf2Z0vYi41eJjl1N63ct2ZK2lFB0/BqRsStpWmtFC47aFSl9o3v+S8asKkfDWrzt
      T+X9DMWCEQ5tUNQY4dAGRY9hAIOixjCAQVFjGMCgqDEMYFDUGAYwKGoeuWA4g8IID10gMp7+
      DGIhotmWVqT3UcMwwCNGPDhNsPtoxtckmwvP8icBkKf7CXYfyTmWaHOnGCAyfi3jAzbJ7i1o
      AfEHEcMAjxhqeB7/5Y8yvmb2VCYNcDtMfvzX6Iqc1u9q2UzZ5jdve9z7yS0G0OnpOsdoAJrL
      bJy5dI2G1g5WL2tk/953CWtWHnviCbyO9LqYl84eo2doklUbttFUc3+iNR91VDlEqP90oiEI
      eJY9fn8nlIfpk39HqO9Usl2+7Ys46lbexxmlk2aADz/YR2XrOpSxKSaDGstsdnRN5dSpU3i9
      Xs6W1TDTe46aJe2gm9DjAbZse4zzJ04hlNWgRmb5wffeZcOWLZw8epSSEi+KplO7pAPZP8X2
      7dsWNS4wE2o0iDzVi6N+9eKOGwsTHb+Ks2FtXu3UsR8TGb1MyZoXcsarQ6Lk+MyZdyhZ8yIm
      hy+HLsjsmZ8nGoL4wBtA19TU6s15om5C/acJj3ZRvuXzeaM8lcg8sdlhHLW5S+VDYm2Huc69
      lG16A3FBoCTcchdI13U2bd3O1VNHmZVh3aYt1FUmavx7yypZs3I5fVc7EUwmLncPM3D5KMNT
      UUQBTFYnW7ZtY6rvIt2Do1zu6sJcUosenmXb07u4uP9nzMVtd/3HD6DFo0Sn+hd9XD0uI0/2
      FjwHTQ4WXr47Q93PYiMemCQ6drmgBCJNDiNPF1aCX9f1rNs35QggIGIxiax57CmW1ZVTUl+H
      02pG11RaGmoZ82s8+9TjdF3qorWhmeFzUzRuTIRKr9m4mbrqKmq9TzMnm1mxZi2yApJci8du
      wWJ1sWnDvTn8md3llK57ZdHHNTlLKN3w6YK0JWtfwdfxHJLDm1cr2dxUPPalvDrRZMFWnUh/
      fBjCuARBBEFa2JFT71u1E9+qnQWNbfHVYPHVFKb1VmXdvqmnQIJA+9rNtN8iEkSJp3e9mmzX
      1daiayou2zM01iTSH1tXXP8ru4edL76U8ve6IrN95+tUOM0FTfhRwOxa/Jxak7OEqie/vujj
      3i3KNr1B2aY37vc0cnLbd4EEUaKpMX+CCiQWSmiqL8ytBneG5PDizlL5QbJlX8+rECoe+1LW
      26APK8Zt0EcMs6usoNM/0eLIm/guWlOz6XKtxfWwYiTEGBQtRkKMQdFjGMCgqDEMYFDUGAYw
      KGoMAxgUNYYBDIoa4znAQ4ISmkUJTqf1m301SLfcrw/2niAenErTOpvWpy0wHZsbTSmMewNr
      Rcsdlx18GDAMUCBaXCYemEi2zZ6qtMjC20GeHiQ6cS3Ztla0YCtvTtOF+k8zd2F3Wn/Fjq+m
      VYYLDZwhmiHby1rakGaAufPvEhntStPWf/qPkW4pkaiEZpk+8dOUPkfdKtyt29M/GDB15Aeo
      cjDZttd2ZI1gVUKzKVqLr3ZRDKiE51AXlMu3eGtSSiTeYgCNn3z3/ycgeGkrM9E5HmDt+i1s
      XrmUP/6D3+Wt3/wmf/Xdd/j9P/ht3GYTMUUlGo1ic1o5e7KLHU9sueMJZ2P2/G7i/nHsVcuy
      bvAbyDNDyNMD2KuXZSyNvpDwSCdKaA57VWvOis+x+THGP/hvyXbNzn+etd6+PDvM+L6/BBJp
      hfWv/p/Z5zrVy9z5d5Nt76qdGQ3wIKCrcaLj11L6zJ7smWDRqT7UBQuAmFzZv4v5S/sI9tzM
      ZKt//Y/SjmwLmT37S+LBKew17biXZP/d+S8fIHD1YLJd98r/kRJyfosBBOprKjnVM0fUbUPX
      wev1ATq11SX87Ge7qawsZ/cvfsn61mquDM0wOhvCZjVhFxavoGom5Mke5Km+nBvlBtGxK8xd
      2I249Qt5DRC4dpjo2BXEzZ9bvJLnupbMnLoblbINIDrZTWxmCNMdxiGlrg+ga8z4w6iRAKpQ
      witvvEqdx46mxKluXcl0Zz/Lmr1IQph9h8/Q3LKE9VsfZ/jSCdDv7tmUtWIJotWZda+7EFt1
      G6UWG9bShvzjljUhSOaciSgGDx62iqVIdi/mAkOis/G/AKHNNWGaNLdkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.trips.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.trips.pct' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.n' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Work Travel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Non-Work Travel' width='192'>
      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
      dtAjktUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='work in progress' width='192'>
      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
      OmIgTMhp/z8vH5n40psaRgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
