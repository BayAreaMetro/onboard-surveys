<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='DepartReturnPurpose' path='/workbooks' revision='2.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='DepartReturnPurpose' inline='true' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' version='9.3'>
      <connection class='textscan' directory='M:/Data/OnBoard/Data and Reports/_data Standardized/tableau' filename='DepartReturnPurpose.csv' password='' server=''>
        <relation name='DepartReturnPurpose.csv' table='[DepartReturnPurpose#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='weekpart' ordinal='1' />
            <column datatype='integer' name='depart_hour' ordinal='2' />
            <column datatype='integer' name='return_hour' ordinal='3' />
            <column datatype='string' name='tour_purp' ordinal='4' />
            <column datatype='integer' name='freq' ordinal='5' />
            <column datatype='real' name='weight' ordinal='6' />
            <column datatype='real' name='trip_weight' ordinal='7' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depart_hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[depart_hour]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>depart_hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>return_hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[return_hour]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>return_hour</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tour_purp]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>tour_purp</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Work&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Time Away from Home' datatype='integer' name='[Calculation_597289929475764226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='int([return_hour])-int([depart_hour])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Mdnt' />
          <alias key='1' value='1 am' />
          <alias key='2' value='2 am' />
          <alias key='3' value='3 am' />
          <alias key='4' value='4 am' />
          <alias key='5' value='5 am' />
          <alias key='6' value='6 am' />
          <alias key='7' value='7 am' />
          <alias key='8' value='8 am' />
          <alias key='9' value='9 am' />
          <alias key='10' value='10 am' />
          <alias key='11' value='11 am' />
          <alias key='12' value='Noon' />
          <alias key='13' value='1 pm' />
          <alias key='14' value='2 pm' />
          <alias key='15' value='3 pm' />
          <alias key='16' value='4 pm' />
          <alias key='17' value='5 pm' />
          <alias key='18' value='6 pm' />
          <alias key='19' value='7 pm' />
          <alias key='20' value='8 pm' />
          <alias key='21' value='9 pm' />
          <alias key='22' value='10 pm' />
          <alias key='23' value='11 pm' />
        </aliases>
      </column>
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Mdnt' />
          <alias key='1' value='1 am' />
          <alias key='2' value='2 am' />
          <alias key='3' value='3 am' />
          <alias key='4' value='4 am' />
          <alias key='5' value='5 am' />
          <alias key='6' value='6 am' />
          <alias key='7' value='7 am' />
          <alias key='8' value='8 am' />
          <alias key='9' value='9 am' />
          <alias key='10' value='10 am' />
          <alias key='11' value='11 am' />
          <alias key='12' value='Noon' />
          <alias key='13' value='1 pm' />
          <alias key='14' value='2 pm' />
          <alias key='15' value='3 pm' />
          <alias key='16' value='4 pm' />
          <alias key='17' value='5 pm' />
          <alias key='18' value='6 pm' />
          <alias key='19' value='7 pm' />
          <alias key='20' value='8 pm' />
          <alias key='21' value='9 pm' />
          <alias key='22' value='10 pm' />
          <alias key='23' value='11 pm' />
        </aliases>
      </column>
      <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
      <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\DepartReturnPurpose.tde' schema='Extract' tablename='Extract' update-time='09/19/2016 10:55:59 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3970910124543128]' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' />
            <calculation column='[Calculation_597289929475764226]' formula='int([return_hour])-int([depart_hour])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9910' timestamp-start='2016-09-19 22:55:59.810' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_597289929475764226</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_597289929475764226]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_597289929475764226</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>8745</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9910.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>9910</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9910.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>depart_hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[depart_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>depart_hour</remote-alias>
              <ordinal>2</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>9443</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>3</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>173</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>76530.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7.7225025227043389</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2959</statistic>
                <statistic aggregation='Stdev' datatype='real'>55.934006356637767</statistic>
                <statistic aggregation='StdevP' datatype='real'>55.931184186230219</statistic>
                <statistic aggregation='Var' datatype='real'>3128.6130671043938</statistic>
                <statistic aggregation='VarP' datatype='real'>3128.2973644740096</statistic>
                <statistic aggregation='Count' datatype='integer'>9910</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>31592430.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>4</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9910</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Caltrain&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>return_hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[return_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>return_hour</remote-alias>
              <ordinal>5</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>9151</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tour_purp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tour_purp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tour_purp</remote-alias>
              <ordinal>6</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;at work&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;work-related&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9910</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>7</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6767</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>814542.4801714624</statistic>
                <statistic aggregation='Avg' datatype='real'>82.193993962811547</statistic>
                <statistic aggregation='Min' datatype='real'>0.0064451493333333304</statistic>
                <statistic aggregation='Max' datatype='real'>17382.057724404502</statistic>
                <statistic aggregation='Stdev' datatype='real'>467.97797553315132</statistic>
                <statistic aggregation='StdevP' datatype='real'>467.95436353608625</statistic>
                <statistic aggregation='Var' datatype='real'>219003.38558410679</statistic>
                <statistic aggregation='VarP' datatype='real'>218981.28635246359</statistic>
                <statistic aggregation='Count' datatype='integer'>9910</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2237055047.4505811</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>8</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9910</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;WEEKDAY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>9</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6032</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>966440.97514736746</statistic>
                <statistic aggregation='Avg' datatype='real'>97.52179365765565</statistic>
                <statistic aggregation='Min' datatype='real'>0.013984198</statistic>
                <statistic aggregation='Max' datatype='real'>18600.874602671</statistic>
                <statistic aggregation='Stdev' datatype='real'>506.26322795713588</statistic>
                <statistic aggregation='StdevP' datatype='real'>506.23768426389034</statistic>
                <statistic aggregation='Var' datatype='real'>256302.45598157891</statistic>
                <statistic aggregation='VarP' datatype='real'>256276.59296886635</statistic>
                <statistic aggregation='Count' datatype='integer'>9910</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2633950093.6820903</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_3970910124543128</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_3970910124543128]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_3970910124543128</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>13</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;College&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Work-related&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9910</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>52</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_3970910124543128:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Work &quot;</bucket>
            <bucket>&quot;College&quot;</bucket>
            <bucket>&quot;Dine out&quot;</bucket>
            <bucket>&quot;Escort&quot;</bucket>
            <bucket>&quot;Other&quot;</bucket>
            <bucket>&quot;School&quot;</bucket>
            <bucket>&quot;Shop&quot;</bucket>
            <bucket>&quot;Social or Rec&quot;</bucket>
            <bucket>&quot;Work-related&quot;</bucket>
            <bucket>&quot;Missing&quot;</bucket>
            <bucket>&quot;Error&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Leaving Home.trips.pct.pic'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Time Leaving Home</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[depart_hour]' derivation='None' name='[none:depart_hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:depart_hour:ok]' member='4' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='5' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='6' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='7' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='8' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='9' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='10' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='11' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='12' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='13' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='14' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='15' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='59' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='136' />
            <format attr='color' data-class='total' scope='cols' value='#3f6a6e' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='color' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#555555' />
            <format attr='font-size' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
              <lod column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Time Leaving Home:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Estimated Trips:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>&#10;Share of Operator Trips: &#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-transparency' value='155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Returning Home.trips.est.pic'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Time Returning Home</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[return_hour]' derivation='None' name='[none:return_hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]'>
            <groupfilter from='10' function='range' level='[none:return_hour:ok]' to='23' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='59' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]' value='42' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='136' />
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='color' data-class='total' scope='cols' value='#3f6a6e' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
              <lod column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Time Returning Home:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_9991014155747149:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Estimated Trips:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>&#10;Share of Operator Trips: &#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-transparency' value='155' />
                <format attr='mark-color' value='#cc721e' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Top Ten-Non-Work Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purp]' derivation='None' name='[none:tour_purp:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[tour_purp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[operator]' ordering-type='Field' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;SF Muni Early Tranche&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tour_purp:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;at work&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;college&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;eat out&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;escorting&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;grade school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;high school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;home&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;missing&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other discretionary&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other maintenance&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;shopping&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;social recreation&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;university&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;work-related&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' scope='cols' value='Share of Commute Travel' />
            <format attr='subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='56' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='288' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]' value='68' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.7031491994857788' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk] / ([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5] / [textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]))</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Ten-Work Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purp]' derivation='None' name='[none:tour_purp:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[tour_purp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[operator]' ordering-type='Field' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;SF Muni Pilot&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]'>
            <groupfilter from='&quot;at work&quot;' function='range' level='[none:tour_purp:nk]' to='&quot;work-related&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tour_purp:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;at work&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;college&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;eat out&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;escorting&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;grade school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;high school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;home&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;missing&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other discretionary&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other maintenance&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;shopping&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;social recreation&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;university&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;work-related&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' scope='cols' value='Share of Commute Travel' />
            <format attr='subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='52' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='372' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' value='false' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' value='p0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk] / ([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5] / [textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]))</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Tour Purp.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Shop&quot;</bucket>
              <bucket>&quot;Social or Rec&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Work-related&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;Dine out&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Error&quot;' />
                <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;Work &quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Shop&quot;</bucket>
              <bucket>&quot;Social or Rec&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Work-related&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;Dine out&quot;</bucket>
              <bucket>&quot;Error&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='work in progress'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Time Away from Home' datatype='integer' name='[Calculation_597289929475764226]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([return_hour])-int([depart_hour])' />
            </column>
            <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[Calculation_597289929475764226]' derivation='Median' name='[med:Calculation_597289929475764226:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]&quot;</bucket>
              <bucket>&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='DESC' using='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='181' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='Leaving Home.trips.pct.pic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_1830910123736507:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Returning Home.trips.est.pic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_9991014155747149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Ten-Work Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Ten-Non-Work Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='work in progress'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Leaving Home.trips.pct.pic' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Returning Home.trips.est.pic' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.trips.est' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29V5Bk53Xn+bs3vbeVlVneV3W1RVtYgqKnqJE4NBKpkUKj0WheNmYmJnZn
      Zh/xtBG7+7IxEzEhPax2dqWlSIpYEiQEkTAEuuHbd3nvK6syK73Pa/eh0U0U0WhUZjVs3t9L
      VXZlnj7nu/d/75ffPed8gq7rOgYGLYr4cTtgYPBxYv64HTB4sOi6jq7rCIIAcPfnb7/n3X+7
      8xkAQRR57yfe9R5BQLyHzU8rhgA+Y5STq/zV3z3Dk1/9OtVMmu6ONqwON4ouYjfrlMpVqnur
      CLHjWOp5BoaGkIt7/M3f/HfskTG+/oWHEMwuRF1B1EHVZFTBgoccf/2DF3A67Hzzn/8zPDYT
      VUmhVKlgRke0uQl7bWwlc/R2hFle22ZosI+1tQ36BgawmD6Zkw1DAJ8xHIEosZCLbCZNMRFn
      8uYNZF3D6fHis2j4vE52czLWlR2uXbvJN77/l3zh7ChPnD+NuWOUX/3yZVAUzD4PbqBazXPh
      K9/EI9y+C7R3dvHWpYt0R7xsJDN4Yv2sTk9hs+gIJittXguTEx5W19Y4OhDj+Ytv8o0//Nd8
      8cKRj3to7okhgM8YlXwG3ezE7XTiaG8nGI5iMouASnxtkVxF5+joECa7A8Fk5/hwNwBufxCL
      20vEb0e2hWh3yCzulOnrH6U3FqaeqfHFr/4uZ44N8PbLv2R2NUH/QD9DRwaZv/oW4egI/e1O
      ZlcTPHx+FKmSp62rn/MXBI6P9ny8g3IfBGMVqHWYnZvjyNjYgzWqycwtbjA2Ovhg7X5EGAIw
      aGk+md9MDAw+IgwBGLQ0hgAMWhpDAAYtjSEAg5bGEIBBS2MIwKClMQRg0NIYAjD4VKNIFW7e
      uEVd0X7rLzrx7fjdV9vx7Xt+3sgFMvhUs3jzDV6/FScYjTJ1+Q06Rk4gpdao24JolRLJrSUS
      VQvF9Dbf+fZ32Fic4urMGifHBpheTXx67wC6riFJMvVaFU1TkWRl398lSeJ+WR66rlMpl1E1
      bd9nJEmikdyQeq1KqXTbjiRJjYZxXyrlEqVSCVV7cNkqmqpQKpfR3hmbZnyW6nXqknz3tSxJ
      vN9QNzKeuq5RLpfveTzfj3DnIFGnwusXf43kaufGW6+zsLGDy6KTSiYpVCRmp2/eff9bV27Q
      HTDx6htX6Bocw/TUU089dUD/PlmoVX72ixf59U//HxSzg/W9MoXkFk6Pm/mZGX758mu0+d3Y
      3D7M4nsLOK5eep5rU3Ns7hVxmSR2MiXefOVllucWCHW3s7y8hddpZmFhCVUws7G8gMMbxGYx
      7bPz7A//juX4Fsvru+wlk6i1ErvpAjZRZnkzSTgYQKoWmZyew+WwUahKpOJbvPDiywyOjGK+
      T578X//X/514Mks40s7C/CLBoI+pySm8gSDz05OYnR5W56e58fbrVK1hIgHXfYdM1zWe+fEP
      WNvYYGU9zo3r15mcnsIsmnC77UzPLmEzweLqFm2R8D0LY0Dlv//1f2M7VyMWcrK0tsOtyy+T
      r4sE/B7mpqewuX0kNpbJVzUuvvQCo+PjB7rSbs5e5m+f/iV+p4nnX7uGPxBEKqbYTOSRK0VW
      19bxh9r2H09NJpGr8sTnv0A9tcmxc4/S7rGgWr30dEYRNZn2rgEG+noIBYO0h/1spes8cvYU
      wXDw050M9/Tf/TV10cPszCK/8+RpVEeYvfVF8mURr61Mqubg3/2bP71nVdSPf/j3/MF3vksu
      neKf/uk5rJqG6gjgM0OunGBxJcHQQD/dXVFWN+PMLyzz8JNf51tfe3yfnX/8h6f5wrd+l5/9
      /U+xuJzkE2lsNpFyJctmssK//5/+I7deeQaLJ8Dm5g4dQ8dIri6TL+b5i3/9r+4rgL/6L/8b
      vcOn6Ym5ufjWBMPdYXR3B5ZqgqI5RC65Ti1fJuqF4d/5Pkc6PPcdL11V+H9/9BO+950/4Ec/
      fppCVcJpAZ/LQq5YY2llg2PjR/D3HuOrj51438qw66+/xNszcfxugcGhMTaXZ3C5XOQqCr5I
      jOTaKoLNCVIZm8vLd//w25juYeu3qeT3ePonT9PZP8TKbhGLXgephF2AmmClryeM5OzjyxfG
      D2DtN9SqFWRFxel0Yfqt8f5UfwcYGRnDFjuKx+3m9KnT/PLFi5w4fY5iWUVQShwzQ6Gu4rO/
      N8zPP3aOnz39E/rHTtHfGSEr24kF3IjAoKcPbzhFzK3y5vVp+o+fw+dyc/rEe1OJgyEXP3/6
      F5w4f4FCNk1XtAubSQYROtNV/E4rY+PHePXKBA8/+hhXL18m1DGAv7hDTdFw30cA0fZ2SqUs
      mjlGyOehe2ic61evceL0GfZu3eDoiTPIxRJRn0Aql4IPEIBgMnFiqJOf/PTnnHviiyxPvIXV
      H6U3ZKcsC7j9UY4OdePu6H+fqz+gq2TyJTo7OxiIOplZ26G3b5DO9jbSFZX5qVucevgxdpcm
      ETyj+Oz3LrG8F+VCDrPDR7itHU+kD6WUQq/m2CmCv5pmZ6/EE1/oPqC13/D0j/4WXyCI5uhg
      vMeHN9JDLbuD7gh8uu8AHzaFzC6Xr89w7tHH8TmtH7c7Lc3a8jJdAwOYm6hH/tv/87+RzZc4
      +8TnefbHT9M1egy3TWD86HFDAAaffd56+y2ODfVwfWGbYmKdrtGH2FudQnO1GwIwaG0+tcug
      BgYPAkMABi2NIQCDlsYQgEFLYwjAoKUxBGDQ0hgCMGhpDAEYtDRmuJ3gpCgHSz81MPgsYdwB
      DFoaIxXCoKUx7gAGLY0hAIOWxhCAQUtjCMCgpdlfK6jrPPujv6HrzO9iL61xdWaZ9t4jfPnx
      h3j1+ed4a2KOr37jW3R3hFDrNZxeL9VSGbPNiajVUUUr87OTWDSdoYfO4rVZPhSnX33lRXqG
      j5LaXqOmmnn0kXNsrCxwdWKeo0M9JHIVwl4b6WyZ848/jt30/lVE5VyKl9+eYKw7SLZUo3v4
      BHp2g9VUkaA/QCa+jNnfjVBOoLq7ePjkcIPeqrxx6VWwu7GjUlZFrFoVrG7Onj3NfVy7S24v
      zuXJZb7yhSeYm7hOvlzD4by9D1ggfLtssqP/OH1R3/va0JQ6P3/ml3zpq08wMTFLKNrHYMzN
      61cmCLd3ErbJLKfrqKUMrkAbp08c/eDI5DqzUzfZKQp8+fFTXLlyA1mwcHKkizduLhGw6ygm
      B+fPnuYefQnukoqvM7G8S9RnIZWrcP7RR1mbuUm+XMPu8VHN7mFy+NCRaO8cpTfmv2+cv3jm
      l3ztn3+Di7/4Oee//i08QoWrV25g8/iol4qIVgdSOYfo8O0XgFzNML+ZYbt2Cb9N4/t//C+o
      lMuAyKOf/xKpms76jYsUKw+xPvk2miNAdieDI+DFVt3D2nkMUz1FdjtO++jxD0kAGlaLjc3N
      LR46MsyNuQ0AQm4LA2OnGBtqZ+3FV8iIMNBmJVXS6fK9/+jbXD4CHgeiKCIoVbZ2M3Q5REQ0
      0vkKmJ2cPTnO5TcynD4+1IS7GqVyBUE1cerMONdn1hBFgcTuFnXlNM4DDJHL34bbvg6AKIpo
      tTyrmRJWQSK1keAPvnaaq1e27ysAQTQTi4SxuIMMdITYKlYopQqUVTO2XJK15B4ObwCrKLK1
      uXUgAZgsNgRN58yZh0C0MjrUw/TqLm9evoGs6+zmJTyBAKrOfQXga+vAvh4nX67TG3SQqSoI
      ooBWy2PuHEPIJnE6LNSlGhvr8fsKQBDNRCNhEEQ6ohE0wGRxMjLYw8x6mtG+GOvJEuVyGVEz
      758Crc7P8tVv/wlD7S7Gxgb54Q9+wOVbC+9YFvC43fiCHYz0+CnURdxOG8dPn6MnGmJ4bIxi
      Povb62dosJd6Xb6Hew8AXUM0WbBZzfz6pYuEQyHS6TTxRIHhwQ5mZqZwu9z4PQ5WUwptnvtf
      Ys0WCy6nA7vdjqRbiQWsqKIFVVHp6+nE6fEjCho2pwfr/Y7iffx1eby4nDZe/vVFgqEQNruD
      cHsX96jVvycWiwWn00E2k8Zis6FaPPT3RGkLBeiPBbn89hSdA133tSGIJtweF/V8kpXdAnaL
      jmR2E3SIWO0eHr5wFq/Xg91qoav74IXnkmgj4LKQSu7w8sU3CYdCnL9wgYAvQHdPDJPZ8oFF
      8RaLBafDQdDjYCMnIdYKWG12VIuHemKeEnbcNiu1qsrAcO+B4hQEEafbjajL7O1uM7e8jd2s
      cOmN6wT9XtweLy6X87PxHCCTyRAMBh+IrVoxi2r347J88jaDzmUzeP2BB7JRta4q5EoVAj7v
      A/BMJ5PJPrBj8FHG+ZkQgIFBsxirQAYtjSEAg5bGEIBBS2MIwKCluVsPIMsf0rKlgcEnmLsr
      0Zr22ztsGBh89jGmQAYtjSEAg5bGEIBBS2MIwKCleY8AlmZukSlJVItZXnzhebZ207x+8QWe
      +6dfkq98slaK1pbmWd28vRXm5uoSV67fQtN11tfXySTjzC2u3HejvA+iUswxMz3BysY2M5O3
      yOQrh/BWZ215gZWNbRLbGyytbR7C1m02NjbQ7/w8ZEJLKbdHulBhbWme7UT60L4BoGusbzy4
      OHc3NqgfIlBdU1mYnWJ7N8Xywiwb8eR+Aei6wvT0FFev3uClF1/k5JmzFLIpJianqEsSJvMn
      aUclDV+onfjGKjrQ2RlDVjR21xe5Mb2EaLURX1/jMGtbTo8frV7FbdOJJzOsbmwdwpqOLxhh
      Z3Od9e1dKpldaofoRFMtZrg1NY9cLXD15tQh/ALQWJudZCdbwu50srKyfEh7t1ldnGVmcfVQ
      Nu7EqVQLXPz1a9QOIXRdV4jEulhbXiQUibG5trxfAMmVKXaLsLw4h9lsYmt7m2y+iNsXYmxk
      GEH7JPUOEthcnqV/9BgCsLE4T//YONl8Cb1eJl+s0O6zkasf4r/QVYqSgFWtEox2IlUPcwcQ
      2F6dp29kHF3XUTX9vjnyH4TDEyQa9mFxeOmOhg/hF4BIf18f6BqyJiLqD+I4axSKFaRKEfUQ
      V6E7cSZ2E3i8DorF5o+BIJhYmJ7k6MmTrMxPMzJ+4nY2qK7r1Ot1snu7OAPtVHNJrG4/6ytL
      dPUNsruxTKWuMjA8hucTs1eWysLsPCaHB0GTCYdCuL1eREEgl8thFXUSuQp93R333CXyQOga
      uUIJn8fF2uoqbR09uB1Nxq+rLM4vINhctPkdVGSRaCR04A3k7kUul8Pn95PP5fD5/Bwme1ip
      V6hqZsqZXczOAOHA/Tfca8RHv//9C1gOasPn91PO5bD5fFiaDFSVa8wvLOPy+qgV81g9gf0C
      +LSi63rzJ7lBS/OZWAUyTn6DZvlMCMDAoFkMARi0NIYADFqauwv7xjzaoBUxiuINWhpjCmTQ
      0hgCMGhpDAEYtDSGAAxamn3pnbquv5M+LCAKoOk6oiCgvfM9WRCEu+nFgiAeKvekGTRN+y0f
      AIS7/3bbc/alQAuCcN8Vrjsx37FxJ6474wD63fd9kK3f9hUERFF4j9+/8e3gY/huH/f7+xsD
      jcUpIHD7GDdq611W0bTfjIuu34759l/uHAsQD5j1d6cu/c7/fdun2zb2+d1AnAjvnMvv+PmO
      sbs/9wlgY/JNfvraLAgC//bPv83/8r/+V/79f/qP/N9/9V/wul0cOfc5bl76FZq3h3/5p9/F
      bjpQXA8ETa5w5foUiqbR5rUxvZbGb9Owe4JcOH+Wq2++RkkWcJo1FNHOYHeUV197g9/79h/d
      twPzysIM8e1tRFcAUZUYPn6WkNvCC8/8kFNf+j4Lr/8MX88RUskUnT39jPR3fqCvui7zwq9e
      5Njp83S2ebh+9SZlSaGnzce1mXXOnhzk8vVZvvWtb2I+wLmR2lnnzVtL/LOvfZHVxVm2Njcx
      e0Ig1xg+fo63n32ax7/3ffz3sZVPbLKwuYPF6mBnO8GFRx/BY65y8fIcoYCHbDqJzR3CK+aQ
      XcOcOdrzgX4p9TLXb82g6GYeOXuUVy6+jjcUopxJY/eGkMtpTHY/58/dvz36HZI7m1x69S1+
      79vfJb25xMLSBiMnjnLzjVcJd/SCptA9coKu8Psn6t2OM45o9qDktyA4xOkBP5cuTxJpbyOb
      TGJ1upBrZUSb571TINFkgnqNa5ffwGIz8fqVKXRdYy9bpqO7l9959ByPPPnkR3ryA4gWB11t
      XjzBKJos8/jnHsfjdrOXTKIDqmDB67SQzuSoFwp4g246B4/h/IAmt/2DQyi6mVoph92kkS2U
      2Zy/xU62yvLMNVZ3c6wtL2F2OMllcwfyVVcUQm1trCwvg2ilt6sNlzeIRVA58+hjeMxw7Nyj
      mA84AQ3Hegn7nHf9VbFQK+ZwmnWuv3WRZEmiUCjf14avvRurJhH0+wi1BVheXUe02HHZLezu
      biNLCoqiMHxkDNMBF8bNVhexkBtvMIRaK1GSNPKpXfIliWI+RSZXplzKoRwwHTrsd9E9cgKn
      RaSzbwi3Tcfm9ONv6wS5gttlJpsuHCBOmc7ePlSTk/MnBqlkkygmB6nkOp5gL1qtiMMbxoyy
      /w5g9/jwOCzYAp1UcPGf/vN/5tWLFzl14Qk6fWYy2QIhbwBTsynBh0Ctl7g5t8axE6eoqm6C
      bjvbFhO9/QOkkgkCHgdFCUaHB0nmKlSzafqGPngzi8nrV3AH2wj7HKRSKex6BV/vCb5steHs
      GGekK0gZB8ntLbyBg6X16jpoqkIwFCYR3+TGzVmGx09QqxbobvMRX47T19tYDr/P5yO1l2R7
      dQFXIETE72ZvL8lDFz7Hke5Vgj7XfT+f3l5kr2oiLGjomkYo4CGVKSCiMjg8Rj61h83tQzTZ
      8LgPdsbKtSKT8xscO3mKdFGitz2IIlppR6aimuho1ylWVUwHFHo+m6N/cIDUXpJCNo1o92DV
      yoRifUQ9Oqsb27R33D9NO711O84uQSEQCoMqUTN5aXOVsLuHqRUSBKK91EsZbN7gZ+NBWKFQ
      wOt9EG2+oV4qoDu8D+gOp1MoFB+Yb8VCAZfHe6hCmjvoqkqpWsPjvr9wDmjtUxvnZ0IABgbN
      YiyDGrQ0hgAMWhpDAAYtjSEAg5bmbnt0SZI+bl8MDD5y7j4HMBaDDFoRYwpk0NIYAjBoaQwB
      GLQ0hgAMWhrTU0899RSAqqpoSp2XX3ie9WSB3u4OBGBpegLB4UTHhOVd6Ytzc7OEw20fg8s6
      8zNTFKsqye010vkqoaCfjZUFthIZpFKOlc1dBLXK0to2kUj4QLntqd0tFpZW8AbbqOX3mJlb
      wu7xs7W4gMPnYGpyGrPNjctha9hjpV5iaX2XgNfG/NI6lXyamfllYh2dDee7aKrC7PwCDrPG
      5Owi/lCYxfk5wuG2A9UW6LrO6vwMNn8Eky4zPTmBItqo5xMUZBPbqwtkijVCB0z8ezdzU7eo
      yAKZ5BbJbIlKfo/tvRzhYLCp2pG52RkCwSBzc/OE29pYm53FHg4fqDeoVMkzMTWLYHHitJmY
      npxAxszGygJ1zYTTorGykdyfDbo2fQVX93GiTpW1+QlevHSd7qift29ewWL1U5FNjPZ4WE3W
      iAXsLM9OkCrU+P3v/jGB+yXdP1B0wuEw04sbnDl5lBu3JhgZ6iO+HacoQVyu4AlEWK2U6PSI
      JMo6MfcHD5jTG8SXTpAp1QnbPcTCWXYSKeIr6zj9FgS7h/m5OdoePdeYt7rOzMwk+aodpZwm
      ma/y6OlREgXlwOnQ76ZayrO9m6RaLnB8MMaNuVVSO3GOHBk/oEMKW6urBAaOYjdDKOhjYztO
      UM9TdqvE1+LEupvIBNRVNrfidNsdFDJVLEKRtK7jMQvU1EEcDXbWT++sMzm3QndXB5vxBP1d
      bVy7NsmXR8dwHEBMgslKf3eUld0kkUAfoaCPldUFBMFJenGOjMNEEff+KZA3EGJ19hY3JmaZ
      X1igmElSVXRisU4sJjhy8iRrK6skd3cpFArUsTA+EKVU/QjbpusamVwZk6By6+qb9AyNocgy
      GiIOqwl/IIRZriOjkSnJOK0Hu/Tkk1vEKyYibjOVQoqZtTxDvTGi7SFc/jDVXBKbq4mOyaoE
      oplCPoOmixQLBdZW1+kfHGjcFuDyhfC57DgtJrYSWQLhNiKBg2dhCqKFaDRyuxV6rUJZEtCk
      Gh2xGKJoJtLeTqWYb9wxXad/aITMXgpNrSOpOqKmUpO1poRerkpYBBnN7CLodZIvlHG7LAdu
      j65KVS7fnGNsqBe5fjtOQRexCDUQRATRQj6f/63u0LpOLpNCsDoxo1Cty5jNFuw2C8VSGbfX
      T62URxMtWEy3TyyLScRsc+6bHn3Y5LNpTDYHxWwWwWKjXqvQFvRTU8BlM1GsKfhdNnKl27fy
      g9x+i/kM+WIFm6BQt/hAKuMPtWHWVawOB+m9PQLhNsxN5ehqVCoSTqedSqWCKIDV7mw63bdS
      qeCwW0mmskTawlSrVRwO54GnGfVqBdFsYjeZxWkVcfmCWAUNSReRKgVEqxO3096wX4VsGtHm
      QlTrKIIFq6BSUwX8XnfDtgCq1Qp2u5NqtYLD6USqVDA7HJgOMgWqlUmmsrhcLkqV+t04q8Uc
      Do8fu0WkUpM+G+3RDQyaxVgFMmhpDAEYtDSGAAxaGkMABi3N3dVZUTS0YNB6GEXxBi2Ncdk3
      aGkMARi0NIYADFoaQwAGLc1+Aeg6pUKOUqXWkBFd18lnM1TrcsMOVKsVVK3Z7+E6tdptX2uV
      EsVyBalepVCqoEh18oUSjVi+kw6i6xrZbBZN18llM6iaTj6XRVEP2OX1fahVyrfHVtep1w/X
      hEBTZdKZHLqukcnmmq7p1jWFuiSjqQqSolIuFahJjR9HgGq5SKVa5/ZxqZPLpNhLZWjm8CpS
      jWRyD0VVyGRz1Kplkskk1VoT46brFPO52/EV89QlBV3XqNXr+9OhM9sLPHtpEqvVyte/cIGp
      hQ3GBrrQrU5K2RSZZAqbP8zE5UuMnXqYrrAHRyDKzvxlbq5msFgdPHpykLVEke52Lxubu/QN
      9LGxukYw1oNe2kP0RLDIefKSwNzVt3C1d3DmoVMsLSwyNjbM8uIywVgvgz3RD4wrsbnM1blt
      vvHlJ9nY2CCeSGEWdKxmG1VNwmsxM/DQI/gOkBFayaf4+Ytv8L1v/z7bC1OkZJHa9AR1LFhN
      UJc0nL4Q508dafwAAOgyr736Gt5wlKhfYHFb4oufO9ucLSC+uUk+HWdtuw1zbY9sz0MMtjfa
      51Nn+sarVMy9iOlZbP1nsNTSpHNlHnvkfGOW5Aqvvv4WoUiM7rCTyzMbPH5mjCtXJ/naV7/c
      oF8wP3ET2RkkFV8lX6oQ6jvO3sIN+k49Rqe9sebMilzi2vWbmMwmRNGCaDHTFbAytyvtF0A6
      scPIqYfp8sDzz79Ab0eYZ5+bZeTUQ6zPTVCrWTGZVlBkldLOMj+7XuRP/+R7JBIJzj76JcxS
      jhdf+jVhr53pyRq93TEuXnoNVbSjzs6zuraIr3OAgNXC0WNHqNQVLPUil379Il3dXTz7j/+I
      3R1hYWWbwZ5vfVBY3JyYR1Jvd2NuC3jIlFXcZom1pU3ah3pJbywTlfQDCcDpC9PbcbvAp5Cv
      0HPsKFdeWsDkCiKYQFI0nIdZMVYlVNFOrZin48w5tpPzzdsCYh0xllY3OH2+h9RmiVqpCA0K
      oF5MsbS1hycY5MLYKCuSQHtbiJ29xtOhVamGYHVRzKe4sVNBlnSq+TQjx880lfXqDoWpZPfY
      yNRxmGREkxnd6qIj0HhmqS5L1GQFK3X8wUFqxS2mZrPIVv9vKsIA/G0Rpi5fIllSODnSw8xq
      ks89cYHpiUm6+vro6eojHPIQdNtp74qxvlvl/MlR2toivP7Ki0iCk752D7tlODY2RG9vL2aT
      ma6efgJeDx2RAD1DR4m4BfbKGr1RL5rZw7GxYWbnlzl79gxt7R34XDY6OmIfEJbI0MgIVrOJ
      Wq3G8tIivmAYh0XE5g/T5rah2f0MdbcfeFcXSZKwizKCK8jawhKDI6MoskIkGkXQNcKRdgK+
      5lJ7ES3oUgmTw0MsEkKSVIJBX3O2gNX5aTSLE4sus5evEuvsxNXgldFsczHY34XF4sLntqKZ
      bCS21vEG22gLBRqyJVpsSOUcDm+IRx+5gNViQjSbiUZjmE2NK6BazJEuyfR1x5AVnVhHGLNg
      IxRqYswEgWKhSFu0B72exR/p4cLZhzBbrM0/CEtsrWH2RAi9s3HDx0m5XMblehBtvkGqlhFs
      LizG8kBLYDwJNmhpjOucQUtjCMCgpTEEYNDSGAIwaGnutkc3iuINWhHjDmDQ0hgCMGhpDAEY
      tDT7coEquQQ/ffZFJEXnD//4exTTe/hc8OqNHc4c7eT1N6/xhScfQRVsoNaoSSqRSBt7Gwu8
      8Np1dNHGt/7gK+TzZWq5BLqnHbdZIxCOYDnoduEGBh8h+zrDLVy7SNnbz+KbLxOIhKjpFpRa
      EbCQKVbQZIny3iplW4zegAC6wFe+++csvvkcHaNneO3iy5w6cYznX3yRnlgU0WHn6uXrPPG1
      b/O7T575uGM1MHgP++4AfWMneObZ51EtNjq7urlxa4qR0RHKVZVaeRHd66cjMIY1PIBZLRFy
      mRGBoydP8auXX8dqd5JKxAmFI/T09ZMulhkdHWN0sOdDcX5m8gaqycmx8VEWpicQnX5Mcpl0
      WSbitZPIlDlz9tSBekm+m2Jml7nlLQZGx1mbnmDk5FHWFhbQ7EFOjvU36a3G1M2baBYXFr2K
      ZnJxZGy46f6gmiJx+dotxkf6WZibIdR/gv5oYy3N1XqJG5Nz+MMxrFIGIdCLubJD1RRioCvc
      nGPozEzeQhJsOE0KNd3K8fFRGg1TkapcuzXLaH8ns7OzhLoGKOyuNRUnQHZ3jZTkJOZW2UjX
      UcsZBJtnvwCsrgDf/aM/uvt6/NjJ3/zxiYff37q7hz/6ow/nJL8fyeQeisnBsfFRsrksZgmU
      cpZ0WYaanVSmjAI02uzb6Qvjt62RzheplauYnB40WWbwyGFiFBgZG+PtaxOIalBcPV0AABI0
      SURBVI1aPUn/0DDNdpWXJYm6JOEJhJF1E73tjWdJihYHo4PdzK2n6bDJZKsSYVGlVKg25xSA
      WmF1I0F7LEb3WD9vvHUd/chow/sDyJJMXarjD7eji0sM93Xz1s5mU3Fqco25lSXsrj5mthKo
      ok4uWyXaad8vgFJmh2f+8XmsgQ6eOD2OzeGkXJPwu2wUKzWCoTCpxA4+t5WpxQR+n4vRkQEm
      b9ykXq0THegj7HGjixZkuU69XMLp9bK4uMpDp4437PgHhIU/FEVAQ5IkOrr7KeRzSC4vgx6R
      vKYxPuChXAdbg42OC6kEgc5B9rJV2qNtCOiIdhduWxN989/F/Owsp06fJrW7RT6Xx9pgz/x3
      Y3O6CQd8gIrb40dsYgcKXZOZW45z+vQppMw2NcVMwNtGUT5E5Ztopa+/H02qsLuXIdbmR9HA
      2uDQOdxegj4PqGU8/iiCoDUdp6rIOJ0eKvUybqeTbLlG38AA9Vrpvd2hr196jsDYI/zqH37E
      2bMnuHTxIoMjwyiKht0TYHpigi9/6XMsrWyTyVf5yz/7Nv/fz3+FQ86jWW2UqgrDx8+wvTLD
      xtIip3/n90gtz/C73/k2H9YWGrlcDr+/8duigcF7lmacbi82i4nx46eoFrO0tUdxe/2cP3cO
      X6CN4b4YpXKdWGcfAbcVXRSxmkS8Ph+lqsKRsWGmb1zG4Q0zOjxIuVhEtFoanoY0gnHyGzTL
      A9kfYHlxgd6hEcz3uDvpqszi6hYjQ81+eTQw+PAwNsgwaGmMp1MGLY0hAIOW5u4USNMO1/TJ
      wODTiFEUb9DSGFMgg5bGEIBBS7NPAEqtyNM/+iF/94MfU5Vvz4yUSoo3rs4COq9eevWeRkqZ
      HX7093/Pj3/6HOo7E6rc3i65UmNNdg0MPmr2fQeYv/Jrit4BFt98hf7hPqbmVujqilGuqOzG
      N1FFK3YpRdnRSYAsxarKv/jLf8vUpWfoPHKe1y5d5JEzx/nBPzzDYFcE0e1nbnKCL33zT3jy
      bJNNZQ0MPkT2pWN19g/zw2deRJUq1GUVRAFdv706dFsnOoqq4HQ4cTttDHut1GSNwaEhnn/l
      Zeq1KpMTEzicDtraO0iVSmi6iN324WQB6ZrMylqcwYFe1lcW2N4r0NcRJl2SaPc7SORqHBsb
      OnBv0HuR2tlAM7tI7m5jdvoZazq1W2d5fhbN4saiV0mkS5w5ewbzJ2ASqql1FuYWqelmHKKE
      3Reht/ODu3N/EJtrSxTrAkdGBxtOh75DObfH3OoufT3tbG+s448N0RM9WN/S+Noyge5BHCZI
      724iusLsrM3jDsWQCikEu2+/ANyhLv7iX/0ZOgIC8MTn9Lsnj67rIAj3DsR7nD8bOLbvvXd/
      /0P9UCfg/ZiZuEU8V2NwoJfuzhibyRIb6+ukSxLdsTPEb84yPjbUdB6SKlV487VXOf75b2JS
      qgTbRg7hrU442sWtW7d45Nxx4ukaTfSM/VAQTTaCbjNpzc3CxDWOnGysMe69UZm4NUUo1o2m
      03SsqmhDL+6g2I5QLs8x1nawvC9Nk5m8fp1zHYM4BJWF6ZtExh+ns6ef61fepFhR6ezt3f8d
      oJTZ4Sc/eZqfPvcSgiAgiiKCINz9XXznd6WWZ3E1TqVSRRAE1laW2Vqb59bc6j0/JwgC+eQ2
      e/lKc6NwTxSqdZVSIY+uw+r8HIPjR5FUnZDTym4mT1fIQbbW/CpvLpXE7nJTKBbJVFQi3gbz
      qvchsDI3ydD4CdaXlhkcbTxH/sNkeSvNSE87Jx46w+7WxgOwKBBqjyEqFWS1eSvlfJbe3i52
      kik0wYr1gEoSRQu9vV3vvDDR39eLIIhM3bzOybPniHX1UClk938H0HWdq6/8gtDRJ7n0zI84
      cuIks7PzjA52sri6zfjx40xPzfDEY+eYnZrj5sI2//P/+Jc889NnqSSXCA2eIbUb59iRQSaX
      4ljVIhari5HhfrA62Ihn+caXHmt+NO5BPp9nb2+P9kgEl8dDpZAlXZKI+BwksmV6u2KHugPV
      qyV0k516tYLP523eUV1lcWEB3ewkFvHjdHkxNVsO9iGQz+fxeb0kd7Ywu4IEfYfvtl3I7lGS
      RWKRUNNTIFWusbKxw9BAN4VCHV8DflWKeUw2K9vxNJ3tfhRdYH11DZcvhNOsIDr8+6dAwt0p
      joo72EE5vUNiexm3286Fcw8xt5GilNllamYezeQiFvYiaCqSCp3dvdTqOaZm5/C6zAyfuMDm
      1FW++NhJ/o//6xn+w//w58wvbzY5DO+Pz+fD5/tNlZDbF8T9zss+d/P99+9gc9zeD8BuPcTJ
      DyCYGB795C4E3BnDSEf3A7PpDbRxyFHDZLEzPHg7k9jna6yCyOm5HdNA3+07gQ0YP3p033ve
      8yS4mEtjdnopF4pYRZVsqYbdZsXjcVOTVbLJXdo7OqhLt/db6urp5oXn/okzF87h8fjY3Ngk
      2h5CM9mpl0tY9Aq/emOGLzzUw2rRwfljRlq0wScHIxXCoKX5BCzCGRh8fBgCMGhp7naHNtKh
      DVqRu1+rZbm5zZENDD7NGFMgg5bGEIBBS2MIwKClMQRg0NLse7asaSo6AiZRRNNUNB0EXUc0
      mVFV5fa/aTpmiwVd07BYPqxmhwdDkWUQRcwmE6CjqhoCoGo6JpOAquqYLeaG81B0XUeSJKxW
      K7IsY7FYUGQZk8XSVG/K30aq19EBq9XWdEKcrutIsozVYkGSZKxWS+M5T7qOLMuYzBZUVUY0
      WdA1BUEwYWpiPwdd12+vKKq3zx2TKKAjYDY3no+r6xqyrGAxm5EUBavFjCQph49TkUAwIaAj
      iKb9AtieuUrS2sOZkRg3X3+JxbyJUzEzcugISzffpCvi5eU3b/DNb/4+z/zkp/zFv/sPBByH
      6PB6KDRmp6fIles8/tjDxFcXWdjO4hQlNMFKKOxjezvJ5558ouH26On4Blt7CXTBhSoVARPl
      ukJnVy9DfR2H9jy9F+fKjTm+8Y2vN50mvDhzk2yhitlqR1XqdA4dpzPkbsiGqtSYnpxGNdmw
      IFFTBJR6BcHi5JHzpxv2afbaa1RdPVQTS3QPjbO9Oo/J5uLM2XMN1z3M3LpGoargD4WoZnbR
      HG3Y1RzmtlHGuoMN2boTp2a2k03GGT9xiqW5GQSr695TIF1XuT4xw+b8BNHRh5i4+HN80X5O
      n3+UkdEx6slVzDYzb12baiyqB4pIZzSEw+NHADr7R3BZBTweN/lkkrbePixqnWoTq7uhWBdK
      VaKnf4Bo0EtiZwu720M2m3sgnlt0mbFT5zjMpjnpTB6vw8TsyiY+r4NMKt+wDdFso7sriqRo
      9HZ3US2XsLkDmIXm8pcHhkYwizrBcJj1lRWcbheZ1B7NNJvO5os4RAVXIEpV0hk/MkylIhEL
      exq2dSfOWq1GWyTC8tISsiyhKAqmp5566ikAVVWRa2XefvsymUyK3rGzfPH8GPGigE2tcvL8
      w9hNkC+WkTUT3/rOt0jFN+ju7mo8ugeCyltvXqU91oEs1XC73ZTLZcyigNnjRy/nUAULsY4Y
      5gbTjnfX5tmrgMeisZsp0t3bh1ItE2iLEPA1dpW9F6l0hlhnJ5ZDVMQ4rCbS+TLDQwOUiiUi
      HV14nNaGbGhyhdmFNfx+L4ndBP5wO6JSxuYO0hZqvChGUxUkTUAq57G5fVhN4PK30RkNNzwN
      tZoE8mWJejEDNjf17C4lbLSFgtitjU2978YZ8CNVyniDYawmAafH/9noDVosFvF4Gr8yGBh8
      JgRgYNAsxjKoQUtjCMCgpTEEYNDSGAIwaGnufgk2KiMNWhGjJtigpTGmQAYtjSEAg5bGEIBB
      S2MIwKCl2ZfLnN5aYimtYaplOXXhAu+X6JzfXSMpu9DzW+QlM6dPH/9Qd4I/CEtzU6gWN3Yk
      slWNgFMkW1I4fvxIw+nQuqZy49Ykx8f6uTExS0d3D7vxOF19Q0TDze9KX8zssFPQ6QrZWN8t
      cmS4r2lb2eQ2i+u7DPR3sbK8xsCRk4Qbbd6r66wvzeCM9LO7Oos71IHXXKeke+ntaCzlGCCz
      u05ecyHl4siiA4cgUZQETh4bb7juQVUkJqfnGegMM7e6zXB/J3NrSY6NH2k46e/dce6szmJz
      B5FKGZyB9v3neCmT5IUXbhANenB7rfzq+bc4OtrBdiLH+KmzzF65yNij3+DMUJiXnnsFNAWP
      08ELz8yxlcwxPDrCzRu3+L0//FMGYw+ixfbB2d6O4wl30DPYw8zrb1N22rDrVXZLY3R6Ght9
      Ta6xtZNkuMPPXiZHuVTC3dbB3Owc0ScebtrHajHHXgYCTgfpZBYOIQCHN4RYneb1y2l62v1U
      qnVouHu1TnZvB9XbQ7S9jdm1OD1hyNbFpgRQzGXJahr57TiSaEUpFQnFOtGg4QtkrVwimc4g
      1cqcGunk2VeuEIzGqEpK4wJ4J84KFta283R1iBSLVXZTC++dAj35uceYm1lkdmaWWjFLOlfE
      7bIzN3WLTKlKci+DyerCJqcIdg1TKZWoSwIPnxljZWWFxF6aavWj3xqpo6ubUiHLxtY2XpsV
      d8BHpqLhtTeecmyyuWgLeCgVC0Q7ezDbHEiF9N1mq80SiUQRBYG2SPuhO0NnEnECoRCKLhII
      uEntNVGrIIhE2yPoqsRetoygSbRHo013cm6PRhEEBcFkxyYKBCIRlFoZpYl6AJcviMdhxW0z
      s7KZoL2rj96oi3g81bixd+I0WRy0R0KUS2WcNhGT1b7/OYBcr6EKZqRqGbNZpC4pTL79Br2n
      H6Uz6KZQLGGz2nG5HNRrFUSzHal2u+e/xWJCQ6RUKBIIhT7y1t+1SglJE7CZBap1FZfdQrmu
      4PO6mzqgtVoNm81KJp3GFwhRzGfx+oOHi0tTqckqdpuZWk3GbrcdwpRMOlskHPKRTmUJhkNN
      lWsqch1dtFAt5rA4PNgsArKsY2tiVx9NVZBVHVWqogoWLIKKpAl43c21Wq/VatisFtLZAqGA
      l1Q6RzgcbKrd/Z04a6U8ZrsbtV7GbHcZD8IMWhtjFcigpTEEYNDSGAIwaGkMARi0NHfbo6vq
      IbbyMzD4lHL3QZiiKB+nHwYGHwvGFMigpTEEYNDSGAIwaGkMARi0NPsEINerxONxiuXqPd9c
      q5SQmsls+giolArkCiXgdg6JVKuQyuQ4TKKHVC0Tj8cplMrsJRPI6uFi13WNWl0CXadWO3wn
      vlqthq4qJBJJtENltOjksxlqdYnETpxkKtOcFU2hLslUSgWK5Sq1Sol8sdy0V7VaDVWRSCRT
      6LrGXnLv0M0bdE2lWqtTzGep1KT96dC7i7d4bTFLuZDlS4+coIyTqSuXOHX2EXaTaex6CUuo
      n96uNvLJFLuJXRxuN1anH4uUpSK6OTU+fCgHm2V3N0F8N8lQbwe3FrcZ7Y+xuxXH9fjjOJrM
      bxTNFrK762QLIexWE+s7Gc6ePNK0j2sz19iue+j1KyzHJT7/eOMtyO9QLWZ47qU3eezcceRK
      lumqyPG+cFO2NFVhby9JOr/OcE+IqcU1IuHG06Fnr79B1dVLPb2BigmbRQBEHjp3AUuDc41i
      JslLb9zg/MlRytkE07OL9Hb7SeQVjg3HGvbtDsvTN9gpC4i6jNVqfe8UKJveY/zoMZ555mf8
      +pVXUQQzSFXWlyaIZ6rsrC6wvrnB9WvXWN1KMzkzy/TNq+QKJd58/bWmHTssPrcNuydIe1c/
      AbeVSNCHYnHSaIb8uzGbzRTqAuMjgxRSCXp6ew7lY//gMFazSPfAIE7r4fZVcHiC9HS00dbe
      zvpOjsGO5usvBEHA5/WiqCq78V1OPHSiKTsDQ6OYRRVFklEUFU0w4bCITaVDe4IROiIBIu0R
      dnIybruJ7u4o1UKxKd8AlHqBpY0ktWoVm0lgL53dfwdwh6L83u8foafNi0PJURK9+MQKiUyO
      YFs3sc4Ogn4fE5NT9A8PYbZ5EAQZZJlsaofB4RF0aDqf/DCsrm3iDnUAOpFIhJWVVQJeD7IO
      1mYd0jViHZ2Us0kquhVdPeRWsiYrkZAfMBOJhA5nC4hEIiQ2V7H7gkh1CafV0bSt3USCaCyG
      SZfx25sTp8nmIOw3Y1fbkAU7bqtORRGxN1kuGIlE2FxdwRsI0NUeYuLWCiPjzYkTwGzz8uWv
      fJHtRIpyLsVYtNvoDm3Q2hirQAYtjSEAg5bGEIBBS2MIwKClMQRg0NLcXQUyMGhFzEBTbSYM
      DD4LGFMgg5bGEIBBS/P/A1lImh4/DBMZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.trips.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.n' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Work Travel' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dZ3hT1/7o+a+6LdmWLbk3cAEbYzAGApgaSggEkhBKICc5aSeFlHPvnfuf
      /8zzzDPz3DzPzHPnzX1m5t6TxklOKieFACH0bqox3TYGDO6925IsWX3veeHEgdjhJMQKMVqf
      VyBt77Uk7d/ea+29fmspZFmWEYQgpbzXFRCEe0n9wz88Hg9ut/te1kUYxSRJQqkcfedThWgC
      CSOhr6+P8PDwe12NX230hawgjCARAEJQEwEgBDX1v94ksLxeL2q1GoVCMfia5Pfj9flQKlWo
      1Sq8Hg8/dFSUKjUatereVFa479zTAJA8ffzX//2/sOav/we5KVGATGvNNbbvPoRap0fShvH8
      00/w/7z1X4hJywRgwvQFzJuadS+rLdxHhgSALMtYu9u5dKmC2Q8tIOSWM/NIq792keQJkzl7
      upiJ65cj+5xs33WEP738OlF67fdbuYhKHs/LL79EAKsiBKkhfQBHTxNHTpzjyrkL9AeyZNlP
      0dlylj6+Bm9bBVa3D2dnDfrUvFsO/gG29jq2bdvK1m07aLMEtFZCkBlyBQgzp7BmdQpfNr8b
      0ILtXfWUVDYg7f2O3t5WTl6s5KHxWjwu55Bt9ZFxzJkzB1AQZdAFtF5CcLlnfYDLxUUs2/Ai
      UzPikD1z+fCLg6yY9Tyqju+4eD2LKVljsPfZMITpUOtCiY9PEE0gYcQNfRLssvCPz77E2teP
      Vm9gw3MbidaPbKGy5GXfzj0sWPE4Bs3AUX1szzZyHlxFhGyj8PAhapo6CDEl8vS6R9j60d/p
      9Qxsl5SVz+qlc0e2QsJvNlqfBIuhEMKIGK0BIB6ECUFNBIAQ1EQACEFNBIAQ1ERCjDAinM6h
      z29Gg8EA0Gq1aLXaO20rCHck7gIJwigjAkAIaiIAhKB2T/MBXHYLly9dpLXbxtisPPJz0vnp
      cB9PTz17L7eyavGswdfOH95HdP5c0sy/vM0pSz5qb16jvKIaVWgkCxctQK/59fF/9fxJKho6
      Bv8fHp3CkgUz7vpM4nU5cPlVhBtChqs1VVXVjB0Tx87dp1j9xPJfvN+qykrSMzNRigFUd3TP
      rgBOaxubNn2IN8TMjAemE/ozoSj53HT12m57ra+3B5fX/8sLkyWO7Pgnx0vrmJQ/nXHJ0Xj9
      w40AcfDV5h3cac8pmROYNWsG7dX1TJ41i7yJmUOC9tfot3XT3t2Hx9bIll0nbnvP1lpJUUk1
      suSjs6vn1+235Tony+p/Q82CwzCHnZ/C3dspr21BH53BC0+tDEiUXC46wQPL1zM7J+WWV2Wq
      Ss+w59g5UKhZ/OhaMg0D70g+J1s3f0673YetvZPV86C9tpytuwvxSErWPfM8cmsJ3xXdQOnp
      Q2tO54UNK1EpFLj62qjs1vLKXx5FpVQAA2W6elv4/Osd2PvdLFj5JNabhRQVX6TD6+XN51ax
      b+sXVLf2kpQ1nScenotSARFR0URE+QkL1ROflEQ4cK3oAKdvtqMxRLM0P4kdB07i9it58pnn
      kNpK2XWyAnwOVMYUXv7TCvZs+Sd1XXbyChaTE+XiRpOSixV7KaqwISn8bFi5EICiE0XMW/Ik
      Ctx01F7l/ffewS1r+dOfn6Xq1DZM09YwzqTg86+38qfVj/DFZ5ux+1UsWrGWSXOX8P6HX7Mg
      74UA/Hr3j2GObRULV67jzTf/A3TUBiwpptPaR0p8DPjsfPHxh7z3j69w+7wcPHmRl1/7K68+
      v4bjBw7xw4m6qfwsiqSpvPnGRqZPGAvAnj37yJ02g/zMaI6cuoTf6yQuYwob3/grWBpxeiUA
      PLYuwmJTUCkVlBUd5r333uPyjWZ0xjgenD+POTPzOFdczMKVj5OTlc8bL6yjq+oiN3rVzJ49
      m7ryM1icvp/9LB63ncTxM3h27XLiUscxb85s8sYaKS6rxu9xE5M2mY2vv4m+t4Fup5PK5m5W
      rXuKeVOzkXwenC4Pq9atJ3fa/MGDH6DJ5iIhYqBpFJ2SxSuvvs6qedkUni7B7XTg88uAjMPu
      wNHTQq9kZMPTz5I9JgaFSo/O72J03p3//Qx7cpdlmaqSk4SOzcUQoILjI8Opqm9GVhlY/+fn
      0Ti78ckSKl0ooRolOkMEasmD9H0AOOwOomNiUCiUqL9Pivf4fChlP9qoFGZPGcgZDtXrUSqU
      hKrVeL8f6KozxmJprsIryeTOWsiyWVk0tVu4VPgtZ6434bA78Em3NHxk6O+zo9eH4vH6KJi/
      CL36zg0dY6QRpULBt//8hKYeOw5HP36/dEudFISGqpBU4Ty9/gmunD7AR1sPcuehuPJg80qp
      VqNUKggzGvG7XSgUCvy31NmYmM1jC/M4uO1TDpy5CvCbmmbBYtgm0NFvN3P0SjsL502nqcNK
      SqxxxAvOn7+Uz/7xCR21aUQbw2jr7Uep1pIaruDL7bvQ9HcSl53HD/3UsTmT2P3RdrwdWRRf
      vs66+SvJSkuluqGF1DgTupAQpJ8pSxcWx8ysKDZ98DHj01OxtlRhyEwAnwKvx0VXRzc+KRLQ
      4nW0cPjYGeZOzaHvyJfY4iOIMOoHg+5fUSDjcvXT3dlNZOzQ9yWfi7qaehRqDXh+rLFSa6Cr
      rpyiiynMnpYLQGJYCG12N0l6aK0qY9e+aFqqrjPviWcJt6j55rstNCaEEhKVgsvWTX1LFxqt
      Fr9fQpZcuJQ6Qn/FbxKMhskH8FNzoxKnzw8oSEgZiylihDNividLfpob67E5XESYYkmKM4Ps
      p6G2FkkbxpjkePA6abe6SIgxYbd00dDSSVRkFMboaPQaJc0NdVj7PSSPSUfrd+CQdJiNetpb
      WzDFJaBR/nge7LN00dTSgUobSuqYVHQqmbrqKhS6cEJCdcTHRNPX20FTh52s8Wm4HVbqG1oI
      CY8iNTmBH3cl09bcSkxSIirA3tuJXxuB0aDD5+6nqqaO8MgodCHhhGm8OPxazEYDna3NRMTE
      0VZfg0tSk5Y2Fjx2rC4FMVFhdLY1YfUoyRyTBICl+Tq7zrbw9Kr5dLR1YrVaiIxNJs4cAci0
      N9dj6ZdIz0hD6XNRU1uHKiSCsamJVBTtpTV0Aounpgfkt/up0ZoPIBJi/tBkKq5XMD47+1ff
      zqy4do3xEyb8brdBRQAIQW20BoB4EiwENREAQlAT+QDCiBD5AELQE30AQRhlRAAIQU0EgBDU
      RAAIQe2eJcT0tlTy+ZbdKFRqwuPG8szaR9m66b/R6tOhBhLH57Pm4YE5QLd98N+pdylRyxKp
      E2bw+EMFv3igV+GOjzlbbcOgVRIRPZY/PfUomoB9KmG0GRIAfo+Tq1ev4lGEMmVyDmplYB6l
      nz1dxJK1zzMhKXJgjVkF+Hx6Xvzr6/x06J3HpeH5N18jSvaz+cP3sLgKUDnaqKisw5Q4hozk
      OKpr68hIT0eBRG1NLanpGagU4PP5eeKZV8mK+z7jSpbpaW+isrGTSXl5hKokmlo78Dl6MZgT
      8Hj92DubkDQRZGZloFVCU30d5oRUQrViaab7zZAmkN/nwSdBX1sFH321P2AFjx+XzoEdWzh+
      +hx2lxcUIPkdnC4spLCwkMYO6y1buzhz7BiHDuzFE5pMuA48bjdKtYrC7Z9R2mDh+tljNFnd
      9Hc3cPJS5eDANVmWuFx8ksLCQm7UttLTXMHXu47hd/Xy0eatSF4Xn33wDldq25EcXbz7zjs0
      dPdjbSrn/PVWJG8/h4+eQqUWrcX70ZBfVas3MnXadArmzMZrtwSs4PQp83jthQ2YQmU2vfcB
      /V4/CoUac0wMMTExhOpuvTipMEVHE5+QjNzfQafNRVdrPWeLz2J3uWhr72HmjDzOnr3MpbNn
      yXtg+m1NJKPJTExMDGF6HVXll+ns7uRiyTXaW1rxAqbULB5btpioMB1puQ+wdOFcps+ezdXz
      p2msuER0Rh7aAF0JhXtr2D5AWdFBdhw4QcGKZwJWsKu/H3VIOBMn53Ph9HmckoRCqSM7N3dI
      Ewg0ZOXmEun3UXflElaHg5NFl3n6pdepPrmdTiB67ET6Dn9IlyaSF5ebB/9SoVCSPj5nsAnU
      awhjxoOPsHRmFkqFAr+rb9j6afTRxGmt7DzRw4bnXwzIdyDce8MGwOTZS5kwbS7vbfqYRTOy
      CUTLt7biIseLy/DJkDllNiatGlNM9LBlRcWE8Nnbb6NWqhiTnUdmvAn7pAw+/eA9QtQKJs3X
      oVSHkJkQji1m6m1n6/BIMyG3zP6Q/cCDXN+6lXfOHyY5K5/HH5xCtNkEgFKtxRz1ffgplEyb
      NI6GMgfRBtFtvl8NGQ7t6bdRU9+Mw9JO4eV6/u3150ZFap0s+fji449Y9tSLmPUjcXNLpnDH
      ZqKnrmRSatQI7O/+NlqHQw+zTKpEV3sbfnUor77w1Kg4+AG8TivRabmYRuTgH8hWc2mjyUkR
      B//9TCTECCNitF4BxL09IaiJABCCmkiIEUaESIgRgp7oAwjCKCMCQAhqIgCEoHZPF8jw+zxU
      37hOW7eVpLQs0lPihi6QYWnh+LUOHpo9ZfC1stPHMU2cTnLkL5+6V5YlejtauV5ZgzrESH5+
      LlrVr4//2opSGtp/HCQYaoxl+pQJd30mkfw+JFnxM3OPyrS3dxAbG0t1+VkOnbjMQ6ufIjMh
      8leXY+vtQhUaiSHknv7kfzj37ArgcfTy4dv/nfL6LowREXS2dwy7neSxU99y+3tdLU30uby/
      vDBZ5tzhb9m84xA6fRj+/l763MNNpetk945DPzvJLkCoPpyoKCMXTpwmJCoKY7jhNz0tt7TW
      cL22Ha+9lb1Hzt/2Xn93I7sOnUGWfewvPMezL79MRvzdTVTsc3SyY+9RJPHc8zY/czqQ2f3N
      l8x9bAORusDESNmZQjLnPcHiaZm3ldtSXc6ugyeQ1XoefnQVCd8XL/s9HNq1ncoWC66eXhLm
      gaWtlu079+NW6Fm7YQO+1isUltRj62rFPGYSax6Zj1KhwOPo5HxVH6+98hwa1Y+H6w8LZHgk
      FQ89tobmkv0cPHyRml4Lf33uCU4d3EVpVTNZU+expCAPhQLiU9OJT/VTcryYnMmTCQcqL52g
      rKEXh0/DkikDC2SoQiNZs24t3rZrHL9ch6WrhciUiaxfMZ8T+3dwpaaNyQWLyI2R6Oq1sr1w
      B0UVNmxO++AaAcXHjzN3ySquni2koqqazz//gg1Prub43m9p6LQxd+njTBobyvavD9HncTJ7
      9lSulFXRa3cRbdSyfNVaQhU+9uzZz0MrVxLqKKKjz0N8hC4gv+loNOzR7eioprE/FKM2cCOB
      mrt6GZ+WDL5+9n23nS3f7sfj97Fz31HW/fklnnpsPnt3HRhcH6D1xnnaFIlsfPUlxiVHA7B7
      504mFyxkeqaRQycv43ZY8IXG8dKrG+muvYLr+wUyXJY2jImZaFQKKkuL2bJlCxV1Hegi43ns
      scd4cOZEjh07edsCGb31ZZS0eFm+bCkV5wuxun5+4SSHtRO/PpGnVy8nfuwEHnv0USbGqzh5
      uQq3w4pHG83LG1/DUV1Kj9PBpZtNPPXn55g3NRufy063xT7sAhm13Q7Gmg1MmrGQrJyJbPzL
      s9RfPIorPJVlD83nyP59yJKH2qZe1v/paWL0Mu1WieeeXc+kZAOny+qwtN7ErjSiUypIT46k
      piVwOR6j0bBXgONHjrFgyVqKik4zZ87cgBRsCtPT1NZFSlQCDxTM5avNX+KVHkQREoYpTAf6
      RDReB77vA8DSbWFM2iRUKjVhhoHp2m02K021N1EpVGRnxIHbjik6GrVKTbhOi1uW0QPacBO2
      9nL8MiSlT8Bu6aCyoRN/y0VO3ugl1iDj8t4+5Nna043H3c+16zcYOz4XjfLOTYfE5GRUSgX7
      vtlMryoK2dKJJm1gVRlTdDQqpQpjmAafKoyVS+ZwdM825KgMFmT8/FBrWZb56eTOPd0W+j1u
      Km7amDhpYB2BqOg4wkK1uIDY+ERCNGrGTZvPkY+34YuEBxauBUCtVuPx/oqmYxAYcgXw9rVx
      qaYHV2c9hYVHqW1qD0jB0+ct5ML+r9lfeJrmlhbsTg9KtQazysWeo6c4tHsnYanj0H5fw5Rx
      4zh3ZC8XL57jfNkNAMYkJyKpDaSmppIUH/2zZekiEsmOlfl48xauV9XS0dULgM3aiykuiTCd
      CklWAGqc9lYul14nekwmfkcf8UnJpKeNRaf5ZZ3HXksfSSkpqJCG7RtIfi8+WUNqSgJdHZ2D
      ryvUOrqaKrlW9ePCdtF6Ld0/WZopfVwadrub5JRUMtNSf7YeCk0Y6REertpCSY8euFnQ3Gol
      JUGMbr2V6q233nrr1hd8Xi86nRa3201VdTU5k/KJjooY8YI1IWFMm5aP126ht8/BlBkFJJij
      yM6djMvSSWjMWBYV5KPSaDEaI4lPGsP41GhaOyxMnVVAYlwMEyfngcuKpc9JTFwiRmMEkVEm
      IgwhhEdEYDabUSkVKBQK0rJySTYbaO/oQm9K5oH8CaRlZuO1dhAWO4ZJ2RmYIk1kpCXS3m0n
      ffwEcscn09bajiokjLhY8y0LZAwsVWSONqMCtKEGoqLMGEI0jMseT0dLC2Oy88hITcRsMhEZ
      FUWEIQRDuBGTyURXawMeRRhLF89DH6rHGGnCZI4lOcaAzS2TGDcQzGaDzPHLTUwcl4LRaCTa
      bMYYm0JKdCjtnT0YjCaio6IwGiMxm40o1VoiI6OINA4c8Nb2WuKyCxgTF4HX0c2p0jrmz8pH
      FYA1AzweDzrdKOxbyHewadN7d3pbCDhJPnf2rOyXpLv4U7/893fekZ3+gf82V5XLDR22ka3e
      LWy2wO07kEQ+wP1KctPQYiE1Oe53KW605gOIABBGxGgNADEUQghqg7c2vF4vPt/PLwYtCHfi
      8XhGZU7AYACoVCoUv9OKgsL9R6VSodGMvuljBgNAqVSiVIoWkXB3VCoVavXoG2gnjnghqIkA
      EILaHzoA/F439n7Xva6GcB+7d402WaKq/AKFRRdxefzkzlrIwgcm3raJpfk6h8rtbFhZQHd3
      H2bznRNBXPYuKhv6mJSTFsiaC/eRYQPA1tNBW5cFFAqSUtMw6EY+Tjpqyzh0vpY/PfMCEaEa
      nG4vPnc/DU0taEIjSE6IHdy2paGczzaf4slnniA5Jpx+L/RZrcTFmmluakYZEkZqYjwqtQ6D
      3o3X7cDu8tPX00loZCwxUaPvAY3w+xj2yD723RdYIzKJCddhik8NSACUXC5j0fJVGA0D05br
      Q1X0dTVTVVVNa30lyflLmRIzsG17SzN9fRbqm9vQ99fy9tYzzJo1kzkhKqqqq+lorCJqwkLm
      Z+k5eaaclQXJ/G3zQabn53K1bBsb/+1/wShmfBGGMWwfoN0ms2LlMpYtfYjo8MCM8HN7fUOG
      GEuSj+aGOvq9XhrqmgZfz59VQFJiGgsLpgIwadYiVi6Zh1rpp6WhDofXT31t/W37ysorYMWK
      R5iSYaTT6gnIZxBGv2ECQCI2OozP3vl/2fTPXfgDNFJowrgxHD9RjM8vIcsyfr/E0T27mLvq
      GVYvn4/qJ0OUJFnmh2FLCsVAtY/t3sPMlRtY/+iiIR9EoVCgAJRKFX7pTlm+QjAbpm2j5PGn
      XwZgxyd/o7lPIjVi5G8WZeQvoK17N+++8zYKBYzJLSA7N5sdn25CpfCTmDULpVKNTqsGwtDL
      TXz4z+9YMTMR3feL1WVPymbH5n+gVkuYU/JRKJTodNpb/g40upCALfQnjH5DRoPKfh/dPb24
      HBa2bN3Ny//xfyJ89D3hFn5no3U06NAFMnwuLhSfwuFT8eRzL4iDX7iviXwAYUSM1ivAH/pJ
      sCAEmggAIaiJABCCmggAIaiJABCCmggAIaiJABCC2rDDPCWvkxNHD1HXbmf5qjXEBWA67aYb
      lzh4ugSlSsPEqbOYnps5kJQvSxQfP8yYvLkkRA1Mgrt/++e0WLwYImNYuGgRcm8dewrPDu5L
      qdLw2JN/xhQ64tUU7nPDXgEOfPslsimTtWsexxwWmHHEnY11pOUvYM2qldw4vYfqroHML7e9
      k0OHD3P8TMngtlXN3Tz55JPMn5rJV19uIyplPOvXryfDrGT8zIdZt3Y1kSEBqaZwnxsSALK7
      l5puCJdtNLX3oArgODKNVosuJAStVotapQBkrp0/zYwVT9NdfQnH9/P7K1UqDAYDsYkpqH0u
      UGswGAyE6DToQvUYDAbEeDfhbgxpAnnsVlo72vDKk7hyfCettkdYOCUQKYZ+juz6hivGEFwe
      0CokZL+PMyVVPP7cEmi8wOUbzczNTaGvrYa//Y//D49fwYKHVyFyW4SRMuQKoAkJJT4pnZkz
      prNs0WzqGpoDVLSKpas28Nprr7Nu8SSKL92gu76Mjn44uHMbLTYP54pO45dlwuPT2fjSc4Tr
      DYxPTw5QfYRgNOQKoDTEkhHh5LMvvsbZ086CVX8OUNES504covWqgZbmFh5Z/wKn9n3Cky++
      Rk5iOMgSn73/P2juHZhuT6M3sWbFPHbvPcSG1csCMse9EHyGHQ0qSz462jvQGYxERvzypUh/
      DZfDRlevDYVCidFkJixUR09XF0Zz9GC/o7/PAtow3P02IiNNKJCxWiyERUaiUihw2q2gDSNU
      O9wSo8LvabSOBhXDoYURMVoDQDwIE4KaCAAhqIkAEILa4F0gj8eD2+2+l3URRrHRuDgG3BIA
      Wq0WrVY8YhLunugEC8IoIwJACGoiAISgds/WB5AlCRSKIQvzybKMLINSqQBZRpJlFEolisH3
      ZJBlbn16p1AoBtY3+2F7hRIxUkL4Je7ZFaDk6A6Kb7T+5FWZS4e38N8++nbgAJe9fPTBR3i+
      n6HXbWvl4y+3sW/rF2za9Db/+T/9O+9v2sSBUwO5Ax57B//bv/+vNFtH5x0J4fc35ArQ1VTF
      hfIqAJQ6I4sXFvB7jbSR/V7OX2vBqNHSbnMTH6EjNyWcqw09TE0zcf3SObLzZzMnJwno4/2/
      fcvLrz87WL/rF4vJnJjNmXNXWLt0BuIiIPwrQ64AoREmMjIySEsycaHk6u96ieisLUWblMfC
      aZkUXbgGwJSZM7hcXIws+SmpbGfK+MRh/1b2uzl7pZ4n1qymteIiLp+YEl3414Yc34YIE+PG
      jcPeVs+cJct+17PoiaNHsXTWcb6ikfOnjuLyy4SYx6K01NHWXInSlIFBPXyNuhuvc7Opk0P7
      DtDTUkVpVfvvWHNhtBr2BC/7nZy53knBxKTfrSJ+Zye1DiPPrFnJQ8sfY1Z6GNfqOgEFBXlj
      +PCz3UwvmDH8H8syZ04Vs+7Zv7Bo0SL+8sKfuFB0GkmMcxX+hWHvAtWVnSFx0mw0AUy0DTdH
      c2z/N1w4pARtJA8VZFKwaCmxsQOL481ftIizlQ2QEcv46XOIr7CTnRhxW9VTxiSiACS/G48u
      jmk5Y1ErgJhoUq/U4vT5MWhEroDw84YukCH7+fjdd3niL68RFXLvVlEVRpf7Jx/A7+XBlauJ
      FAe/EARERpgwIu6fK4AgBBERAEJQEwkxwogQCTFC0BN9AEEYZUQACEFNBIAQ1IZ92tXTVk/x
      hSvEp01gSk5GwKYedztsXL50gU6Lk5z8GWQkxwSmIECW/NRVXuNaZR16cxLzZ+ajCvCc6h6X
      A59Ci16nCWg5wt0begXwWPnsy51kTMihsngfpbVdASnYZWvnH//4BJ/ORO7ELHyeu7+LcGj7
      V3Tf6QaWLHFs19ecLm8ge2IuxlANgXr+57E1sW3PKQBsnc209TgCUo4wMoa9AmhC9CQmJtFi
      ihySsjhSSopOkL9kNQU5P0537rS08cWX2+j3SmRMLmDZggl89fkB1j+7mpYrp6jxJxHdX0Vx
      ZStOazexmQ8wNVnFweOnKGmysKhgEp3ucJbNnUzFucPYI3OZPj4ed187N7oUvPLiIygHP4/M
      ib3fUFLVitZg4skNT9J+5RhFNztwWbswjc3nqWUz+OTzT0FS0m1zsu7Zl0g0+Pjyn1/Q4/Aw
      c9FjzMxJYv+OLVQ295I7ayGdJbsoqrDhlb3MSw+h1qkixSjz1T+/wuLykZCRx+rls9n+2Sc4
      ZAVd3VaWr32WnDHRAfmehTsbegXQhDPW6Ofdt9+muMZGRmJkQApu67WRknB7k+fEgV1Mf+Qp
      3njjVbpvnqOjz4XNagfA63bS7/Lg6beROrGA1998k+7aElInzmLmpAk8+8pG8qdMoeXGZdx+
      H+fK6piQNjCy1G3txBCTcsvBD66OSso6Nbzx5pssnZbMkZOXcTv7SMqeyetv/JWumjL8yFgc
      EuuffZFVD+ZScrWWC4W7UMfnMHfWNE4eP0pH3RXaSeCNN99k0YxcVq1bT+60+WxYuRCfx4nD
      5eFC4V7SZj/Km2+8hqrrGtUddqx9Dh5Z+2deXL2Q8yXlAfmOhX9tSAD0d9bSpkrk3//n/8zT
      iydwuPhqQAqOjwqnuuH2nGBHv4+42CiUKi2mcD39bi+yLHFbBjwKwsIMKJUa1BrlbU0ZpUZP
      VkIoZ4pOoY4bj1498PF0kbFYm2vw3bIft8NGVGwCKqUSc1w8rj4bAGFhYSiUKkLVKryASqcn
      VKtGbzDgc7ux2ezoNOBwS8yfPROnow9zXMId+xN9fS4SEqJRKNXEmiLpc7hQq3WEhmgJNRjw
      ej2/9esU7tKQANBFmLE33+Ro4XEOnrxMWkp8QAqeOm8J1wq3sW3nXo4dO8rJC+XkT5vIlk8/
      5fCB3VRbFSSZYgnX9rD34BEOniplTHLcsPsKDVVw4vBROq1O8mfOZPf2PcyePX1wZghdWBxT
      0/W8/8EnFB47zq5dB1AnZNFdfowDh4+yZes+Jj8w5RfVe2JeHtU3byLLoDcYiB+bTcWpnRw6
      WsiVm/UotXo6665ytuT64N/kPZDPjs2fUXjkAGerehmfYv7N358wQuRhuB1WubysVG7u6Bnu
      7REj+b1yXfUNubS0TO602GVZkuSOlnr5ytUK2enxybIsy163Q756pUxubOuWZW+00YwAAAo0
      SURBVFmWrV1tcq/dJcuyLDc2Nsh+vyR7XX3ylbIrssXhkt22VnnTR1/LPmlIabK1u10uKy2V
      b9Y0yn5Jkj3OPrm8rExu6bTIsizLtu42uafv+33XN8g+v0+ub2ySZVmWXfZeua3TKsuyLHe3
      N8mlpaVyU/vA9+Ps65WvlJXKTe3dsiRJcltjrVxR3SD3W7vl9l67LMuy3NPRLJdduSrbXV5Z
      lv1yc0OD7PXLss9llxvbugL1Ff9ubDbbva7CXbnvhkOXHt+FzTSZeZPG3OuqBJXROhz6vst6
      GTN5DoaIwHTchfvPfRcAkVGme10FYRQRQyGEoCbyAYQRMerzATQaDRqNGLMi3L2wsLB7XYVf
      bTAAAjXkQQgeo/EYEn0AIaiJABCCmggAIajds+cAltZq/vnNbiSFEmN8Ok+vWYHqF4ejm+2f
      babZaqOpqYvk5Hiyps1n6ey8QFZZuA8NOxTC02/j6vVKEtPGE2cKzOPtA1s/JXnGo+SkROH3
      +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
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Non-Work Travel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='work in progress' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
