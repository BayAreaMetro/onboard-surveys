<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0606.1812                                -->
<workbook source-build='9.3.3 (9300.16.0606.1812)' source-platform='win' version='9.3' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='DepartReturnPurpose' path='/workbooks' revision='2.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' inline='true' name='csv.41561.564275358796' version='9.3'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau' driver='' filename='DepartReturnPurpose.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='DepartReturnPurpose#csv' table='[DepartReturnPurpose#csv]' type='table' />
        <refresh incremental-updates='' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>depart_hour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[depart_hour]</local-name>
            <parent-name>[DepartReturnPurpose#csv]</parent-name>
            <remote-alias>depart_hour</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>3</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[DepartReturnPurpose#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[DepartReturnPurpose#csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>return_hour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[return_hour]</local-name>
            <parent-name>[DepartReturnPurpose#csv]</parent-name>
            <remote-alias>return_hour</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purp</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tour_purp]</local-name>
            <parent-name>[DepartReturnPurpose#csv]</parent-name>
            <remote-alias>tour_purp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[DepartReturnPurpose#csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[DepartReturnPurpose#csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[DepartReturnPurpose#csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [tour_purp]&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;PLACEHOLDER&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Work&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Time Away from Home' datatype='integer' name='[Calculation_597289929475764226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='int([return_hour])-int([depart_hour])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Time Leaving Home' datatype='string' name='[depart_hour]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0&quot;' value='Midnight' />
          <alias key='&quot;1&quot;' value='1 am' />
          <alias key='&quot;10&quot;' value='10 am' />
          <alias key='&quot;11&quot;' value='11 am' />
          <alias key='&quot;12&quot;' value='Noon' />
          <alias key='&quot;13&quot;' value='1 pm' />
          <alias key='&quot;14&quot;' value='2 pm' />
          <alias key='&quot;15&quot;' value='3 pm' />
          <alias key='&quot;16&quot;' value='4 pm' />
          <alias key='&quot;17&quot;' value='5 pm' />
          <alias key='&quot;18&quot;' value='6 pm' />
          <alias key='&quot;19&quot;' value='7 pm' />
          <alias key='&quot;2&quot;' value='2 am' />
          <alias key='&quot;20&quot;' value='8 pm' />
          <alias key='&quot;21&quot;' value='9 pm' />
          <alias key='&quot;22&quot;' value='10 pm' />
          <alias key='&quot;23&quot;' value='11 pm' />
          <alias key='&quot;3&quot;' value='3 am' />
          <alias key='&quot;4&quot;' value='4 am' />
          <alias key='&quot;5&quot;' value='5 am' />
          <alias key='&quot;6&quot;' value='6 am' />
          <alias key='&quot;7&quot;' value='7 am' />
          <alias key='&quot;8&quot;' value='8 am' />
          <alias key='&quot;9&quot;' value='9 am' />
        </aliases>
      </column>
      <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Time Returning Home' datatype='string' name='[return_hour]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0&quot;' value='Midnight' />
          <alias key='&quot;1&quot;' value='1 am' />
          <alias key='&quot;10&quot;' value='10 am' />
          <alias key='&quot;11&quot;' value='11 am' />
          <alias key='&quot;12&quot;' value='Noon' />
          <alias key='&quot;13&quot;' value='1 pm' />
          <alias key='&quot;14&quot;' value='2 pm' />
          <alias key='&quot;15&quot;' value='3 pm' />
          <alias key='&quot;16&quot;' value='4 pm' />
          <alias key='&quot;17&quot;' value='5 pm' />
          <alias key='&quot;18&quot;' value='6 pm' />
          <alias key='&quot;19&quot;' value='7 pm' />
          <alias key='&quot;2&quot;' value='2 am' />
          <alias key='&quot;20&quot;' value='8 pm' />
          <alias key='&quot;21&quot;' value='9 pm' />
          <alias key='&quot;22&quot;' value='10 pm' />
          <alias key='&quot;23&quot;' value='11 pm' />
          <alias key='&quot;3&quot;' value='3 am' />
          <alias key='&quot;4&quot;' value='4 am' />
          <alias key='&quot;5&quot;' value='5 am' />
          <alias key='&quot;6&quot;' value='6 am' />
          <alias key='&quot;7&quot;' value='7 am' />
          <alias key='&quot;8&quot;' value='8 am' />
          <alias key='&quot;9&quot;' value='9 am' />
        </aliases>
      </column>
      <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;work&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
          <alias key='&quot;WEEKEND&quot;' value='Weekend' />
        </aliases>
      </column>
      <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
      <column-instance column='[depart_hour]' derivation='None' name='[none:depart_hour:nk]' pivot='key' type='nominal' />
      <column-instance column='[return_hour]' derivation='None' name='[none:return_hour:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Legacy\Data summaries\DepartReturnPurpose#csv (DepartReturnPurpose.csv).tde' schema='Extract' tablename='Extract' update-time='03/25/2016 04:39:44 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3970910124543128]' formula='CASE [tour_purp]&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;PLACEHOLDER&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9172' timestamp-start='2016-03-25 16:39:44.587' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>depart_hour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[depart_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>depart_hour</remote-alias>
              <ordinal>1</ordinal>
              <family>DepartReturnPurpose#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Missing&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>2</ordinal>
              <family>DepartReturnPurpose#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>169</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>3640</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>3</ordinal>
              <family>DepartReturnPurpose#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>return_hour</remote-name>
              <remote-type>129</remote-type>
              <local-name>[return_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>return_hour</remote-alias>
              <ordinal>4</ordinal>
              <family>DepartReturnPurpose#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>25</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Missing&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tour_purp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tour_purp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tour_purp</remote-alias>
              <ordinal>5</ordinal>
              <family>DepartReturnPurpose#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Missing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;work-related&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>6</ordinal>
              <family>DepartReturnPurpose#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6541</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0064451493333333304</statistic>
                <statistic aggregation='Max' datatype='real'>16761.7978194065</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>7</ordinal>
              <family>DepartReturnPurpose#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>8</ordinal>
              <family>DepartReturnPurpose#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5818</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.019335448000000002</statistic>
                <statistic aggregation='Max' datatype='real'>17938.684959990002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_3970910124543128</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_3970910124543128]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_3970910124543128</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>13</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;College&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Work-related&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>52</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.509664' measure-ordering='alphabetic' measure-percentage='0.490336' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_3970910124543128:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Work&quot;</bucket>
            <bucket>&quot;College&quot;</bucket>
            <bucket>&quot;Social or Rec&quot;</bucket>
            <bucket>&quot;Shop&quot;</bucket>
            <bucket>&quot;Other&quot;</bucket>
            <bucket>&quot;School&quot;</bucket>
            <bucket>&quot;Dine out&quot;</bucket>
            <bucket>&quot;Work-related&quot;</bucket>
            <bucket>&quot;Escort&quot;</bucket>
            <bucket>&quot;Error&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:depart_hour:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;1&quot;</bucket>
            <bucket>&quot;2&quot;</bucket>
            <bucket>&quot;3&quot;</bucket>
            <bucket>&quot;4&quot;</bucket>
            <bucket>&quot;5&quot;</bucket>
            <bucket>&quot;6&quot;</bucket>
            <bucket>&quot;7&quot;</bucket>
            <bucket>&quot;8&quot;</bucket>
            <bucket>&quot;9&quot;</bucket>
            <bucket>&quot;10&quot;</bucket>
            <bucket>&quot;11&quot;</bucket>
            <bucket>&quot;12&quot;</bucket>
            <bucket>&quot;13&quot;</bucket>
            <bucket>&quot;14&quot;</bucket>
            <bucket>&quot;15&quot;</bucket>
            <bucket>&quot;16&quot;</bucket>
            <bucket>&quot;17&quot;</bucket>
            <bucket>&quot;18&quot;</bucket>
            <bucket>&quot;19&quot;</bucket>
            <bucket>&quot;20&quot;</bucket>
            <bucket>&quot;21&quot;</bucket>
            <bucket>&quot;22&quot;</bucket>
            <bucket>&quot;23&quot;</bucket>
            <bucket>&quot;0&quot;</bucket>
            <bucket>&quot;Missing&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:return_hour:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;1&quot;</bucket>
            <bucket>&quot;2&quot;</bucket>
            <bucket>&quot;3&quot;</bucket>
            <bucket>&quot;4&quot;</bucket>
            <bucket>&quot;5&quot;</bucket>
            <bucket>&quot;6&quot;</bucket>
            <bucket>&quot;7&quot;</bucket>
            <bucket>&quot;8&quot;</bucket>
            <bucket>&quot;9&quot;</bucket>
            <bucket>&quot;10&quot;</bucket>
            <bucket>&quot;11&quot;</bucket>
            <bucket>&quot;12&quot;</bucket>
            <bucket>&quot;13&quot;</bucket>
            <bucket>&quot;14&quot;</bucket>
            <bucket>&quot;15&quot;</bucket>
            <bucket>&quot;16&quot;</bucket>
            <bucket>&quot;17&quot;</bucket>
            <bucket>&quot;18&quot;</bucket>
            <bucket>&quot;19&quot;</bucket>
            <bucket>&quot;20&quot;</bucket>
            <bucket>&quot;21&quot;</bucket>
            <bucket>&quot;22&quot;</bucket>
            <bucket>&quot;23&quot;</bucket>
            <bucket>&quot;0&quot;</bucket>
            <bucket>&quot;Missing&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Leaving Home.trips.pct.pic'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Time Leaving Home</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' name='csv.41561.564275358796' />
          </datasources>
          <datasource-dependencies datasource='csv.41561.564275358796'>
            <column caption='Time Leaving Home' datatype='string' name='[depart_hour]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Midnight' />
                <alias key='&quot;1&quot;' value='1 am' />
                <alias key='&quot;10&quot;' value='10 am' />
                <alias key='&quot;11&quot;' value='11 am' />
                <alias key='&quot;12&quot;' value='Noon' />
                <alias key='&quot;13&quot;' value='1 pm' />
                <alias key='&quot;14&quot;' value='2 pm' />
                <alias key='&quot;15&quot;' value='3 pm' />
                <alias key='&quot;16&quot;' value='4 pm' />
                <alias key='&quot;17&quot;' value='5 pm' />
                <alias key='&quot;18&quot;' value='6 pm' />
                <alias key='&quot;19&quot;' value='7 pm' />
                <alias key='&quot;2&quot;' value='2 am' />
                <alias key='&quot;20&quot;' value='8 pm' />
                <alias key='&quot;21&quot;' value='9 pm' />
                <alias key='&quot;22&quot;' value='10 pm' />
                <alias key='&quot;23&quot;' value='11 pm' />
                <alias key='&quot;3&quot;' value='3 am' />
                <alias key='&quot;4&quot;' value='4 am' />
                <alias key='&quot;5&quot;' value='5 am' />
                <alias key='&quot;6&quot;' value='6 am' />
                <alias key='&quot;7&quot;' value='7 am' />
                <alias key='&quot;8&quot;' value='8 am' />
                <alias key='&quot;9&quot;' value='9 am' />
              </aliases>
            </column>
            <column-instance column='[depart_hour]' derivation='None' name='[none:depart_hour:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41561.564275358796].[none:depart_hour:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:depart_hour:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:depart_hour:nk]' member='&quot;0&quot;' />
                <groupfilter function='member' level='[none:depart_hour:nk]' member='&quot;1&quot;' />
                <groupfilter from='&quot;16&quot;' function='range' level='[none:depart_hour:nk]' to='&quot;3&quot;' />
                <groupfilter function='member' level='[none:depart_hour:nk]' member='&quot;Missing&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[csv.41561.564275358796].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[csv.41561.564275358796].[none:depart_hour:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='height' field='[csv.41561.564275358796].[none:operator:nk]' value='59' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='text-format' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='width' field='[csv.41561.564275358796].[none:depart_hour:nk]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='width' field='[csv.41561.564275358796].[none:operator:nk]' value='136' />
            <format attr='color' data-class='total' scope='cols' value='#3f6a6e' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='color' field='[csv.41561.564275358796].[none:operator:nk]' value='#555555' />
            <format attr='font-size' field='[csv.41561.564275358796].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[csv.41561.564275358796].[pcto:sum:trip_weight:qk]' />
              <lod column='[csv.41561.564275358796].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Time Leaving Home:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[csv.41561.564275358796].[none:Calculation_4061014133638149:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[csv.41561.564275358796].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Estimated Trips:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[csv.41561.564275358796].[sum:trip_weight:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>&#10;Share of Operator Trips: &#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[csv.41561.564275358796].[pcto:sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-transparency' value='155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41561.564275358796].[none:operator:nk]</rows>
        <cols>[csv.41561.564275358796].[none:depart_hour:nk]</cols>
        <pages>
          <column>[csv.41561.564275358796].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Returning Home.trips.est.pic'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Time Returning Home</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' name='csv.41561.564275358796' />
          </datasources>
          <datasource-dependencies datasource='csv.41561.564275358796'>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[return_hour]' derivation='None' name='[none:return_hour:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Time Returning Home' datatype='string' name='[return_hour]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Midnight' />
                <alias key='&quot;1&quot;' value='1 am' />
                <alias key='&quot;10&quot;' value='10 am' />
                <alias key='&quot;11&quot;' value='11 am' />
                <alias key='&quot;12&quot;' value='Noon' />
                <alias key='&quot;13&quot;' value='1 pm' />
                <alias key='&quot;14&quot;' value='2 pm' />
                <alias key='&quot;15&quot;' value='3 pm' />
                <alias key='&quot;16&quot;' value='4 pm' />
                <alias key='&quot;17&quot;' value='5 pm' />
                <alias key='&quot;18&quot;' value='6 pm' />
                <alias key='&quot;19&quot;' value='7 pm' />
                <alias key='&quot;2&quot;' value='2 am' />
                <alias key='&quot;20&quot;' value='8 pm' />
                <alias key='&quot;21&quot;' value='9 pm' />
                <alias key='&quot;22&quot;' value='10 pm' />
                <alias key='&quot;23&quot;' value='11 pm' />
                <alias key='&quot;3&quot;' value='3 am' />
                <alias key='&quot;4&quot;' value='4 am' />
                <alias key='&quot;5&quot;' value='5 am' />
                <alias key='&quot;6&quot;' value='6 am' />
                <alias key='&quot;7&quot;' value='7 am' />
                <alias key='&quot;8&quot;' value='8 am' />
                <alias key='&quot;9&quot;' value='9 am' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='alphabetic' column='[csv.41561.564275358796].[none:operator:nk]' direction='ASC' />
          <filter class='categorical' column='[csv.41561.564275358796].[none:return_hour:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:return_hour:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;0&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;1&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;2&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;3&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;4&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;5&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;6&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;7&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;8&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;9&quot;' />
                <groupfilter function='member' level='[none:return_hour:nk]' member='&quot;Missing&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41561.564275358796].[none:return_hour:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[csv.41561.564275358796].[none:operator:nk]' value='59' />
            <format attr='width' field='[csv.41561.564275358796].[none:return_hour:nk]' value='42' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='text-format' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41561.564275358796].[none:operator:nk]' value='136' />
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='color' data-class='total' scope='cols' value='#3f6a6e' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='text-format' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[csv.41561.564275358796].[pcto:sum:trip_weight:qk]' />
              <lod column='[csv.41561.564275358796].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Time Returning Home:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[csv.41561.564275358796].[none:Calculation_9991014155747149:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[csv.41561.564275358796].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Estimated Trips:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[csv.41561.564275358796].[sum:trip_weight:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>&#10;Share of Operator Trips: &#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[csv.41561.564275358796].[pcto:sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-transparency' value='155' />
                <format attr='mark-color' value='#cc721e' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41561.564275358796].[none:operator:nk]</rows>
        <cols>[csv.41561.564275358796].[none:return_hour:nk]</cols>
        <pages>
          <column>[csv.41561.564275358796].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Top Ten-Non-Work Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' name='csv.41561.564275358796' />
          </datasources>
          <datasource-dependencies datasource='csv.41561.564275358796'>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purp]' derivation='None' name='[none:tour_purp:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[csv.41561.564275358796].[none:tour_purp:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[csv.41561.564275358796].[tour_purp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[csv.41561.564275358796].[none:operator:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[csv.41561.564275358796].[operator]' ordering-type='Field' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41561.564275358796].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41561.564275358796].[none:tour_purp:nk]'>
            <groupfilter from='&quot;at work&quot;' function='range' level='[none:tour_purp:nk]' to='&quot;work-related&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41561.564275358796].[none:tour_purp:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tour_purp:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;Missing&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;at work&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;college&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;eat out&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;escorting&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;grade school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;high school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;home&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other discretionary&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other maintenance&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;shopping&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;social recreation&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;university&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;work-related&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41561.564275358796].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41561.564275358796].[usr:Calculation_374924690188386304:ok:5]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41561.564275358796].[none:tour_purp:nk]</column>
            <column>[csv.41561.564275358796].[usr:Calculation_374924690188386304:ok:5]</column>
            <column>[csv.41561.564275358796].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]' scope='cols' value='Share of Weekday Commuters' />
            <format attr='subtitle' class='0' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]' value='p0%' />
            <format attr='text-format' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:5]' value='p0%' />
            <format attr='height' field='[csv.41561.564275358796].[none:operator:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41561.564275358796].[none:tour_purp:nk]' value='12' />
            <format attr='width' field='[csv.41561.564275358796].[none:operator:nk]' value='240' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:5]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41561.564275358796].[none:tour_purp:nk] / ([csv.41561.564275358796].[usr:Calculation_374924690188386304:ok:3] / [csv.41561.564275358796].[none:operator:nk]))</rows>
        <cols>[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Ten-Work Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' name='csv.41561.564275358796' />
          </datasources>
          <datasource-dependencies datasource='csv.41561.564275358796'>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purp]' derivation='None' name='[none:tour_purp:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[csv.41561.564275358796].[none:tour_purp:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[csv.41561.564275358796].[tour_purp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[csv.41561.564275358796].[none:operator:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[csv.41561.564275358796].[operator]' ordering-type='Field' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41561.564275358796].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[csv.41561.564275358796].[none:tour_purp:nk]'>
            <groupfilter from='&quot;at work&quot;' function='range' level='[none:tour_purp:nk]' to='&quot;work-related&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41561.564275358796].[none:tour_purp:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tour_purp:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;Missing&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;at work&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;college&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;eat out&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;escorting&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;grade school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;high school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;home&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other discretionary&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other maintenance&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;shopping&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;social recreation&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;university&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;work-related&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41561.564275358796].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41561.564275358796].[usr:Calculation_374924690188386304:ok:3]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:3]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41561.564275358796].[usr:Calculation_374924690188386304:ok:3]</column>
            <column>[csv.41561.564275358796].[none:tour_purp:nk]</column>
            <column>[csv.41561.564275358796].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]' scope='cols' value='Share of Weekday Commuters' />
            <format attr='subtitle' class='0' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[csv.41561.564275358796].[none:operator:nk]' value='62' />
            <format attr='text-format' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]' value='p0%' />
            <format attr='text-format' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:5]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[csv.41561.564275358796].[none:tour_purp:nk]' value='20' />
            <format attr='width' field='[csv.41561.564275358796].[usr:Calculation_374924690188386304:ok:3]' value='40' />
            <format attr='width' field='[csv.41561.564275358796].[none:operator:nk]' value='336' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[csv.41561.564275358796].[pcto:sum:trip_weight:qk:5]' />
              <lod column='[csv.41561.564275358796].[usr:Calculation_374924690188386304:ok:5]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41561.564275358796].[none:tour_purp:nk] / ([csv.41561.564275358796].[usr:Calculation_374924690188386304:ok:3] / [csv.41561.564275358796].[none:operator:nk]))</rows>
        <cols>[csv.41561.564275358796].[pcto:sum:trip_weight:qk:2]</cols>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' name='csv.41561.564275358796' />
          </datasources>
          <datasource-dependencies datasource='csv.41561.564275358796'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [tour_purp]&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;PLACEHOLDER&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Shop&quot;</bucket>
              <bucket>&quot;Social or Rec&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Work-related&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;Dine out&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41561.564275358796].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[csv.41561.564275358796].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='width' field='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[csv.41561.564275358796].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[csv.41561.564275358796].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41561.564275358796].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41561.564275358796].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41561.564275358796].[none:operator:nk]</rows>
        <cols total='true'>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[csv.41561.564275358796].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' name='csv.41561.564275358796' />
          </datasources>
          <datasource-dependencies datasource='csv.41561.564275358796'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [tour_purp]&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;PLACEHOLDER&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[csv.41561.564275358796].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[csv.41561.564275358796].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='width' field='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[csv.41561.564275358796].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[csv.41561.564275358796].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41561.564275358796].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41561.564275358796].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41561.564275358796].[none:operator:nk]</rows>
        <cols total='true'>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[csv.41561.564275358796].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' name='csv.41561.564275358796' />
          </datasources>
          <datasource-dependencies datasource='csv.41561.564275358796'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [tour_purp]&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work&apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;PLACEHOLDER&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Shop&quot;</bucket>
              <bucket>&quot;Social or Rec&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Work-related&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;Dine out&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41561.564275358796].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[csv.41561.564275358796].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='text-format' field='[csv.41561.564275358796].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='width' field='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[csv.41561.564275358796].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[csv.41561.564275358796].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41561.564275358796].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41561.564275358796].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41561.564275358796].[none:operator:nk]</rows>
        <cols total='true'>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[csv.41561.564275358796].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='work in progress'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose#csv (DepartReturnPurpose.csv)' name='csv.41561.564275358796' />
          </datasources>
          <datasource-dependencies datasource='csv.41561.564275358796'>
            <column caption='Time Away from Home' datatype='integer' name='[Calculation_597289929475764226]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([return_hour])-int([depart_hour])' />
            </column>
            <column caption='Time Leaving Home' datatype='string' name='[depart_hour]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Midnight' />
                <alias key='&quot;1&quot;' value='1 am' />
                <alias key='&quot;10&quot;' value='10 am' />
                <alias key='&quot;11&quot;' value='11 am' />
                <alias key='&quot;12&quot;' value='Noon' />
                <alias key='&quot;13&quot;' value='1 pm' />
                <alias key='&quot;14&quot;' value='2 pm' />
                <alias key='&quot;15&quot;' value='3 pm' />
                <alias key='&quot;16&quot;' value='4 pm' />
                <alias key='&quot;17&quot;' value='5 pm' />
                <alias key='&quot;18&quot;' value='6 pm' />
                <alias key='&quot;19&quot;' value='7 pm' />
                <alias key='&quot;2&quot;' value='2 am' />
                <alias key='&quot;20&quot;' value='8 pm' />
                <alias key='&quot;21&quot;' value='9 pm' />
                <alias key='&quot;22&quot;' value='10 pm' />
                <alias key='&quot;23&quot;' value='11 pm' />
                <alias key='&quot;3&quot;' value='3 am' />
                <alias key='&quot;4&quot;' value='4 am' />
                <alias key='&quot;5&quot;' value='5 am' />
                <alias key='&quot;6&quot;' value='6 am' />
                <alias key='&quot;7&quot;' value='7 am' />
                <alias key='&quot;8&quot;' value='8 am' />
                <alias key='&quot;9&quot;' value='9 am' />
              </aliases>
            </column>
            <column-instance column='[Calculation_597289929475764226]' derivation='Median' name='[med:Calculation_597289929475764226:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Time Returning Home' datatype='string' name='[return_hour]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Midnight' />
                <alias key='&quot;1&quot;' value='1 am' />
                <alias key='&quot;10&quot;' value='10 am' />
                <alias key='&quot;11&quot;' value='11 am' />
                <alias key='&quot;12&quot;' value='Noon' />
                <alias key='&quot;13&quot;' value='1 pm' />
                <alias key='&quot;14&quot;' value='2 pm' />
                <alias key='&quot;15&quot;' value='3 pm' />
                <alias key='&quot;16&quot;' value='4 pm' />
                <alias key='&quot;17&quot;' value='5 pm' />
                <alias key='&quot;18&quot;' value='6 pm' />
                <alias key='&quot;19&quot;' value='7 pm' />
                <alias key='&quot;2&quot;' value='2 am' />
                <alias key='&quot;20&quot;' value='8 pm' />
                <alias key='&quot;21&quot;' value='9 pm' />
                <alias key='&quot;22&quot;' value='10 pm' />
                <alias key='&quot;23&quot;' value='11 pm' />
                <alias key='&quot;3&quot;' value='3 am' />
                <alias key='&quot;4&quot;' value='4 am' />
                <alias key='&quot;5&quot;' value='5 am' />
                <alias key='&quot;6&quot;' value='6 am' />
                <alias key='&quot;7&quot;' value='7 am' />
                <alias key='&quot;8&quot;' value='8 am' />
                <alias key='&quot;9&quot;' value='9 am' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41561.564275358796].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41561.564275358796].[med:Calculation_597289929475764226:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[csv.41561.564275358796].[sum:trip_weight:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[csv.41561.564275358796].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[csv.41561.564275358796].[med:Calculation_597289929475764226:qk]&quot;</bucket>
              <bucket>&quot;[csv.41561.564275358796].[sum:trip_weight:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[csv.41561.564275358796].[none:operator:nk]' direction='DESC' using='[csv.41561.564275358796].[med:Calculation_597289929475764226:qk]' />
          <slices>
            <column>[csv.41561.564275358796].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='181' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[csv.41561.564275358796].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41561.564275358796].[none:operator:nk]</rows>
        <cols>[csv.41561.564275358796].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='Leaving Home.trips.pct.pic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[csv.41561.564275358796].[none:Calculation_1830910123736507:nk]</field>
            <field>[csv.41561.564275358796].[none:Calculation_4061014133638149:nk]</field>
            <field>[csv.41561.564275358796].[none:depart_hour:nk]</field>
            <field>[csv.41561.564275358796].[none:depart_hour:ok]</field>
            <field>[csv.41561.564275358796].[none:operator:nk]</field>
            <field>[csv.41561.564275358796].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Returning Home.trips.est.pic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41561.564275358796].[none:Calculation_4061014133638149:nk]</field>
            <field>[csv.41561.564275358796].[none:Calculation_9991014155747149:nk]</field>
            <field>[csv.41561.564275358796].[none:operator:nk]</field>
            <field>[csv.41561.564275358796].[none:return_hour:nk]</field>
            <field>[csv.41561.564275358796].[none:return_hour:ok]</field>
            <field>[csv.41561.564275358796].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</field>
            <field>[csv.41561.564275358796].[none:Calculation_4061014133638149:nk]</field>
            <field>[csv.41561.564275358796].[none:Calculation_5531015142635031:nk]</field>
            <field>[csv.41561.564275358796].[none:operator:nk]</field>
            <field>[csv.41561.564275358796].[none:tour_purp:nk]</field>
            <field>[csv.41561.564275358796].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</field>
            <field>[csv.41561.564275358796].[none:Calculation_4061014133638149:nk]</field>
            <field>[csv.41561.564275358796].[none:Calculation_5531015142635031:nk]</field>
            <field>[csv.41561.564275358796].[none:operator:nk]</field>
            <field>[csv.41561.564275358796].[none:tour_purp:nk]</field>
            <field>[csv.41561.564275358796].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</field>
            <field>[csv.41561.564275358796].[none:Calculation_4061014133638149:nk]</field>
            <field>[csv.41561.564275358796].[none:Calculation_5531015142635031:nk]</field>
            <field>[csv.41561.564275358796].[none:operator:nk]</field>
            <field>[csv.41561.564275358796].[none:tour_purp:nk]</field>
            <field>[csv.41561.564275358796].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Ten-Work Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41561.564275358796].[none:operator:nk]</field>
            <field>[csv.41561.564275358796].[none:tour_purp:nk]</field>
            <field>[csv.41561.564275358796].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Ten-Non-Work Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41561.564275358796].[none:operator:nk]</field>
            <field>[csv.41561.564275358796].[none:tour_purp:nk]</field>
            <field>[csv.41561.564275358796].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='work in progress'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[csv.41561.564275358796].[none:Calculation_3970910124543128:nk]</field>
            <field>[csv.41561.564275358796].[none:operator:nk]</field>
            <field>[csv.41561.564275358796].[none:tour_purp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Leaving Home.trips.pct.pic' width='192'>
      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
      guXh/wN4Yg1dHNrSzgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Returning Home.trips.est.pic' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.trips.est' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.trips.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.n' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Work Travel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Non-Work Travel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='work in progress' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dd5Rc153g9+97lXNV55wjutFAI2cQBEiQBDMpUhQlUZqgCZ7x8dhre8/x
      OWvax/5n7Q1z7F3vrmaloaQRxQQGECSRM9AIHdA555yrunK94D/AYRAoNCkRJMW6n3PwB7qr
      Xr/36v3qpt+9V9J1XUcQkpT8dZ+AIHydRAAISU0EgJDURAAISU0EgJDURAAISc34dZ+A8Gn+
      mTZ+8dMj1D3556x3jPPz35xly1PfY0dZ5m+9UqX3whHGUzZhnumjestOUp3mOx676/K7XLw5
      QCBuIq1kHbtyokQyt1Kb5/zc5xccb+T//U0bf/a3PyDNYvg9rhCmui7w7pVx9j10iLIs9xd6
      7/zQDc706jy1r4ajv/4FVU/8OeWe330ekWiMF//1f77t5/v3bOH+e7aJAPimScT89Pb1oTV3
      YfcM0tvbR/HyMm0XGmkaDrL1wAOkxYc5dbGVlZl+HNtqyYhGUaIBrly+QM9kkB2HnmGx6R1m
      IzoripdDj96H1yxRveNhbKbXeXcwlxce2U5Pw1ES/mmO3mglqsYxWH3EFqbIrr+PjbkaZ06e
      J+wo5NDBHTiMMroep/3KRSZHxrjau8jezAAXOxbZWiRxvB925iv0Ltuw+Afom46w8/599Dd2
      sm33RtobrlC0/SD57hCn33qXYWs5XReOcy2hUL19H9Gei/QtaKzfuRvLeCMdizqRaJQUCyxp
      qTz26D4cBogHlxgeixBcyWekv4/chMpw6yUutYyQWr6JA9uqMUof309N0xgYHr/tPm+oqwJE
      FegbyZRThTbdRtvIMqV5LvyTbbz8zmXUpV5ePXycD44eJ23tDgp9ViBBd3s7Cwtz+BNGpMVu
      Tl/ro7+tGXtJDdLEDdrHQp/5d2YH2xibnqejZ4ji2mJOv9/C9o0FXDt/hQvHX+f6yBLdZ37N
      +d4gAInALNf7Ivzpjw/S1nANzWhi9OYVTpw5z/Fz12m8dIWVRISAYkKf7+TszUVCoy00dbTS
      1L+Mz2UA3FSvLaSmfjOxiT7MxVtJn7vMpVkX+7cW8f4rb9I30E7Yuwb6rxHLKCYxfIHu2Y/P
      2z/eybETpxlfisPKIK+938bm/fuYvfQGTZOxT99Lo5FHD+756N/f/5//gtd/9q959vH7AVEF
      +kYymlIosg5zLVJFjTuAosUxuIt48LEdTIYtDJwbRpZlJPnj76/FyR6aegLszM+iC8Bsx+dz
      ETKbWW2s32x24HDZMNideMxmJEkiruiUrt/JBs96UgocAMwMNDMV0mi+OcbSwDhT6nbKfSFe
      u2nk3poEZydUnimb5lx/kC25mQwgU7e+kF8ePcWae5/FIf3WHzbIOGx29JiGwWDEYDAgo6MB
      bl8qUaMFp9NKxPDpKo6vuJ4nH9/BQlczaBq6JGM0GDAYZLSVaRo7NAo8CRa1NHJTrfz68Acf
      vXdNZQm52Rkf3+vf4/MR7iKz1UdlRSHrynOQYqWkL8lQsZki6QbvnbzO5vsfY+feHZy8eg6z
      nEKW14GjuJis3FIKBhuYjbtIS5XwFpTitlrJyC/CZf/4AbK5syjI8gDgyy7G6PWgFubjsLio
      qsjHaPdSlC+zqb6KsycaaAzk89R6CVBYWFS477s/ZN/aXK6//2vmFlXWbNlBrUVlb7WGlmqh
      tCyd/v6LzKtuUqyQX1yJLnezprKAf37+3en5ZNtcGAuKsbrM5FTdS+3Ee7x3fordjx7CMX6V
      kNNIvLgMp8uJobAEt+XWey2uVIpydCTZSH5ZBe60Ug7tGuXCex/gqruf+pQQrzUs4cwLM6yY
      KM528ZMfPklaipfC/Gwy0lI+db8lkQsk3D1Rzr/2SwZNVTzzyG7sv1+b+Q8SDIV5+k/+Jw7e
      u52/+4vnb/u9CADhWy2RUDhx7ir5uZmsrS677fciAISkdlsbIBKJEI/Hv45zEYSv3G0BYDQa
      kaTfbq4LwreTqAIJSW3VblBdS9B28QOWvPXsXpuHpMcZbrvGxZuDpBavY9+mQq6fOsngfAhJ
      grp7nqC+8IsNbwvC3aZrcfraO8mqXodxqY93jl0lp2736gGQCM/xwfEPWHEtsa7ieeLDl3nt
      4jx/85fP0X3+DJMLLgb6h9jy/P9ITfpXcSmC8MXdPPsmZ9vCfLe8htC4n71PPMmlt15fLRVC
      Z677GpQ/SrlxhL7ZFaYHBkgtr8BuMLFh3/2UptmJh5Y59sZLvPTSK4wEEl/NFQnCF7Bm5wEq
      M52AidL6DfjbzxOQU+5cAuiJFa5fbSMaS2cutEKgsY+HctMI9s+T0FSWJ8cx2WXMDi+7nnpB
      lADCN5bZYkFGAlSWZhco2vIAK4F37hwAEf88U/EM/uJv/gLP/E1+eqQT654DVA2/zy9/8QsU
      3c4DD+7AJKucfvMlbligbOuD7KzKuNNhBeFrIGG125AlncBYG29+MIEzvUj0AgnJTaRDC0lN
      BICQ1G5rA+i6jqgVCcnitgBQFAVVVb+OcxGEr5yoAglJbdWRYE2J0tV0jbm4g/pNdYTHWukY
      WQKgZN1OStJtRIPTNDa0EwGs3hw2rqvCZrpzbAXnRmhu6yOmgSe3ks3V+V/KBQnCauL+SRoa
      u0ktWbt6AITHm3jt0ij319jpHitEudnAQspO7qnJxuEyARBaGuJS6xwvPL+XY796CVNGFlWW
      FYamlknPL0ZZniU1r4DI3CS6O4sMt5Wl8Q4ax3See2ATJpuLeGiBvoFxbKl55DgT9I8vYLI7
      kCNhEoAsm8gsKEFfHiFuzyHLa73b90n4NtIiXD93nZSNWwkMta9eBTK6M0lXxpmR8yjLcYMW
      o+9mAydPNhL9xPoToel+Tp48zVTcgE0Nce3SdUYHbvDrdy7Sdv59bvT0c+a9o0yHP37P8mgn
      J0+fZ2whxJUjr3G9p5Mjr79B6/WL/Je3LmM0BHjnpdcYWgwzfvMM5zrGOfPWYSaCsc86VUH4
      XCR04rEYy6NjqweA2ZXH93/8Q6zTDbx9ph3VYKN+7yGef/4h0owfT/L0FK3n+ee/x/YiiZbO
      CUKRIBoGIqEI1bWl3Lx0mXlzPhWZlo/ek1G9jeef+w51hSkM9vVjdqZSs74Gpxl8mQWUFmQi
      O91UllWxaetaRptOMKFkUpb2+RdyEoRPka2s37mB6OQECbNt9QDwjzXz05feYGxJJSPD+zvf
      EBhr5403DnNzykBZrp3ZyUmWI3FisQg5FTUkRvpIq6jG+llzbSSJ9RvXMDcySO/gDLLRdNtL
      XJlrsM0146zagtP6NcyuFr4lVCa7btIzNgmenNtTIRKJxKe6QXVdIxGPo+kSJrMZtAS6ZMRo
      +DgUdE0lHk+gA5IkYzIZUZUEqn7r/9M953nr9DCP/eD7FKXcKgE0VUHRJMwmA6CjqyrxhIJk
      MGGUdRIaWEwy8biC0WhgpreRl9++wON/9XeUuEXnlfD70zWVWDyBwWhePQC+DCuLs0SxkuJz
      Y/i9ZlvqhP2LBBIGMlI9yGLKpvAl+UoCQBC+qURdQkhqIh1aSGqiBBCS2uqpEIkIYyMjBBMy
      2QWFpDgsq73lI7qusbzsx+PxIsu3N1xjwUVGx6dRZBvFJUVYjV9O41aLh1iOGjDFFgibfGR6
      7V/KcYVvBy22Qv/gKBZfzioBoMVpPfM2zSsplDmCtA7M8+jBrajBJSIJ8KakoASXwepAj4aQ
      7W7iQT+apqIbbJj1Sf7xHy/w9HOP4/G4cRgVAhEdn8eBHl/i2JuH0TMrMPuHGFmR2V+XRWDZ
      jyZb8KW4CS0toGoamsGG12UmsBxE0xRMDi8uq0xgeYk4FlJT3MSDywQiCk63m5FLb3AlWsfB
      Momg006KVWNxOYjF4cFlMxDwr6DqKgaLC6/TKhYCSyoqA1dP0aXnoXSeuXMAKMEFrjSNcv9/
      +11KP/wSXRxs4GdvNpHnUdCL78XU9gbW3U8RvvQ63vv+nM5f/T3pa2oYGlvivv1rGBkZ5eq5
      I8wbKziQM8X7k7n87dPbWRnvod/v5E+f34NH3gNAx6lfc2pQwRZdpvK+Z2n/1Yu46nYwMrjM
      Y09v41d//x7bt6TSnyjh8Y0OTlwfhJUFNj/0BG0n3wW7jYSrkvzFPsZUH92BEWYydzA4foEp
      cy7+qWUeObSJ13/1JsX1JbT2GflXf/ccVpMIgKShSzh9HqYb2rH5su7cBpAkkOBTGyyMdXSQ
      vuEevvvEHnoarxKK/9bD40xj9z17ybPGMGcVkZqSzwMHdsN4I6ebJti8qe6fj37b32ttH2DH
      wYc5tDmHy409YE1jx/37KLQoBMIK9uwSHj2wk8TKEh1NDYwvrOBKz2JltJMFCnjqRz/hJ0/v
      oiA/n4LKanw2E5HAIh0T8PR3n6baMUv7eACbM589D9yPJTqHqml/4B0V/qhoEdra53nkRy+w
      xhu/cwlgcKaxa0sJZ985wrAjxLSew86yCuZPNfDudIKSui0UB+O0tLUSWwjiBUBCkgBJQsKC
      MT7HcNhHhXeZd0YK+G7BraLElV9FVUo7J46ewBQYwVixn4qKfK6fP4MzOM2mnTvoHTqJhPRR
      qEgfHRvyy6rpCc+jBAOkb9+Op/d9jr/5KitSFrt9NmYGBwg4FKypXsozNN4/eoy5UCoHclyM
      SB8Gt/jiTz6yicwsFx1XLhFakVbvBtWUKNOTU4QVmfTsbNxmifmZKQJRyM7PwxBbZmrOj8Fg
      wJ2eRWRpAV9aCoHFRRwp6QSmR0gYLHScep2ZnAO8cKD2o2PHw36mpudRZSu5+TkY1TBTU7Mo
      Bju5ORksTk3gycwgOL+Ixe0gsBwjJ83G1GKE1BQnC9OTxGQXBblphBanmPPHScnIxiVHGJkJ
      4nUYwObFKUWYmFnC7s0gzWVkfmGFlEwvc1OLZGVnYviMBrrw7aXGgoxPzGBypX014wDhxUl6
      xxYpKq/Ea7890U0Qvi5iIExIamIgTEhqn7kqhKIoX8e5CMJX7rYSQNSIhGSy+gYZukokFCKh
      gtlqw2o2far7UE3EiKkSdqsZgEQ0jCpbsJpXn7WlKXHC4QgqMja7A5NR/nh0QNdREgkwmjD+
      Vi+NriqEwiHUD7vwzTYnts/x9z59XQrhcAK7zUxC0TCZTbfGPLQE0ZiOpCfAZMVqWuW4ukY0
      EsNotWEUFco/CrqaIBgKI5tsGF588cUXP/lLTdM+UQqojN08xxvHr7Ew3c+56wMUVZTj+MTD
      Nt7+AW9cXGRTbQEAze/9FxoDuVTnrbJLjB6h4b23uNA2xFRfI1eHY9SU5330sOvAxVdfJlZQ
      RvqHwfXP1PAi16+c5Y2Xf82gX8KZmk2G54utEqEpyzQ3j+CW5zl6vo+yqkKM6Cx2nebNpjCz
      V16hz5hHZbZ3lQNFOHf4ZZZ8leR6zHd+rfANoDLWdIoTzcP09Q/euQRQgwucOtPE3h//91R6
      JDRNQ40u8/bPX2ZWMyB5athVqAMqA5ff4vCNeWzhSbJ9K5x541cMBEKYU+upkps5N2LFGppi
      zaEfsb8mi9BYF9fHdZ7/s6dJMeqoms7KeDMvn2xieXGFvQ/dx+kbjRS7cxiNTTGyFMGQWsWP
      H9+F0ZnG7nv2MTPQT+m+h6mVO/hX/+u/pbxuOxW+OC3Dc/gjDp49UM4rh4+Tk+lg3raOR0oD
      vHG+D5sjg8ee2cLFCy0o5UFuNEao2rSWtdkumq61ULjzL4lPH6Hl0jFGTq6w5TuPcumX7/Pw
      M/dx8sgHHPz+4xz+h99gcrjY+fjzVBb7eKupk835m7+iD1H4/UnIBgNms4ysqXfuBdI1FUUF
      o1Gi7cJh/u//6//hQss1+kM5/OiFH6IOXmYiEAYlQkd7D7see4GN5elEFia5drMLzWAmsDKP
      oijk1+zk3rocxqcXgFuNbV2X0RNBzh75Gf/7v/0V/rCGy+1EjS0zq6ZRnZPF2nIfLe29qLKR
      yOIi0c88Uw2zO5N9+/fhs9vwuqzMzUwQiSawego4+MS9hEZHwWiFyAphRSURT6CqGkVl1RRW
      rqEi1weaxuxcDF+KETBTtWU/D25Mo7G5j8SHJaOqqiAZsMoKgXCMeDyBMz2F8Pzil/5RCXeB
      FmdsIsKa+rVk2vQ7B4DR4WNddSbXL1zFkVGIRVcx29KwK7N09XQQs2fjsZrBYCLV52Gkv5PJ
      2SWMVgfp6RlUVZWTk5aBQZYxmcwYjR8XOK7cEnItK9zsGCE7L5dEXGGir4mJqJ0srwNF0TCZ
      dAJhhZTUdCoqy8nMzsD2O85VkiVkNUrbzRsY0gpxyaDqOpLRhNFsxKhDIh4nr7oOZ3yB6aUI
      ALLBiBJeYSUSB0nC4TASiWpAnJnxEYanQ2RmFZLmVBidmCAUVVCjMRw5pZSky4yML5IIRTA5
      HV/WRyTcZbLJiBaLoaja6nOCNSXCQGc704E4vswCyouzCEwO0ju2QF55HanGJSb8ForTdJrb
      BjDbbaTkluOMTtIztkBB1XpsoVGClly8yixzUgplH9arYyvzdHX3EUxAdlEVWbYoXb2jGMwm
      PNml2MNjTEXsZLtVhsYWya2oIT/VeasRrsYY7u/DXVBLCku0Ds5SVlFGZKqf7okgNquRvPws
      FhYjlBT76O2ep6LYR1dnN6otgzVVGfR3z1JZkkpn5yBppZXk+ex0nvolnfZ9bE/zMxuOEYmZ
      WbepjpWRNkbnExjNZsprqpjtamQmYqFqbSUjZ19lIusAD2/I/Uo/SOH3kwjNc7O1B1tmiZgU
      /9v08AwtgzFqawr4XFnSapTetj4ya9biEVkef3REAAhJTfRcC0ntthLg0+MAgvDtJrJBhaQm
      qkBCUlslF0hjpu8G75xqwmSSiNsLefrxA6TYPn7baOv7HO/x8mff2Q5A47v/ifGMR3hsyypd
      gnqc1nMf0NA3i0mLYSvbxVP31GH6cPFQXde59vabePcdpNLz6T72hH+KD469T2NTB+6iOnbu
      f5it5alf6MKV+CynzwyyfX0qZ5rmuf/B7VjR8fdf5J0uB9uzJnjt4jRPPfccFVmfbzl2PTjE
      S6/f5NHvPkqKVXy3fDNpzLRf4Mi1UazezDsHgBZZ4vh7p6l76m/Zkm1kds6PVQ1x7q136F0I
      k1K0jVp3jGgszmTbGQ5fGIDAKOk7Qtw48SY3x+fJKN1FodLClREgtEj9Q8+xpSSFyHQPp1vm
      eOrPXiDHFGVmOUFktofDJ6+wsKKx/77tvHniBGWSl3l7gK7RBXwlm3jynjpMnmweefwJQtOT
      lD/2AhvNvfy7f/ePZBTUUJtv5UZbP4o1l0d2FHDk/XO4HRKJ9C3sLwzx1plWrN4iHn60huHh
      KWyBa5y6HqFgbSXrcjw0NzSQtuZJGs+9zYqSQ2SijZ+9243Rk82u9Rm8++ZpvJWbMA6dJZi+
      lhR1mczNB/GMnmE69z4coT76ppbYWvzFAlL4qugElpbJrV5PfGbgzlUgNR7FH4T0VDs3z7/D
      q28cpbnzGpf74Pnnn2HsylHG/BFQQ1y/eJma+5+jJtdBdGGU46evEE5Eabh2g+WFGczZdWzJ
      N9PWPwFAdCWAanDgkKOcOfoKLx85hz8QxuxwEJjuoz+YQm1uNuvXeDl/7irBaIQbl28Q+awT
      VSLMhyV27tuLXVdwe220t97Ev+wnEDGx54Gt9DW2sjg7yezcEsv+RUKRMDMzixRV1FBcXUtV
      XgroKmNjQTLys6mpLKK8rp7+S0eZDKmMtLUwMD3NctjOoYd2sTQ5x/p772NzTSZtjTe53jZN
      WUkmWV4zk4vBu/DBCV8KXSEUM2KWohgNpjsHgMnhpSzXTGPzIJUbtqLMjhKIyUhKkFAkQFyy
      YjHIIMmYjUZCwSCRSBRkAzZ3BvsfeICdG9ZgMsjYHQ6sVgv/3OJ25xTgiE0zMBtj87a1DHUN
      0tdynrGYl5IsH6AjSTqaJmFxpbP3/oPs2rr2d6ZCGI1GjFqUa1cuYC+sJcUkoaNjsDqwOWyY
      0THZvazduB4WhxiYDHz8ZlX9cHkUCaNR5qNhEEnCZDKxdvcD7Nm9iVy3HdlswWyQADMWi0xW
      cQ2hgfOM2UsotkNC0TGtlkItfH00hbmlONV160g3J25Ph/4U2UzxmlqCvQ1cvjlE2ZZ97Npc
      T0mqxrnLHWx/8ClKM+yYndls31ZN97VLmDPLqKjdxKYSO9ebeqjasI00pwFHaj4ZbhMWbya5
      qS5ks4c1lTl0X7tA60CA/Y8coqaiEP/EGNb0XLJy8ijLtzI+b2ZHfS4dN/spW7+JDI/tViqE
      rqNqkJ5Xgtuso8g2SkpKyPZY6eufpqQ0j5yiAlxONwV5mUi6hdraMiaHBvCVbmbXxlJk3Uzl
      mjJCs1PgySTDbSMx38mIWkxVth1bagE7t9TQe+0Sltw1VBSkYTA5KS7OQVcU8soq8TjNTLe1
      krHpAWryzFy62Ejt5p2kOUVq9DeSbCY3x8H5D44h564X3aCfppNYHOB8l8KeHVWfKxVipOU0
      F/riPPTo/fgSk5xunGfH7nXYxFIrfxREAAhJTfTVCUnttm5QVVXRxHqZQpK4LQA0TRPZoELS
      EFUgIamtkgoR5drRI5jrDlGY6OT4zTAPP7GHTyYmDDReIp5TQ/Vqqyeg45/q48y56wTjGnnr
      dlPt9jMUSqHas0hvOIfNlel/6PUIwip0/GNtvH+hA0dW2WoBoLI8O4klqpKILTM5vcLCWAvH
      boyhBJcp3XkIezRCLBFjuOUcFzvGyanYQl2uyvmrPZjiK3hq9rGrJhdZXeHiseN4tz3HoTyd
      3okVEvEoK/5Fjp96mXZDPVMdTrbeu5PxpgZctfdQkfHFljoRhNVpTPT0U7zzAYId5754FSi6
      PEn3jMTOahcXLrYyPtzH4FA3b5xo4+DjjzB05i1aB4cYGA2xdWM+Z842kFCBcIAxv0peTiom
      Zxo1lcUklscYmY9RUVJM9aadeOOjNLZ1cb17Ep9XPPzCXaDrWNxexlousqw4VgsAIzarEX9g
      hVgsgsWXggVwe7y4HLcqQjof7iAjSciShEG69TOjx4PH5cD64WtweCn2GRkenSWxMk1jSzcR
      5RNDEJpO5bpqGk8fw5JXS5oYSBXuBi3G4FiQvQ8dotS5yg4xYKb+wEE+OH6Ks1jZt283rng/
      xbl2jM4YxXlG0uUiUgrLqbMleO/w22TvOMTaAp1gLIJs8VJaFMcgAQYHOx96mPPnTvNqi0bp
      pnvIsuZQYEwh11fL1evtmCrKcRjMVFaXfsYGSoLwJZBtbN5azunDr2DLqf5mTYpvOfkyrcvp
      PPbofjxmEQLC3feNCgBB+KqJcQAhqd3WBpBlERNC8hDZoEJSE1/3QlJbpRtUJxaY4czJM8xG
      jGzYs5+avJSPd4iJzXP6fBtrN29kemqOtdWln3mU0bYLLDhqqC9J+XLPXhC+KDVK84UTtI4s
      oCi2VapAiRWOvPRTzNu+z+6MINf7V6ivK6T9ygVm1RQObM/iZ/9whJJiHycaJvne0/eyOLeA
      PaOIIleIps5JSut3khofZNlWhDzVw0wozgpu9u/ZiF3sKSR8TdSVUd443nXnKlA85Gd4WqWq
      IgN7Rgl7d6wjMTPAVEhn4OIrXB9JAEYyiwpIzywhIz7Eld5lqop99PZMYNFnePXIWYbar9I+
      MkP7lYssWXKZvfwmbTOfub6DINx9ukrzxQYqtu1cZYMMq51UD0zPhkiElhgem2JqtJ+pgIrH
      Yfpokzqj2YzBaMZslHE4U7HKcUZGRjG5PPCJMQWDyUxmZjY+jx1FE21v4euhKlGG/BLl6fY7
      twFkq5cDD+7j6LHf0K6qZNXupMLhJrY4iMHiQ03E8Xg9OBxpuJTrdMxm4XPbMZjM2E0aI9NB
      nFY3FrsLp9WM0ePFZpJxenxYRfVH+Jpo2jJWew5moyy6QYXkJr6GhaQmAkBIap85KV4QksVn
      LosiskGFZCGqQEJSWyUVIsFIRzuGnBryfLfmKKqxIK3NN8io3kmuPUJjSz8la9bitkS5cbUT
      KeFnMXqrGpVSWMOW6nwGWs4T8dVSWyhSIYSvmRanr/UGA9MBkOyrlQBxeq6dZ2A+9tFPlsbb
      eOu1w5y41odmMDJ09RQ3huYIjjRxrHGUktoNMNXLijOHyoJ09NgUR197nbeOXSGo3OWLE4TV
      SEZyS9ewsbaIxYWFL1gF0hP03Wyn/J4DzNy8TkSzUlObS297Nx0tnVRu3ExKahpOqwW724vH
      bmGm8wZyxR4yYsMMz4qNI4SvmSRjd7pZHOqjeMveLxYASmCS652jzI/PEphopWM2Sm5ZDZHe
      y5ztDbOhroBPrgquawluXG9meXER/8IEzd0jiFE34eumqXG6Z+PUFnhWawOArsS5fuotppvM
      uJygZe/gr//kIMNnfsXJhnbqHy4nxx6mzVZHievT8aSEx2me9PDX//JPYLKRn7/dxMo9NbhF
      01v4GqnKPHHVi9VoWG1SvI6mamgfvkSSJEDCYJDQNR1NB1mW0DUVHRmD4daTrakqSDKSpKNq
      OoYPp1lqmoYsGz6eTyAIXwNd19E0HVn+jFwgsSqEkExEZURIaiIAhKQm0qGFpCZKACGprdoN
      Gg+M8U+/PExQs7DniedYl+f50k9C13UGbhznYvsUqg7V2w+yozr7c79fWZnkfMM4W+/b8qnN
      OwThNh+tCjHP7HRo9QCIzQ7Q6Xfwk6e2Y7cZmOq5xsnLbeDO45H9azl15DgJg5mYPY9nH6jh
      zDtHmYoYWbt9D+6ZG1ydUIiGAmR4bCyGbRx64gCdp96mfy7BhgMPs7E4DV2Z4a1jHXz3b/4a
      r7bIXMRMeK6fN4+cRbWlsWfXJtoaTlG9/2maDr/BrkO7uXjqIrpZImopos7cxVsnppn395BW
      vodq+miKlPDAthLEnu3Cpxis1N/zMJWTrbx3M7p6FchesJFHq2ReffM4Y7MTnPrgLGW7Hyc/
      fJNjjYMMjS1QvXEz8zcu03zjOD2U8uD2Ys4eOc7YzBhKai0pgR7iuWtw+PvoGzpTHw0AABJu
      SURBVJslotnQFntpaB0DQF+ZJmDw4bVbcKbkUJzt4MqRV3Gsf5wNmUHePXWd0cE+AnGFwZ4+
      wpEVRibnWLN1D6PXzpNaVkVhWS0b6wpoud5EY0ML3pxM8fALn0nXVK5f62L91nWrB0BwegRK
      9/Hk1jQaGrrQJFBUFVXVMRoNmC0WnHYnZrMRSZZRFeXWOILBgCxJOJxOTEYLNrsFkywTHWvl
      TM8K5RW5HxU/kqeIDHWKieUw8yPtXLo5hCxLKMqtMQmD2YzVaCQR8RP+MC/PZLLjcLixWXTQ
      b1WjfNlVOOZaOOd3sT7HdhdvofDHTFNCTEVM5LktGF588cUX7/Ri2ajTdfk0vUt27nvwPtaV
      Z9J25QLhjHoe3l5GJKJSUFyIGo2xdt8BzGMtNI+E2ffQfaTJCubUAnzGKJ68MtySSnrlOswL
      A4QMKaRlZlNWkI4kWagoTeXqmTP0TkeoXlvH2rXV9DecYIocHjq4m2wHNHWNk5OTQWVVGaoi
      UVRciBIOUVFXy9LIAFJaAc6lXuI5O9lRnfPhyLUgfJqmBghHnOQXpH+7ukEX+q9y+Gwv9z7x
      DCWpFrHLjLCqb1UACMIXJcYBhKT2mZPiRaEgJIvPXBZFZIMKyUJUgYSktspIcIzm40dpngpj
      knQK1+9l59oCYjPt/OJoH8/98FE8+gonjxxlIgyyLlO//x4CzQ30TM+iGmwU1Wxj3+aKW3sF
      C8LXTic0N8jx01cxZVSuVgIozE2MUbrjMR7eWkBjQxMhLUH31Yt03bzCjaEV0GJMTc+x9cHv
      cXCtk9Nn+9nw8BOsSYP02r0c2CIefuEbRA1z5WwLmx97lrV5js8xJzgRo+H4GwwbFjG41pBY
      muN6f4gf/fAAZxuusz23DiUa5Nq5DzAuDFO24THMX8WFCMLvIx5jMrhA6N3X8KvO1dsAksnC
      tvuf4vnvPEh8eoi+7hYm/QnaOyeYH2hh2h/BYLZRWl7CwuIKWekeMQAlfHMZjHjdWex97FnW
      ZkirlQAyLq+X5vNvMmZIULZhKwQH2PXk97hvfT5X3v5HJhZipGfnkFtQTumhrXzQ0kpVzi4c
      vnS8DlEWCN8wJic76ws5fvg32NJLxaR4IbmJblAhqYkAEJLabW0ASZKQZREXQnIQ2aBCUhNf
      9UJSW6UbNE7P1QaCKVVUugI0D0XZsr0Wy+c9uq4x3nmVSUMxm6syGGu9ypzNx8pYkB17NmAW
      ewULXwMlNM2JY+ex5K9bfYeYvquneWe6nX/xVDGXr61QW19Id0szi6qHbevyaO/sJRFXsWWW
      UF/i5ea16/glN+vWrcVjNWDXlnn/9Hkqcu/h9KmzlD3yfWy2OP7pAUamAkSjUYprN5IqL9HY
      0oMzp4LashyRPiHcHVqEi++do2T/IaL97atXgWSTiVRtgvcahlB1WB7voXtsnqZjv+BG1zBv
      HDlOTDJy7vVf097XSft4gNaTR2gYmAZJwldZj21+gO7ODubIpjo3xoljDYx0XeHUtRG0mVYO
      n2vl9Ku/oH1ihKOv/Ya+mchXcSuEZBSLMBwI0HXybbqmwp+jDWAws/vQQ0y3XicYh8D8JIth
      BZtJI5bQMducFBQWYZUWGRqZwx+KYzFKxBK39kOSzJmsy1f44NhFUqrW4/nEWiWpecVUFGYR
      iUSZGp/El1XM9p1bSbGLBU2Eu0SWsVo93PP4c5TbV1YPAKPRjCOrjof2rcFuMqIpceanJ4nq
      JiLhEImVOY4dfZdo6gbKfQnmpiYIqRqxSOLDI0hUrV+PfznK+jXFgIzJbMRgMGIyysgGIyaT
      kS27NjHa1kTX8AJG86o5eoLw+zE72VGdwVuv/BPdQdsf2A0628b/9vNT/Pgv/zsKvvwVEwXh
      rvvDAkBTCMcSWCw2DKJDR/gjJAbChKR2W2Vb13WxKoSQNG4LAOWf1/YUhCQgau5CUlulv1Fh
      qq+H4fkAstFG2Zo1pH5ilpeuRplbiJCa4fvEUuQxhnpGSS0swW0V/fnCN48a89Pe2o0xJX/1
      ZVHazh8jUHo/aVMNHJnTeGZPMdPTC9hTsogNXeDtpgjPPHsAbWmOsGaloNDM+fdPsOnxJ3FZ
      TGS5YD5kwG2OsxiMkohp2O0GIoqRvOx0QovTzAeipOcW4bEbxXxi4e7SYtw8d55YXhXR4e7V
      V4VAkrA73biiVpSIn0vvHWZK8zA7G2L3GgP+FY3ZgVbauidZHO5i2w/+FIDlkeu83qbxk+06
      r9x0sDt3jBOjNjKX+0kUbUEfbqX+4YcZb22B0BSBnIP84IGaz3FCgvAHiIfpmfPjDTehectX
      bwPoqspQVzPzpmIe215A9+AomBzUlJeRkplNamY2HptMQlHQlSAr4Q97kCTpt77NTeRXrKEk
      00lKQS0FbhP+SBg9nkDRdQLLK4i+J+ErIZnZ/tB3yNEmV//ClYwmarfdy95yF2hhakvy6QnM
      0bccY0NZBqHpTjo6dGb9BhwGmXA0CoAtNRfL8ikutxpQtdrPPHYstMDQ+ALF2QYS8TCahmiW
      C3eXxcmmIh9nT59AixtXWxVCIxIMIlmcWE23nkwlFiYQjGC2u7CbIRAIYbKYiUejSLIBk82O
      HothttmIhQKoyMhGCxaDhiKZMChRVJMdOR5GsliJh4NoyEgGM26nHbGpi3C3aWocv38Fg8Uh
      lkURkpuocAhJTQSAkNRuqwKJPCAhmXzmukCCkCxWXx5dU1iYmSKsmsjMysCyykoOSnSF6dkF
      FA2QJFIy80RKhPCNoikRpiZnMdh9qwdAZKad/+/nZ8h1axTt+z57K31Eo3EMJgtGWSOhaGi6
      jkGSUHWQYiuMdTdy9HQz6/ffzzZnOkZVB9mI2QixWAKD2YpJUokrGpqmY7ZakXWFaCyBwWTB
      YhYpEcJdoifovXKa7oiNyJL/c5QAqkJoJUDtUz9hQ7mHG0dfoXU+xmTAxSOVQd69qeBODKOk
      VhCfHuKhv/pf2L51E41tk2zcsQf32En+5c/Os3//fVj8w0zFQkyvZPNgVYC3r6yQbV3AvuFp
      ypdPcHYIzK48fvTCk/jEyurC3RAL0ji8REZKFE9J7eq9QPbcev7n/+YZ2t79KS+faAebCxMK
      07MzaLpOQd1ONhWlkVZez8Z8A3P+28cQUnLWsHdXPW63HYOmMjc7g6LqZK/ZysO7apicWcCX
      WUBwZpS4pqAoYhxCuEt0HSWuULPrQawLnasHwGL/VV4700V6Rip6eJHW1nYsKdlYVYWEriNJ
      MpIkffTvs0iShBbz09baiT0tB1lP3Ko2yTIGWQZ0AovLlG7YgCEwz0pEBIBwl1js1OSnMzDY
      x1LCtPqcYE2JMNzXz4pqprisiPjcOJP+BCajibRUM3F82BPzhC0pWCKz4CsmzRxnZHyW9PxC
      zNF5hucTFOanszg+xExQx2w2kuk1E9LcpFsjTIbN5DpV+oYmsPhyKM5LFyvDCXeNGvXT2zeM
      JSVPTIoXkpsYCRaSmggAIamJVSGEpCbWBRKS2uoDYbqOpqnoSBhk+Y65QreCB2T59tfouoaq
      agBIkows/+5u01XPRZeQDTISOpoOsgQ6EvInj6frqKp6a5qltPq5C8lD13U0VQVJXj0AYot9
      /Md/eAtZhk2P/Qm7KtJ+12GZ6zrLleVCHttRcttvJzpP8F9faaOyOoexiQDf+6s/IfeLbKSt
      q0y2neHtK+PYDVGsOfU8uMFHy7SR3EgLY6697KtN/fj18538H//xTQrKiglMTLDpyT9nR5lP
      pFgkPZXxm+c52zlNQrOuHgBKcJFFxcb3nnuCwlwnHeffpqFvloi1kENVKm9dmSTFsIJz7f2Y
      209yLVJLjjxAZ8cIC1ErP/rJ90kx3TpWRsVmnn1mG7/59/+G6YU52o4eZzSgYU2r4Iltqfzi
      NyfA6uKeQ48w23Sc4ekF7KX38uSBWuRoiGPvN3Lwb/8Hiswa0ZiKMnaVjqEog21XmM0K0nMp
      wT2PPE3rkV+wYf8eTBYnufkFyPOTxLUVfv5vfsHuJx/kwvHjbD/0NBdf/xUJo4Mth55lU3HK
      3b7zwjdBPMj17jmqK0sx2NI+RypEXj0/eqCWc++8yoW2URTMuJwm+voHiMcimDPK2betlLGR
      WcrLK6hYt5E0mxmX04Z/tJfZT2z2MtPTwD/8p//AdMo6MsMj9PpdPP2dR4j2XGTIHyccDrIS
      ihCORpCNNuxGheH+EWKApqmE4hoOiwGD0YzDYQMlRihip3JNDjUb72NzvpmbN68wpaST7zRg
      MFtJTc8iN93B6Mg4wWAQRVUIh0MoWoJ4MMTySphQJHYX77jwjaKqhKNhrO5UFoY6Vg8A/0g7
      7csONlamMt7Xw9XmNlw5JTjQ0ACjxYrZbMIAGAwGYmE/rVevEXVmkuYyomofN6gzK7fynUf2
      Ep+bIGawYVACjE9OETV4sBkl8kurybVG6Ojt4EJDP6WlBRglDV0Ho9VGXZmPG80DjHQ38cGp
      a4RvNSmQDQYi4TB5lRX0nztB2pp6TLKEbLDg9nrxuqwoihWPXWNmbp5INA5xBW9xJaUZMr2D
      U3fpbgvfOGYrBenp2NxebBYDhhdffPHFT/5e07RP9QKZHS4iU4MsSpnsu3cHhakOlgIa1eWF
      ZBcVkpqSQVaaF4c7jdKSfFaW/JTXVqJGIuSXlZGdlYfLIiMZjDg9aRSWVpDtiqH6KlmfZ2d4
      dIH6ew9QmZeJEljAmFHB3i2bKEiVWNY9FBXmkJORjslopLCygsBQJ+NLKmvq60hz2bF5Uqko
      KSDoXyYjI5O+zm52PPIYGXYTqhJiZnycuC2Pfbs3UpTjYXE5Tn5pJSVlVfikZWLWPPbuWIfT
      IpbkSgqyiZwcL51NTdjzar9Nq0JEaDp5lgV3KQc2V4jlVYTP5VsUAILwxYlUCCGp3VYC/HYb
      QBC+zUQ6tJDURBVISGp37PsLL49z8ugxWjqGSCsvY8f+J1lf4AZNoevqKQxl+6lIN0J0iZd/
      /lMWzBmYVI3NBx5lQ8nHKRORiTZePjXKoUOVNLWt8OA99Xf9wgThs2nM9d3gg8td6I6sOweA
      3ZvHoaefZar333Pg+98nc36An/2Hl7DlVJFlnsYT+3AkSlMJBTX2/8ULeAeP8cqZBjKMhVw8
      ewPFkcf+OjfLy/M0nR7mvRtLpLlV+trbicpeHnr8YbKcog9e+IokQly+NsCGvXshHP9iVSAl
      ssL0QoI9D+wmOjnEYihBOBQkElc+fIWE2+sjFpji3NF36Zpeoa/hfVqnYoCVstoy8so3k29L
      YPM4GOpqZmx25cu/SEH4XRJxFoJLzI6M0NnxOVIhfpvBYMNikZGARGCac6ePc6P341SC+dkp
      nJkFuMxm1u54gMcOPUx5punjA2gqbVdOsGIvJM/n+DIuSRA+P7OZzJQc6nbsodhn+Bw7xMhG
      qjbW45ZlzK401q2vxopMXuVGDAUFVG8uhXgQdbaHhsMvYXFn8eShvbji5Rw/fpGxnLVUpHhZ
      W2MkNSebCvspzIX3II8Ok15cjk0sgCV8lQxO7t23jqOv/Qp3yUbRDSokN9ENKiQ1EQBCUrut
      DaCqqkiFEJLGbQGgaZrIBhWShqgCCUntc+wPEOfqsddYTNnGwa2lSEqYjmsXaRuew5ZWxL49
      W/HadHobztPQOUBIMZJTVM29+7bjMq129E8bbrlEMK0Sd2AQOXcLeZ7f97IE4XeLjrfwTyfb
      cGcUrh4A8fAsF2+0ELWpbF9XRHzoKqf7EvzlD55ltLWZUFzBa7NSsW0/ToOfdybyeej+zUw0
      n+HE8BJZ5etgoo3RkJmde3aw1HWFyYiBsGrj3l3rGGy8SPd0lF0PPoKuafinOzn62lv49pr5
      yUPrv4r7ISQVjcnBPir3Ps32AstqVSCdmY6rWNY8TpVjgu7pALPDI/gKi7AYjJTXbybXY/3M
      d84MtDJjKmRTlsacYic22sy5mwMMdTSi52xA6bzAje5Ozpy9Siw6R0f/DJP97SyoHoqKcti2
      UTz8wt2gIblymG99n1ffPn7nANDifq419pBY6GcukqCpsRtPXi7+iQniqsJoTwczgd+1pIgR
      p8PG0kQ/A1Mh0lPdwK3NMlJ8qTiddmS7lw1b1mEML9PTO4jyic4nXde+rCsWhI/pYEsp4OAj
      T1KTLt05AGLBAIqrnB//6Qv86QvP4dUWsBZuYWtWlFd/8xuudE99ahlEszOVrBQnEuBKzSLd
      Y8eZkY9bXWQRBx6TkZSsPFxmCV9WNl6HFRJxNFsGG9dX4EvPIsXroyg/m4721rt9K4SkJCFF
      Z3j7lZcZU9PEpHghuYluUCGp/f8HJQPVAjhTpgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
