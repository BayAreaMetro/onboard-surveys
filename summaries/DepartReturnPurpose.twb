<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='DepartReturnPurpose' path='/workbooks' revision='2.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='DepartReturnPurpose' inline='true' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' version='9.3'>
      <connection class='textscan' directory='M:/Data/OnBoard/Data and Reports/_data Standardized/tableau' filename='DepartReturnPurpose.csv' password='' server=''>
        <relation name='DepartReturnPurpose.csv' table='[DepartReturnPurpose#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='weekpart' ordinal='1' />
            <column datatype='integer' name='depart_hour' ordinal='2' />
            <column datatype='integer' name='return_hour' ordinal='3' />
            <column datatype='string' name='tour_purp' ordinal='4' />
            <column datatype='integer' name='freq' ordinal='5' />
            <column datatype='real' name='weight' ordinal='6' />
            <column datatype='real' name='trip_weight' ordinal='7' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depart_hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[depart_hour]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>depart_hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>return_hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[return_hour]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>return_hour</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tour_purp</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tour_purp]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>tour_purp</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[DepartReturnPurpose.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;Work&quot;' value=' ' />
        </aliases>
      </column>
      <column caption='Time Away from Home' datatype='integer' name='[Calculation_597289929475764226]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='int([return_hour])-int([depart_hour])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Mdnt' />
          <alias key='1' value='1 am' />
          <alias key='2' value='2 am' />
          <alias key='3' value='3 am' />
          <alias key='4' value='4 am' />
          <alias key='5' value='5 am' />
          <alias key='6' value='6 am' />
          <alias key='7' value='7 am' />
          <alias key='8' value='8 am' />
          <alias key='9' value='9 am' />
          <alias key='10' value='10 am' />
          <alias key='11' value='11 am' />
          <alias key='12' value='Noon' />
          <alias key='13' value='1 pm' />
          <alias key='14' value='2 pm' />
          <alias key='15' value='3 pm' />
          <alias key='16' value='4 pm' />
          <alias key='17' value='5 pm' />
          <alias key='18' value='6 pm' />
          <alias key='19' value='7 pm' />
          <alias key='20' value='8 pm' />
          <alias key='21' value='9 pm' />
          <alias key='22' value='10 pm' />
          <alias key='23' value='11 pm' />
        </aliases>
      </column>
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Mdnt' />
          <alias key='1' value='1 am' />
          <alias key='2' value='2 am' />
          <alias key='3' value='3 am' />
          <alias key='4' value='4 am' />
          <alias key='5' value='5 am' />
          <alias key='6' value='6 am' />
          <alias key='7' value='7 am' />
          <alias key='8' value='8 am' />
          <alias key='9' value='9 am' />
          <alias key='10' value='10 am' />
          <alias key='11' value='11 am' />
          <alias key='12' value='Noon' />
          <alias key='13' value='1 pm' />
          <alias key='14' value='2 pm' />
          <alias key='15' value='3 pm' />
          <alias key='16' value='4 pm' />
          <alias key='17' value='5 pm' />
          <alias key='18' value='6 pm' />
          <alias key='19' value='7 pm' />
          <alias key='20' value='8 pm' />
          <alias key='21' value='9 pm' />
          <alias key='22' value='10 pm' />
          <alias key='23' value='11 pm' />
        </aliases>
      </column>
      <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
      <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\DepartReturnPurpose.tde' schema='Extract' tablename='Extract' update-time='09/12/2016 05:35:34 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_3970910124543128]' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' />
            <calculation column='[Calculation_597289929475764226]' formula='int([return_hour])-int([depart_hour])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='9517' timestamp-start='2016-09-12 17:35:34.909' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_597289929475764226</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_597289929475764226]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_597289929475764226</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>8399</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>9517.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>9517</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9517.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>depart_hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[depart_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>depart_hour</remote-alias>
              <ordinal>2</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>9061</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>3</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>172</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>73632.0</statistic>
                <statistic aggregation='Avg' datatype='real'>7.7368918776925506</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>2959</statistic>
                <statistic aggregation='Stdev' datatype='real'>55.235742985870189</statistic>
                <statistic aggregation='StdevP' datatype='real'>55.232840958233446</statistic>
                <statistic aggregation='Var' datatype='real'>3050.9873032011078</statistic>
                <statistic aggregation='VarP' datatype='real'>3050.6667203175098</statistic>
                <statistic aggregation='Count' datatype='integer'>9517</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29602878.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>4</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9517</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Caltrain&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>return_hour</remote-name>
              <remote-type>16</remote-type>
              <local-name>[return_hour]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>return_hour</remote-alias>
              <ordinal>5</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Max' datatype='integer'>23</statistic>
                <statistic aggregation='Count' datatype='integer'>8801</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tour_purp</remote-name>
              <remote-type>129</remote-type>
              <local-name>[tour_purp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tour_purp</remote-alias>
              <ordinal>6</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;at work&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;work-related&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9517</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>7</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6753</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>812185.73017146159</statistic>
                <statistic aggregation='Avg' datatype='real'>85.340520139903504</statistic>
                <statistic aggregation='Min' datatype='real'>0.0064451493333333304</statistic>
                <statistic aggregation='Max' datatype='real'>17382.057724404502</statistic>
                <statistic aggregation='Stdev' datatype='real'>477.14215941255316</statistic>
                <statistic aggregation='StdevP' datatype='real'>477.11709086710738</statistic>
                <statistic aggregation='Var' datatype='real'>227664.64028887427</statistic>
                <statistic aggregation='VarP' datatype='real'>227640.71839749161</statistic>
                <statistic aggregation='Count' datatype='integer'>9517</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2235769069.6519675</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>8</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9517</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;WEEKDAY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>9</ordinal>
              <family>DepartReturnPurpose.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6026</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>963542.97514736746</statistic>
                <statistic aggregation='Avg' datatype='real'>101.24440213800226</statistic>
                <statistic aggregation='Min' datatype='real'>0.013984198</statistic>
                <statistic aggregation='Max' datatype='real'>18600.874602671</statistic>
                <statistic aggregation='Stdev' datatype='real'>516.07281318707953</statistic>
                <statistic aggregation='StdevP' datatype='real'>516.04569926617467</statistic>
                <statistic aggregation='Var' datatype='real'>266331.14851082629</statistic>
                <statistic aggregation='VarP' datatype='real'>266303.16373111517</statistic>
                <statistic aggregation='Count' datatype='integer'>9517</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2631960541.6820903</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_3970910124543128</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_3970910124543128]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_3970910124543128</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>13</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;College&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Work-related&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>9517</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>52</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_3970910124543128:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Work &quot;</bucket>
            <bucket>&quot;College&quot;</bucket>
            <bucket>&quot;Dine out&quot;</bucket>
            <bucket>&quot;Escort&quot;</bucket>
            <bucket>&quot;Other&quot;</bucket>
            <bucket>&quot;School&quot;</bucket>
            <bucket>&quot;Shop&quot;</bucket>
            <bucket>&quot;Social or Rec&quot;</bucket>
            <bucket>&quot;Work-related&quot;</bucket>
            <bucket>&quot;Missing&quot;</bucket>
            <bucket>&quot;Error&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Leaving Home.trips.pct.pic'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Time Leaving Home</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[depart_hour]' derivation='None' name='[none:depart_hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:depart_hour:ok]' member='4' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='5' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='6' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='7' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='8' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='9' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='10' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='11' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='12' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='13' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='14' />
              <groupfilter function='member' level='[none:depart_hour:ok]' member='15' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='59' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='136' />
            <format attr='color' data-class='total' scope='cols' value='#3f6a6e' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='color' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#555555' />
            <format attr='font-size' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
              <lod column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Time Leaving Home:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Estimated Trips:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>&#10;Share of Operator Trips: &#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-transparency' value='155' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Returning Home.trips.est.pic'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Time Returning Home</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[return_hour]' derivation='None' name='[none:return_hour:ok]' pivot='key' type='ordinal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]'>
            <groupfilter from='10' function='range' level='[none:return_hour:ok]' to='23' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='59' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]' value='42' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='136' />
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='color' data-class='total' scope='cols' value='#3f6a6e' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='10' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
              <lod column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Time Returning Home:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_9991014155747149:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>Estimated Trips:&#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&gt;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2700' lmargin='2700'>&#10;Share of Operator Trips: &#9;</run>
                <run bold='true' fontsize='12' indent='-2700' lmargin='2700'>&lt;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-transparency' value='155' />
                <format attr='mark-color' value='#cc721e' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Top Ten-Non-Work Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purp]' derivation='None' name='[none:tour_purp:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[tour_purp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:3]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[operator]' ordering-type='Field' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]'>
            <groupfilter from='&quot;at work&quot;' function='range' level='[none:tour_purp:nk]' to='&quot;work-related&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tour_purp:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;Missing&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;at work&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;college&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;eat out&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;escorting&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;grade school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;high school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;home&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other discretionary&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other maintenance&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;shopping&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;social recreation&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;university&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;work-related&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='Share of Weekday Commuters' />
            <format attr='subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]' value='p0%' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' value='p0%' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' value='12' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='240' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk] / ([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:3] / [textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]))</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:2]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Ten-Work Travel'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Top Ten Index' datatype='integer' name='[Calculation_374924690188386304]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[tour_purp]' derivation='None' name='[none:tour_purp:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[tour_purp]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_374924690188386304]' derivation='User' name='[usr:Calculation_374924690188386304:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[operator]' ordering-type='Field' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ACE&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
              <bucket>&quot;Caltrain&quot;</bucket>
              <bucket>&quot;BART&quot;</bucket>
              <bucket>&quot;LAVTA&quot;</bucket>
              <bucket>&quot;County Connection&quot;</bucket>
              <bucket>&quot;SamTrans&quot;</bucket>
              <bucket>&quot;Union City&quot;</bucket>
              <bucket>&quot;AC Transit&quot;</bucket>
              <bucket>&quot;SF Muni Pilot&quot;</bucket>
              <bucket>&quot;Sonoma County&quot;</bucket>
              <bucket>&quot;Napa Vine&quot;</bucket>
              <bucket>&quot;Tri-Delta&quot;</bucket>
              <bucket>&quot;Petaluma&quot;</bucket>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]'>
            <groupfilter from='&quot;at work&quot;' function='range' level='[none:tour_purp:nk]' to='&quot;work-related&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:tour_purp:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;at work&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;college&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;eat out&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;escorting&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;grade school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;high school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;home&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;missing&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other discretionary&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;other maintenance&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;school&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;shopping&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;social recreation&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;university&quot;' />
                <groupfilter function='member' level='[none:tour_purp:nk]' member='&quot;work-related&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_374924690188386304:ok:5]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</column>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[usr:Calculation_374924690188386304:ok:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='52' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='372' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]' value='false' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]' value='p0.0%' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Corbel' />
            <format attr='font-size' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-color' value='#4f6e8d' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk] / [textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk])</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk:5]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Tour Purp.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Shop&quot;</bucket>
              <bucket>&quot;Social or Rec&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Work-related&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;Dine out&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='82' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='ASC' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='108' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Tour Purp.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Approximate Tour Purpose</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Simple Tour Purpose' datatype='string' name='[Calculation_3970910124543128]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE lower([tour_purp])&#13;&#10;WHEN &apos;at work&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;eat out&apos; THEN &apos;Dine out&apos;&#13;&#10;WHEN &apos;escorting&apos; THEN &apos;Escort&apos;&#13;&#10;WHEN &apos;grade school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;high school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;school&apos; THEN &apos;School&apos;&#13;&#10;WHEN &apos;other discretionary&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;other maintenance&apos; THEN &apos;Other&apos;&#13;&#10;WHEN &apos;shopping&apos; THEN &apos;Shop&apos;&#13;&#10;WHEN &apos;social recreation&apos; THEN &apos;Social or Rec&apos;&#13;&#10;WHEN &apos;university&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;college&apos; THEN &apos;College&apos;&#13;&#10;WHEN &apos;work&apos; THEN &apos;Work &apos;&#13;&#10;WHEN &apos;work-related&apos; THEN &apos;Work-related&apos;&#13;&#10;WHEN &apos;home&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;Missing&apos;&#13;&#10;WHEN &apos;placeholder&apos; THEN &apos;Missing&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;Work&quot;' value=' ' />
              </aliases>
            </column>
            <column-instance column='[Calculation_3970910124543128]' derivation='None' name='[none:Calculation_3970910124543128:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Tour Purp' datatype='string' name='[tour_purp]' role='dimension' type='nominal' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_3970910124543128:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Error&quot;' />
                <groupfilter function='member' level='[none:Calculation_3970910124543128:nk]' member='&quot;Missing&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Work&quot;</bucket>
              <bucket>&quot;Work &quot;</bucket>
              <bucket>&quot;College&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Shop&quot;</bucket>
              <bucket>&quot;Social or Rec&quot;</bucket>
              <bucket>&quot;School&quot;</bucket>
              <bucket>&quot;Work-related&quot;</bucket>
              <bucket>&quot;Escort&quot;</bucket>
              <bucket>&quot;Dine out&quot;</bucket>
              <bucket>&quot;Error&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='62' />
            <format attr='font-weight' data-class='total' scope='cols' value='normal' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='text-format' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='76' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-weight' data-class='subtotal' value='normal' />
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='font-weight' data-class='total' scope='cols' value='bold' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='width' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='144' />
            <format attr='color' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='height' field='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-size' scope='cols' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</cols>
        <pages>
          <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='work in progress'>
      <table>
        <view>
          <datasources>
            <datasource caption='DepartReturnPurpose' name='textscan.0w2b9xg043kuvz13fioil1p2f1jc' />
          </datasources>
          <datasource-dependencies datasource='textscan.0w2b9xg043kuvz13fioil1p2f1jc'>
            <column caption='Time Away from Home' datatype='integer' name='[Calculation_597289929475764226]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='int([return_hour])-int([depart_hour])' />
            </column>
            <column aggregation='Sum' caption='Time Leaving Home' datatype='integer' name='[depart_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[Calculation_597289929475764226]' derivation='Median' name='[med:Calculation_597289929475764226:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Time Returning Home' datatype='integer' name='[return_hour]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Mdnt' />
                <alias key='1' value='1 am' />
                <alias key='2' value='2 am' />
                <alias key='3' value='3 am' />
                <alias key='4' value='4 am' />
                <alias key='5' value='5 am' />
                <alias key='6' value='6 am' />
                <alias key='7' value='7 am' />
                <alias key='8' value='8 am' />
                <alias key='9' value='9 am' />
                <alias key='10' value='10 am' />
                <alias key='11' value='11 am' />
                <alias key='12' value='Noon' />
                <alias key='13' value='1 pm' />
                <alias key='14' value='2 pm' />
                <alias key='15' value='3 pm' />
                <alias key='16' value='4 pm' />
                <alias key='17' value='5 pm' />
                <alias key='18' value='6 pm' />
                <alias key='19' value='7 pm' />
                <alias key='20' value='8 pm' />
                <alias key='21' value='9 pm' />
                <alias key='22' value='10 pm' />
                <alias key='23' value='11 pm' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]&quot;</bucket>
              <bucket>&quot;[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[sum:trip_weight:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]' direction='DESC' using='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[med:Calculation_597289929475764226:qk]' />
          <slices>
            <column>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='181' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</rows>
        <cols>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='Leaving Home.trips.pct.pic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_1830910123736507:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:depart_hour:ok]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Returning Home.trips.est.pic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_9991014155747149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:return_hour:ok]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Tour Purp.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='105'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_4061014133638149:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_5531015142635031:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Top Ten-Work Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Ten-Non-Work Travel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='work in progress'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:Calculation_3970910124543128:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:operator:nk]</field>
            <field>[textscan.0w2b9xg043kuvz13fioil1p2f1jc].[none:tour_purp:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Leaving Home.trips.pct.pic' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2dd3Ac2X3nP92Tc8AAg5xBZCYwLbnk7nIDN2i1yVrJsmQ5nE46y+VwLtmq
      8lWdfMF2+cp3Lp/tczqfHHQ6yZK8krxa7a6k3eUyLDMJZoBEzgQwSDOY1N33B0gQg8kgkftT
      tbWcnn4zrzH97ffe7/2CoCiKgorKJkVc7Q6oqKwm2tXugEpqFFlmbogWEEQBYfH7dwdwQVj8
      DqAoKAneWzjoJ2y3iVAFsMYZHrjNW++epqKshJr6CoKBMDqjBbNGQmN2YtZO88HJXp4+3EJ3
      Zyfegnx6+4dxOe3opCBXOvoo8Ljx5BfhuzOExZkDvk7aZx2MddxgT0sTOrODyfE7yAg4PV78
      4yPkFZdh1GlW+/KXHVUAa5y8giLy8vIJ+af48MQpdIKATiMwPT2Nt7iGg3sqAZgcuMn7xy/g
      sFkYG7tDfn4R034/WiHM+PAdQmdPYvOUIovD7C43MdjXTWTax9mrHSjTAwQ1ZgRZJjLrJxSF
      hp0yu5urV/nqlx9VAGscQdBRW1uFqEQIA3PPZAWiYQSTE43Oit0kM6VYad5Sid3tZmjIQ11d
      NWMTAZSoH53OjBTx0379JnpPOWZ3AftaKgj4iomGA+hNpcgoIMsoioB/apzCIu/qXvgKIahW
      oM2BIkt0d3XjLS7FpFefe/dY2wJQFCRZRqPJbi4qSVEUBLRZtpMlCUUQ0IhZGMcUhUg0iiCK
      WX9fNBpF1GgQs1iIKoqCJEloNJqsFrCSJCGKApKsZNVPSZLQiGLWv4MkSQBZ/3aKoqAoCmI2
      vwFzvzmCmN1vB2i++tWvfjWrFivInb6bfOdHp9neWEPX7TbCUZm+vn58Ph9WhxOtmOgGUHjj
      m/9IROfA63HS0X6TqCTR1z/IhG8Cm8OFJlE7ReLdH70Feitum5lb7e1EJYnBwUF8E5PYnc7E
      N6oiceHET7gxHKI830Vb+20kKcLQ4CDjk1M4nc4kN2qIf/7a3zEqWSnNs3KzvQtJCjM8NIxv
      YhqXyxln8QGIzgzznR+8RRgruXYd7R29RMKzjAyPMDntx+l0xLWbGR/kr7/+XSzyNMfOXqGy
      Zgu+4T6m/CFGBvsYG/eB1ojZqI9p5xvq4R++8xa5FoEffXCW5oYtDPV14Z8NMzDQx/i4D43B
      gjHBiPJHv/+fGZmYobwwj77hcbRKhMHRSUL+KUbHp3A67QmuDq6e+5DT1/qprSii4/YtglGZ
      4f65Pop6EyaDLmG7223XOH76AnVVZbTfukVUUhjs62Pc50NnsmLQJR711vRY+NGZ88hhLVJo
      knOnTzE27cebX4QUjTKpWNm1JT++kQKPPfMxTp06S2OJlTMfncAXiFJYkI8kSUSMOdQXO+Pb
      yVF8k5NI7bfJt0Q4deIo01EdhbkuJFnB4PRSkmOJbydqmZqVeeSRRsYGbnLyw6PMinYKnUYk
      QcRdUITbpI9vFw2jtdqRgiEGO65z/INTRIx5FFoFJI2O4soyDAn+Jhqzi8pCN2PjPrrbhjh2
      qhXB7MFjElA0WorLSlh8i1jdBVQUeJicmsFm0RGKyrReusDw0DgWlwNZVtBZh3jx6YMx7Vz5
      pRR57JRtqePyzX5A5tKl84wNj2Hx5CFJErq+CV58YndcP8uLcjh59gomLTgNcGxSoNgMA8Eo
      Fq2G8rLiBFcHWxqa6D9xHaQwF661ofhH0RpcyESx9Axx5MmDCdv5xwbRmN0Q8dPa3kV4+KeY
      3YXIcpSekRmePLAjYbs1LYAXX/0kt2/1IGqNlFZVU6E14HK7kSQJq9uatN34nSEamrch6q2U
      V9eyxWDC5XYhSRJOuzFxI42evbtbEEwu9GYDVbX16E123A4rkizjMCd+8gCUVddi1okIDg9b
      6hsxWN24rQYkRcGkTTIF0Jipra4hp7QSCzPUNzZjcOSSY9IgIZB84iCg1TvY29SINDVEfYOM
      xZWLXS8ik3xns76+njy3lc6BCRxGkaKiEtzeEpwOO7KsgDaR3ObagUh9/RZAoKiwFG9hOQ6n
      E0mSQZ/goQDsPvgsdTv95Oc4GPLNcrjWwNhMhBKDBpTkUzeNzsSW6jIAZqcn2b3nADpRi6xI
      aHSJ+wgKEcFAbUUhADOTPvYdOIxOp0eWJXQmW9LvE5Q5WMtLAZVNiCIzMTWD05F4qpQUOcrE
      zCxOe/KbfiHzAggGg0vopYrK+mZtW4FUVJaZNb0GWOv4Q1HeuzmS9rxKj4WGQsf8a18gzPFb
      o2nb1Xpt1HgzG8pVloYqgAVEJBlJTjwg6rVinBl0NixxrD39jYxCjACmg9GM2pl0mjgBXB+c
      4vbITNI2jUUOKjzxC1NFUQhF5YRtNKKATrM5HYNVASzgzdZBPuoYS/jel4/UkmNNZoVYObpG
      /RxLMXq4LfqEApgKRvmDH15P2GZ3uYvXWkqSfmbveICpYCTmmEmnoTI3uSUOYGQ6yJ3pUMwx
      q0FLWSJz8ioRJ4BIOISo1SMKMDsbwGA0oREFgrOzRCUZg9GELplpDwiHw+j1CezeK4wsK7x5
      eXD+dZ7NwN7KnFXs0frl/ZsjXB2YijlW7DLxq4drUrZr7Z3kx9eHY47V5Fn55YOVab9TkhXC
      0bndZJ1GRJvBCDURCPP3J7pijn3+YCVmQ/LnfMw7iqLwxtf/msKdL6CbaKd3zI/NU8Izh1po
      PX2c905d5InDT+NyOwhO+fAWlzI6OIjZlYsYniSitdHXeQP/uI+Ww8/hdZjTdjpTrg1M4rYY
      yHckseMvQoGYeXZtvk0VwDri2uAUX/+oG4CXthfxSFX6306SFQYnY62ZUhobT4wAghP93BoK
      MHjqGPl2HS//zCeYnJgERFoeOUD/VIjh9ktYdu3nVvt1zl+5gRQW0egU7JoQEVsRYsjH7PgE
      +ofscPWN0z3sr/LwXHPBQ/1clc1NzF06ODDML/7KbzB88xzWnBz+5dvfpqJhJ7meHARRQ1FB
      Adqwh8IcC62SltKyfOxWL5GgDzE6y6BfIDe3BF2em6mpAK5ELgBL5FcP12DWb/wADZU5HEYt
      TUVzm2A5luWbUscIoLKxBYD8PfsBqKqqnX9P1BrYs6tl/vXPfuqTy9apRHiTuTAkQRTgN57a
      Mv/aoN2cVo7VRKcR4h5amUaZleZY+EyWi2WLQcvHtxfGHDOkWK/CBrYCCYKQ8XrhHkVOE81F
      joTv6de5gHQaIem1FblSr9Ve3FbIM42xjoeJPXFjeaw2j8dq8zLv5ANi1GnYX+XJqs2GFcBS
      2F3hZneFe7W7kZKGQjvOFI55iUygAGa9lp/bV7ak73SaV9+qt1yorhAPQFSWGZ8Jpz3PpNdg
      M96/aSOSjM+fvp3FoMWSwoSn8uCoAlDZ1Kzvia2KygOyYcbXqCTjD0sZny8AdlPyubTK5mDD
      CKB7PMDfHO3I+HyjTuSrH28C4MbgFLORzMTTWGhHn8a0prJ+WLMC+NOftBNKc1MWuUx8eu/S
      LBsL+dGVIYamMgsI+p1n62IE8GbrAMFIYi/LezxSlUOh0/RAfVRZHtasAMb9obQ3ls24+t2/
      1DvBVDCa8py6ApsqgDWKughW2dTECaDn9g2mZiOEZ2c4efw4I+NTnDt1nA+Ofsh0miedytII
      RiR8/jDTi3zuVZafRe7QEqdPHsNWOkNk9DZ123fT09XJiePHKCirAUEdMJaDE7dGeefaMBUe
      C194rGrZv29sJsR0MEp5kl3jzUTMHT3afZX+Sbh5tRVJVlAEAUWRsTo9NNTVoRXUPbONwHQw
      GheptVmJHQF0Dv7N53+JmZFejA4311ovUVXfjEYKMDo6SkFpJSbVJfmhs7/aw45SF1rNyhSr
      KPdY1Kf/XWIEkFc0Z1K0FM/9/5EDj84d33Nghbu1uTDqNJuiGMVaRJ3Uq2xqVt+QngS3xZB2
      I2wtuDJsK3Gm3a9wbWB34vXOmhXArz2ZOuPAw6SpyEGJO7MA/sWBMS9sLUxypsp6YMO4Q0cl
      mUAWznAIYDeu/giisrpsGAGoqCwFdRGssqlZs2uAlWRsJkT7cPJ8m/cw6ER2lLpWoEcqK8WG
      E8C714YYmUq9y/lccz5uy/08nwOTQd642J/2s51mXZwA/uTHbWl9pF7fVUJtvprleS2y4QRw
      +46frlF/ynMer82Fh7QRGghF8YdSCyAqJzaTfuN0z1x5ogQsNYODSnaseQH8v9M9tA1Pxxx7
      tNrD4fr1X8j5av8k0SQCSEU4KvOHb8Vnev7CY1UpE4iFohLnun0xx2ryrOTa0udPOt05FtPX
      +nw7rmXM2LZSxAjgTvcN3vrwPFZXHq88e4hvf+f7vPLay3zv298gLGvZf2A/H773HqLJxauv
      vYRxBXbvg1EpzrwZllJvPG18lIQm32SjyT1mwxLfvzgQc+z1XSUZCeCty0MxYaOu/fqMBPD3
      J7roHpsbkStzrXwmw5HtL9+/zcj0XJReY6E9Zfr2hfzJu23zqdxbylxp92liBBCYHMM3HWR4
      tJ2+aicjI8Ncah9gaGSUXJeTibCe3fUVhPMaVuTmV1n/BCP3H2DBDOOuF7dLVtgjEYEF7cIZ
      tIubAhlMZjTRMCdab9GyayftrWdwe4uxaaPoVYctlQ1GjABKGvfymcptaHVzBTL0eh07d84N
      J1qNSFQGTdF+EFQhbDa8DmOMb5ZRl9kWUnORYz4eOjeLCjs7Sp3zsdaFzsxzvO4ud837ZpXl
      pHdviRGAqNFitcaWvVlY7WU1QgEO1+axuzw2X6dnDZQqWk20oshnH4mfS6ebkztMOv7ji40x
      x3TazGIQvrjESLX91dklq73HUpPqPt2Qn/6kBax5K1DpGqon9bD5uX1lSypQLooCjYWJMz2n
      QhAENaBpEWteANnybGN+Wqc496IRxKTTZJS2xJ4gDcsndpUQkVLfxCXuxJ9dX5BlFXSVh47q
      DKeyqVGd4VQ2NaoAVDY1qgBUNjUbbhG8FLpG/fz0xkja86xGLa/vur8l/89ne7nUO5HRd/yH
      jzXEZH7oHQ+QbvGVZzOo2SKWmQ0nAEVR6BkPJH3fZdbHBdNPh6JxDneJWFybS5KVJTmzAfzV
      B7fTtv3CY5VUeKwpz1F5MDaeAID/9f7tpO8/31zAoS25K9ehZWBsJkRr32Tc8RqvleI0FR9V
      YlkXAjjadgfp7tPSbtLSUra2KzkuN3emQ7x9dSjuuF5bmFYAM6EoYzNzAUNaUUhbInWjEyOA
      6Ts9fOsHP0XQW3j9409xZyJA16VTGLz52OxerEY9ZqOIojHRfuMKdbVbCMxGKCktIYOysUvm
      x9eG512gS93mTS+AB6FtaJpvne0F5qaDv/NcXUbtBidm+Z8/bQfg0Zpcnm8uyKjd7Tsz/O8P
      5yr3PN2QzxN1mbk4dI76+cn1YQBeaynOOLfSzaEpPmwfBeDTe0sx61M/42Pe7etsZ+djz1Od
      Z6Kr/Qpv/vB9aupriHbdRq8dwC86KTQHOd82QHmBi862awgaDYdf+ixFruyKUqusLxTg3pIl
      q71TZUG7tMv++8yEotwamYvTzsSt+R6Ts5H5dlIG67MYAVQ17eRf3niLm0YHeZYoBcWFOJ05
      5ORY6OzsZ8e2Rq599C4FBQXk5FjJ8eSSazOgW6Gkriqrh14rUn7XL8udRSSYUaeZb+c0Zd7O
      or/fTq/J3FpvM+rm22kymJbECEBvdvHJT3864Ynbts/9v6Hi5zPuzMPiFw6Uzz9FMnXDVUnM
      jlIn20udWbfzWA188fHsPUKLXKYltavMtfLFx7O3gNUX2LPysVoXi+DKXNUUuJASt5nPH6yM
      O+6xpn/CCoKAOl7fZ10IIBsE4POH4m+Oe+RsgEBui0FLVZ76UHgYbDwBCAJVWY4YXpuBpzLI
      MrF4+pVnN1CZm1m8gijEPnf/yyvNmXdQZdlQ3aFVNjXqilJlU6MKQGVTowpAZVOz4RbBS6V7
      zJ82AVOFx4JuwabMRCDMN073pP3srcVODizKjnBrZJpUG5UCUONVE+ouN7FlUqUw7/34XbTO
      Ig7u3Z7UXjw9PY3NtrF+nO+e72M4TVbp3362LmYXNCopdI8ld72+R0kCh7OvHe9K6Q4tAH/w
      2ta44ydvj3KhJ3kMwsEaD83F8RtdEUmmM0nSYIdJlzKn6EYmRgAdrR9hKGwkzxDm8umjXLjR
      Q311BbaCEgY7rtN9qxeLt5COy6fYsnUPJXk2qrbtx21eewNJz3iA4KLsEKU55nUfYDIRiKSM
      d0iWqj0Qlvi7Y50J39td7kqbezMqyTGePBpRiDPtLmZsJsTYTDjmWI5VT84ayusUc+daHU66
      L1zjjg7kkA+vQ0dXTy/h3gFkKYy7sJpoaIzikhIq8kz85FI3ux45tFp9T8mbrQNxT+cvPVGd
      cTE8lVj+65vXY5Ljfm5/eVqXgws9E/z4rkfnPY40ZuYROh2MMDAxC4DXbsSZoTeoLCtIdy37
      WlFASCPSGAF4K5p52pyDYLDhMGsZGPFRUphH38AQFrMJUdSjKFGQItwZ6mJbY/OKbKuPTAX5
      57O9eO1GfmZXZlmCVdY3XWMBvv5RNwAvbS/ikaqcjNqd7R7nu+fnip387gv12NIUQoxdAwAB
      vx9R0eNx2SkrmXtalpbE33TuXC+1d/8tyzIzE+OIZgfWZai8GIrK9PpmH/rnqqjECGDo1gXO
      tk9h1fWhCRVx6lI7O5q2cOnKdarq6um5fh1bQRl2YZppwUGBReZm/wSTPZcxe6qpbarlRusl
      tu5s4UbrBez5FTy6O34hly1eu5EvPVEdV6NXZeOSbzfyXPNcns9Mktzeo8Rtnm9n0KZf78UI
      IDg7iyvXi1sb4sMTp6mrLOL9D05QvW0HVy6cQavLZabjKqe6OrDkVtBlUtixtZmbPhd2k5Yz
      H52gtr6Jox+8h8NdRH/ndXgIAtBrxazn7mU5FkyLFryLX6tkzucPVSIv8JrJsaRfyHqseuoW
      1UbLycBjFSDXZuAxW/YJcgscJgoc6dNc3iNGAOVNexk+/iFRRwFPHX6Mc1c6ePbIYTDayLPq
      0ehsSNEA25vqGIsYKHXpaO+fZNeuXQyN+nlq21auXLrEkSPPMhuMEg2lr7y4XGQasrdZMGrF
      pH+TfEd6E2gmuVMXs73UxfY1XlUzRgCCqGXfwSfmXz+TXzr/7/ycxBdSVDH3/9K7HsgFzzzz
      kLu4MlTmWmMqRyZiceSbIIAhg2mZNkHEXF2BPWXIXjLjwv5qD1uLk2eGdiSxlhh0mnWfDWM5
      UL1BVTY16qpSZVOjCkBlU7P2fBhWmKgsZ5V2QysK6DMwr6msDza9AG4MTvNPd3ccM6GlzMUn
      7u5Gv3N1KOPSn881F8R4kqqsDTa9AB6Es90+pmYjGZ37TGM+C7chJFlJKR6dRlQ3/laAGAGE
      Zsb4zhtvEZIEPvnpTyEHA+jwc+LyCPu2V3L0w5M88fhBFEGDIkeRJAWzxYxvsJO3fnoCdFY+
      8cpzhEMRpu4MIjrysOlFTGYL4nLmTlzEt8700D+R2HXiUE0uLeWrn1qx3xfgL1Ik8X2qwZtR
      oL7KgxEjgM5rl6jdc5Cbx3/C6aPv0jcygc1iIBIR+T+tp1EQuHHxD5k1leA1+AlF4RO/8CUu
      XzzPI48e4ugH79N+/Qrf+d4PqSz0orHZuHD2PM+88lmeemRpWRAkWWF2gVuzKJI23+O4P5zU
      t9+fpoDeeuH9myNMBO6PPnqNwPNbC9O284eiLDR8mw2atG7NG5mYO6lsSyPf+t6PkGQFs9VO
      uGcQe2EegYCCThhG0Zuxuz3ovaVYxFlybXokWaa+oYm3j36Aogh03GrH6XJRVFrK2EyA3Fwv
      +XlLf+IOTs7yZz+9Nf+61G3mV56oXvoVbxAu90/Sv8BB0KTTZCSAP3/vFuP++z76X3muLiNX
      4+9f7J/Puem1G/m5ffF1ipMRCEeRZWVZHCUX0zXq52KvD4Bd5e602bJjBGByevnc5z43/3rP
      3v0L3n0y+afYavn5z9Ymf19l3TMxG2Fkem5UzXYx/w8nu+kZ8/P7r2bnF/b3J7rIsej52Lb0
      wr7HyHSQjzrGAajwpK+XEHMlM2P9/N+v/yPf+sG7KRtFAhO0dfQxNj6ntBtXr3Lx7HkSLQcV
      KczV620ZX4DKxqM618rWBGGa6ci1GeKq8jxsYiPCcoqoKXSQ07ibv/zTP2X77l2cOXuBxtoy
      OnuHqWto4Ny5izz7zCGutF7nRvcov/Obv8zVm7fQBMa4cOUSZUVFeMtr6O9qo6OtjUePvEzb
      1Vbq6rewFOu5RhCwLShQbVYrnT8QVoOWiHR/3yNdxNQ9KjwWdOLc8zKb7NAwt6BfCktxaGwu
      dlLhmcvWly4YBpKZQRWZvOJqJod7mZ0ZZ2wyl0f376Gtz4dWmuH6jdtozG5ynQEERSYqgwYB
      i1HL+MQEXSePY7I6sBk0tF69iUGWs8gMH0uB08TvvtCwxNYbl8/sKyO6oEJ9pka2pa6fDtas
      D0c6k06Tldt7nACa9x5GozeR98xjaASZ3YeeRqvVYjQaKC5XCGyrxeZwIEkKoeAsgkZPvtvK
      9l1PEIlEcTnt+HwTGE0mwrMBjGYTH52+sKIbDo/V5rEzmNg+v1Zigs0GLdtLkk8L8tNkaci0
      YopKauLuS6N5LrGszjo3jJgW5H7VAxbT/R/GYp7zEX/scOwC2eO5mwPHMtf48OMHH1qHMyGb
      /PCrhcdq4FN7StOfqLKsbPqdYJ1GwGHKfKG1cA3yQnNBxn5EqhvE2kSNB1DZ1KiPJZVNzaaf
      Ai2VU51j9GSQFvEeLrN+yeZAleVDFQDQ5wtw4tZY2vMsBg0v3HU36Br1p8zRuZhCp0kVwBok
      VgCKwsz0JFG0OO1z1iBFjhIIRrGYDfhnAlis8SWBFEVh0jeOxmDGZsk+e8Bq4wtEON/jS3ue
      06ybF8CDEpVkJlO4UttNOnXhvALECGB8oJ1//eASOiSee/EFrl68RE11ASdbhynLEblwvYvH
      9zQR1jkRQuOMT0fYtWsnnZc/4mLnOHI0yuP7d9DePYzgH0H0lCMEJqnf3oLDvHIJUS/3TXBt
      cCr+YkWR11qKV6wfqRiYmE3pDv1vD1UmrY55qXeCG0Px11fsMselYVdJTawAhgepbGzm+vtv
      8vabP6CkupZ3fvwhBp2Jy9NW5JCfb37rm+hyKsizKDgsBkbrtjI8PERjQzPvvPl9uvuLaT1/
      kvwcL1r/dc5dusGEZOTZgztX7KIGJ4MJpyd6zdoRwIPQPzGb8PrCUTmlAKZmI/z5e7dijm0t
      dmQ0qn33fB+RBSbfg1tyl5QraK0RI4DKrXvpePttcisb2LuzkWPHP2LfgUeZnokw0HENsbyG
      hpoSoiYvZk0Eu0mLSSeya//jvPvj96htbkEnz+ItLKOuppzRqQDbGwWaapOXLc2EcX+Id67O
      ZRn+xK6SjCqAq8QjK0rctGs2w5DOy32TMeduLXFmJICjbXc4dmsUgMe25C77CBWMSLT2TWDU
      aTJywIsRgKg18swLL82//sTr93cqd2ytT/ExLl58+dX752bR4UzwhyQu9s498V5rKUajlnpe
      N4Si0nzYaCiaXTBSx50ZZiMSjYXJE4EtZiYU5bvn+8m1GrIXQDgwxdtvfg975U6Ms2PY3DmM
      +vxUFrvp7hthS10d1y+3Ul1TQXtbJ12D43z2Z1/m3XfeZWa4A1f1bnRymLqaMto6BzBpZUJR
      kS1VJfjGRxkJ6Ni/I/u4gRyrnk/tngtEV5/+6wuzXjtfwT5dJN9ikq2BUmEzaPnU7hIMGTrE
      xfRIb7aT73GQU1zA0bcusb3JyPXzRxkeKMGb6+HkmQuMD/Wi14uMTgXQajQIUhjfdBCnzc5E
      fzs3bnUzPFCKrbiR9ssX2NNcxTe+/a+8+srz9LdfhSUIwKzXrvkck+sBvVZkb0VsdF5ZTmaF
      vl9rKY4p6VSU4fz/QLVnRRfmBp0mq3slTpK5heVYTQa2b9+GGPHhLammqLiI0uIiBkcnUAI+
      rI4cahwF9Pd0IGt0mLQi5VV12Fy5oDWztaEKnbOYPKPClvoyfnquA5sYxu1eGZfaYpcp7oeG
      xDk61yPbS5wJb8B0Pk1mvZZXdi7NCNBUlPk0ZD3xUHyB7gwN4fLmo01wf02MDjGrGLBqJQTT
      8hTQeFAu90/OVyNJhdOs4yvPza2FvnmmJ+uNsF97smb+tSQrBMKJ63kBmPQatKK6D7DcPJSd
      4Nz8/KTvOT35ZB8Mt7KUukx8em9612T9Q9yY0ohCRhFLKsuL6grBXErxrVkGmFTnWTFmkSLR
      scyxrSpLQ3WHVtnUqJNMlU2NKgCVTY26BrjL5GwEfyi5VUYjCngXBaqPzYRistYlY19lDkea
      khsKVFYPVQB3ef/mCCdvJ48JcJp0fOX5WHcQRcnMl2ZhHp57HGu/E1dFfSFP1ObxWG18lcR3
      rw1x/K5vTSKeay5gb0VmRaVVNqgAZEXhn07G2/Vbylw0rpENnaisEIwkD6iPJCmgF5VSt5Ok
      5DaNP/1JW0xe0Hv85tO1KTfRrg9OcaZzPOZYjlWf1os0FJUYnYn9vlyrfk0VGIkRwNSdAQIa
      O/luKxMjfQz7RayCH0dBFYPd7UyMDjI8PkPj9t2MDvbSsnvXiiwi+nwBOkf9ADQWOtJmJlMU
      EsYDlHnWRk6g1SIUkROKJ50hcNwfjvt7FrvSu0L0+Wb5m6MdMcf+3eNVGblfjM6EuH73O6tz
      rRRk6Hrxx+/cnHe+y7UZ+NXDNSnPj7l/fYNd9N6ZAhROnz7HxYvnMAghTp27wJXrt2neuh1/
      KIJNmeD82bPcGsh8J/RB6Ljj583WQd5sHeTOdOK05yobi8HJ4Pxv3pVF7HUoKsf8l464B/hQ
      fy/9fT3c6uhior+TKUMxt0+9RUVTC3qDAa1Ox8ULrdicNi6cPZPdVamorDFipkC55XUURjqZ
      mg7wic/+Ei6TwHhA5qVP/hI5BXkIisz+vbtRJImnCgoYGBxckU42FtrJtc2FVPuYD4sAAA3O
      SURBVBZlMPSqrH/Kcsx8bn85kD5N5EIKHEbsd5MpZ5I+MkYAZrublpZYL8o8I8DdVIOChgLv
      /cwGhYUPJ0A8HTlWAznWzGOKBRLPUVXfm6VR5DTFVZnPJJtegd3IL9y9ie9x70GWDrtRh70g
      +9/rFw9UZHX+hrQCiaKQdvGzGfmNp7eQaL2rS+MmXu6xUO7JLG5gIWaDlro1nqdV9QW6y/BU
      kIlAvInwHlqNSNWiCKWJQJivn+pJ+9nbih08uii9uCQryCn+9KIgJIx+W2o7lcSoAlDZ1Ki+
      QCqbGlUAKpsaVQAqm5oNaQVaKa4OTDI8GUx7ntWoZc8CB7VQRGIgg3Yusy6jGr4qS0cVwANw
      uW9yPmFXKgqdxhgBDE+H+KsPkucFvcfTDV6erFczSi8nqgAW8D/ebWNkKvGT+bWWYnaVL73i
      /cPi5tAUXzvelfT9X3+qhnyHulueKRtWAN+/2M/Qopv55R1F5NmSb6sripK0nOtasRUrLL0v
      F3p8fPNMb8yxHIueLz9bl7Ld2EyI75zvizm2tdjJvsrUcQc+f5hz3bFp53eVu9JO60amgrT2
      TcYce6QqB4sh/e3aM+afT+Cl04hpq4LGfOLw7cuc7w9hCk9w4Mknk6rDN3CLXr8JaawTyehi
      5/bGuNV0pgWYl4v+iVm6F3kRhlL40W8GEu34ZCKmcFSm444/5lgmmeHGA+G4oJ8arzW9AKZD
      ce22FjsyEsA/neqJcYf+rWdSZyKM+cSgf5rL5y5hMRnJyz/DN775Ni1bKxmbmqWqYQdXjv+I
      psOvc2hrCe9974cIGh1idISuq6cY8fkpLivlo5On+cwXf5PGsoebBe6ty4M0FjkoXSN1flU2
      BnFm0MeePMxAdxetly7jtBoIRmREUWC07zZB0URgegZRa8Qu+imsakIQBPRGJ4cObGc2GEZv
      smDMolJ3puwodc0nWVVReVjEjABlW/dTBuzd+nvzxy6cOEr17kPYFjnmPf3KZ+f+0Xzf+655
      GWtg5Dsyd4lVecgIsHhGm8kUVyC+XYZfF98uw885VOOZD4SxZJCNOu0ZO/Yfyuyb1xgvby8i
      uCgiKC9DV9yNyhavjS88VhVzLJ0nKECBw8QfvLo16++rzLUuqV1jkWNJ7YA4p8N0bFgrUKYx
      pAv55O7ShBkcYC4IfC2QazXwTGPyvQGrIbkPvdWoxWrcsD/5klD/GgvINtosU9djcdF47jTp
      ONKYPk9QRQIf/ByrgcN16ubYw0J1h1bZ1KjOcCqbGlUAKpsadQ3wAEQkOeHuaiJ0GmHVd8dV
      4lEF8AD8t7fvZyFLx1c/3rgsG4QqD4YqgFXi+xf76RlPnvGsyGXilR3xBe1O3BrlfI8vQYs5
      qnKtPNdcEHNsJhTla8c7U/bn6YZ8avNtaXq98VAFsEqMzoTp880mfd+gTbw8m5yNpGyXyNFM
      kpWUbYCUBfv+5ujthDlFX9xWmDJdSveYn0A4Nnu2xaBdNn+uiCQjL0oqrNWIKU3VMQKQpSjB
      UBid3oAuQQZfKRpFEDWIGzjtRigi8e4CT8Qip4kdm7xG8cBEMGEa+GCa1PBvXxmiYzTWi7Qm
      z8ovH6x8qP27x3fP98VV7vz0nlK2liQv0xgjgN6rp/jh2S5EUeTlp/cTxEjrmWPs2LWX0fFJ
      guPdmAoaKS9yM+ObxDfhw2y1otGb0USmCIkWqkpXJltcJpy4PcrZrnG0osivPFGdUZuwJHOs
      /X7+/e0lzk0vgI1M3BQoHApRV1fL1/72LwkYCihy6ykfGeDYh0fxFldgmLiILFXRdu4SE0EJ
      SQ5hNVupLHJz+noX//5LX1iN60jI1GyEgYkg2g08Yqk8GDECMNlzeOHjL1Nd6MIkTaBYC9EH
      79A7MIzHW4zX6yXH6eDipVaKSoopNTsRhAhKOMjo8CBlpeUoZOy4t+x47UYaCuxoNkiFeJWH
      T4wA8srruFeU59BTLyRt1NjUvJx9emjsKHVlPX0x67UxFd1NetV0uV7Qa0RMi0zN6Xy1VCvQ
      IjSiQOESPEk3Ms825c/H2S4kL03a8tdaigkvckk36JbP+eCVncW8sjPedJwKVQCrRHmOGX2K
      qZk3SQBQfaE9ZWpydwK3bZ1GoKkwdZZmZ4pK9nvTBL8nI5uU9quFKoAHwKzTEE0SP7CYxbf6
      4SXm+ynPsVCeQY2thZj1Wj7zSPmSvm+jo7pDq2xqVG9QlU2NOgVaIsGIlDR8MhEaQcCcQV4b
      lZVl0/8isxGJv3jvVsbnNxbaebapgO9d7I/bdk9FodMUY15VWRtsegEoipJV7eHpYHKnMZX1
      x6YXwGryxoX+pPW+DtXk4tnkaVxWgg0pgO4xP/98tjfueGWulVez3ChZTs52jSfcYII5J7xk
      Aui4M8N3FyWrBThc52VnWfKdb1lR4kYwk06DPonr9WYgRgCKonDzygXMnhKmh7sZnwmxc/c+
      Zu5009bZT0llLeVFeXEf0n3rOj2Do9Q27SDPZY17/0GJyjL+uz+c3aRLG1oYjsqMzsRXfPRY
      M4veWusku75ELssLmZqN8Idv3Yg59vqukpSiWdxeURTMBi06zcYQTawA5Fne/Nd32H/kea4c
      /xBXyRa0WpEbF0/RMQE3uobZXuFmPGogx2ZCi0LTzhYunDxJwOjA6+3j6E+us62pmta2PowE
      UUQjDbXlaByFlOU5ltTJwYkgf353ofqfX27KKJuZysPnv797k2BE5nOPlFOfZmd5Id841cPA
      xCy/dSR1puaFzIYl/uyn7Zj1Gr6URc1nnz/M337YgduizyjuIFbGMuzctZ0zZ85hc3k5uH8v
      eo2AIIrU1DURDUzgm5rh+tWrTA51caVrEK0AWr2FA4ceZaC9lbbbt7h65SoFVXVM+cPsqi/k
      m2/8GJc9+0LLKhsDSVGIytmlppcVhTF/mPEUtZuTfdeYP8xEILPRPmYEELQG3C4nzx5pQq9E
      8eZ5AKhpauHG7V6efPoI4clhvGW1aKa60Zvn8kxu27OXAq+X/MePoHNcpbqqFI3ZRaFlH3an
      gcLiYuwPkJKvwGHky3efHqpv/+rx609uQVYUbMbkfkOJ+My+sqy/y6TX8OUjtXFZ9dLhMuv5
      8pHajIuFxwpA0LBt1764kwpKqykovRdRVQIoTE16qbfNTWlKKsrnPszi4MCj++fbeRwWggE/
      r7/6sawuIq6TGnFdOFatFDqNmNB5LVkc8T3Mei0/0xJrBCjLyTw+12VZufyooiAs6TfXiNm1
      W+JjWcDuSB5nuRCjeeWnPuUeC7+doOzPWls77Ch1JTWD2lKMmFV5Vr7yXH3W36fXimuiztla
      YkOaQXUaEfcKPq2Wymsta8cku1nZkALIBgEhK7FkUqdKZf2gukMvka5RP+P+zC0UZr2GuoLM
      TYcqK4MqAJVNzcbYzlNRWSKqAFQ2NeqK7i6hiMRUMPnuoUGnwZ5gAygqy/hSrAVMusR1ub51
      phcpiSMczFVJ/NSe0jS9VnlQVAHcpW14mq+f6kn6/s5SJ6/vjr8hff4If/xOW9J2B6o9vLgt
      Pl1ka99EUk9QmAuiTySAWyMzfPN08n5+/lBl0nQlYzMhpARLvhyLIeXO6eRshFA03tEu12pY
      9zUPNqwAescD9E/cz4gsCrCnYmnpPdYSUVlmOpQ8KCfZxhrA3x3rZCzBaPWV5+oSZpW+x/cv
      9nN1YCru+H96qQm9NrkAFEXhVOd4zLHGQntaV4pzXePcHJ6OOba73E2NN3X69tsjM5zqHIs5
      dqDaQ1mKLBqLvEGj/PCN72Iv3sLMQBszkpZnnn+JvqvHGSeHmZ7LNDz6PGV5C815EteuttPQ
      WMfb3/8W436ZHTu2IkXCaJ3F1JZ4AJmBgWEKC2Pz1mfKH/3oxnyCpf1VORmlFLk2MMV7N0fm
      X+s0woYQwHrjjQv9Ma8LHMa0AuifmKW1bzLmWGWulXQ+oeP+cFy7pkIHpPjZF40AEgP9A9hL
      6ujr7SenrAGrScP4yACXh/sIdF9lMqrD37KV21du0NXRhaOwCLfJTENjHQNDQxgNJtrabqLT
      6uDOFMfeuYXT4+bKxZt8+Su/taTA8JlglPDdAPRQNDuvQhWVVMRYgZRoBHeelyutrbjzy3j1
      40fQAAga9JEp3MXV6DRw/IOjTIdCVNTtwKKJEgrNxdRaHB4+9tqnaS73EJFkIkE/aPVI6CjM
      c677+aLKxiPWG1Rn4fkXP46o1YNy/0m778mPs+fu1FIURcLhMFqtFkEQURac99LLr2EwGDA3
      7KOwTkYUtURCQfRGE5FwcMl5IfdWuucXjNl4L6qsPt5FC/K1Fkm2yB1awJTAe1Onj3Uv1ekS
      z+EMhrnzNFod93L06rRzn6c1Lf3GfWFr9kU3nqjL49Eaz/xrdfABj82Q8AZM5ztfl584H2k6
      l3tBEPjNp7dk1UeAXeVuKnJjQ2uLnKkT8QLsKHXSsChSLZ2L+Ia1Aum1YlbB3kadhvwkCWkB
      HEmsJCadhv1VyVdZFSlqaC0Fl1mf8vvM+uQ/6S8eqFjSd+6uWFkX6kKnaUkZurUaEW2WI4zq
      C7RKXBuYTFtjuLFoaTHUKpmjCkBlU7O2ViQqKiuMKgCVTY0qAJVNzYa1Aq0Es+EoZ7p8ac8r
      cpmoyn34GfNUHhxVAHeRZIWBBc5zi3Fb9HHxwP6QxA8vD6b97EerPXEC+IeTXdwanknaRhDg
      915qijs+G5EYTZHNOt9uRLeJc31my/8HE2qCwwraPVsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Returning Home.trips.est.pic' width='192'>
      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
      IdHZ+B+5aF8gseecAwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.trips.est' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29V5Bk53Xn+bs3vbeVlVneV3W1RVtYgqKnqJE4NBKpkUKj0WheNmYmJnZn
      Zh/xtBG7+7IxEzEhPax2dqWlSIpYEiQEkTAEuuHbd3nvK6syK73Pa/eh0U0U0WhUZjVs3t9L
      VXZlnj7nu/d/75ffPed8gq7rOgYGLYr4cTtgYPBxYv64HTB4sOi6jq7rCIIAcPfnb7/n3X+7
      8xkAQRR57yfe9R5BQLyHzU8rhgA+Y5STq/zV3z3Dk1/9OtVMmu6ONqwON4ouYjfrlMpVqnur
      CLHjWOp5BoaGkIt7/M3f/HfskTG+/oWHEMwuRF1B1EHVZFTBgoccf/2DF3A67Hzzn/8zPDYT
      VUmhVKlgRke0uQl7bWwlc/R2hFle22ZosI+1tQ36BgawmD6Zkw1DAJ8xHIEosZCLbCZNMRFn
      8uYNZF3D6fHis2j4vE52czLWlR2uXbvJN77/l3zh7ChPnD+NuWOUX/3yZVAUzD4PbqBazXPh
      K9/EI9y+C7R3dvHWpYt0R7xsJDN4Yv2sTk9hs+gIJittXguTEx5W19Y4OhDj+Ytv8o0//Nd8
      8cKRj3to7okhgM8YlXwG3ezE7XTiaG8nGI5iMouASnxtkVxF5+joECa7A8Fk5/hwNwBufxCL
      20vEb0e2hWh3yCzulOnrH6U3FqaeqfHFr/4uZ44N8PbLv2R2NUH/QD9DRwaZv/oW4egI/e1O
      ZlcTPHx+FKmSp62rn/MXBI6P9ny8g3IfBGMVqHWYnZvjyNjYgzWqycwtbjA2Ovhg7X5EGAIw
      aGk+md9MDAw+IgwBGLQ0hgAMWhpDAAYtjSEAg5bGEIBBS2MIwKClMQRg0NIYAjD4VKNIFW7e
      uEVd0X7rLzrx7fjdV9vx7Xt+3sgFMvhUs3jzDV6/FScYjTJ1+Q06Rk4gpdao24JolRLJrSUS
      VQvF9Dbf+fZ32Fic4urMGifHBpheTXx67wC6riFJMvVaFU1TkWRl398lSeJ+WR66rlMpl1E1
      bd9nJEmikdyQeq1KqXTbjiRJjYZxXyrlEqVSCVV7cNkqmqpQKpfR3hmbZnyW6nXqknz3tSxJ
      vN9QNzKeuq5RLpfveTzfj3DnIFGnwusXf43kaufGW6+zsLGDy6KTSiYpVCRmp2/eff9bV27Q
      HTDx6htX6Bocw/TUU089dUD/PlmoVX72ixf59U//HxSzg/W9MoXkFk6Pm/mZGX758mu0+d3Y
      3D7M4nsLOK5eep5rU3Ns7hVxmSR2MiXefOVllucWCHW3s7y8hddpZmFhCVUws7G8gMMbxGYx
      7bPz7A//juX4Fsvru+wlk6i1ErvpAjZRZnkzSTgYQKoWmZyew+WwUahKpOJbvPDiywyOjGK+
      T578X//X/514Mks40s7C/CLBoI+pySm8gSDz05OYnR5W56e58fbrVK1hIgHXfYdM1zWe+fEP
      WNvYYGU9zo3r15mcnsIsmnC77UzPLmEzweLqFm2R8D0LY0Dlv//1f2M7VyMWcrK0tsOtyy+T
      r4sE/B7mpqewuX0kNpbJVzUuvvQCo+PjB7rSbs5e5m+f/iV+p4nnX7uGPxBEKqbYTOSRK0VW
      19bxh9r2H09NJpGr8sTnv0A9tcmxc4/S7rGgWr30dEYRNZn2rgEG+noIBYO0h/1spes8cvYU
      wXDw050M9/Tf/TV10cPszCK/8+RpVEeYvfVF8mURr61Mqubg3/2bP71nVdSPf/j3/MF3vksu
      neKf/uk5rJqG6gjgM0OunGBxJcHQQD/dXVFWN+PMLyzz8JNf51tfe3yfnX/8h6f5wrd+l5/9
      /U+xuJzkE2lsNpFyJctmssK//5/+I7deeQaLJ8Dm5g4dQ8dIri6TL+b5i3/9r+4rgL/6L/8b
      vcOn6Ym5ufjWBMPdYXR3B5ZqgqI5RC65Ti1fJuqF4d/5Pkc6PPcdL11V+H9/9BO+950/4Ec/
      fppCVcJpAZ/LQq5YY2llg2PjR/D3HuOrj51438qw66+/xNszcfxugcGhMTaXZ3C5XOQqCr5I
      jOTaKoLNCVIZm8vLd//w25juYeu3qeT3ePonT9PZP8TKbhGLXgephF2AmmClryeM5OzjyxfG
      D2DtN9SqFWRFxel0Yfqt8f5UfwcYGRnDFjuKx+3m9KnT/PLFi5w4fY5iWUVQShwzQ6Gu4rO/
      N8zPP3aOnz39E/rHTtHfGSEr24kF3IjAoKcPbzhFzK3y5vVp+o+fw+dyc/rEe1OJgyEXP3/6
      F5w4f4FCNk1XtAubSQYROtNV/E4rY+PHePXKBA8/+hhXL18m1DGAv7hDTdFw30cA0fZ2SqUs
      mjlGyOehe2ic61evceL0GfZu3eDoiTPIxRJRn0Aql4IPEIBgMnFiqJOf/PTnnHviiyxPvIXV
      H6U3ZKcsC7j9UY4OdePu6H+fqz+gq2TyJTo7OxiIOplZ26G3b5DO9jbSFZX5qVucevgxdpcm
      ETyj+Oz3LrG8F+VCDrPDR7itHU+kD6WUQq/m2CmCv5pmZ6/EE1/oPqC13/D0j/4WXyCI5uhg
      vMeHN9JDLbuD7gh8uu8AHzaFzC6Xr89w7tHH8TmtH7c7Lc3a8jJdAwOYm6hH/tv/87+RzZc4
      +8TnefbHT9M1egy3TWD86HFDAAaffd56+y2ODfVwfWGbYmKdrtGH2FudQnO1GwIwaG0+tcug
      BgYPAkMABi2NIQCDlsYQgEFLYwjAoKUxBGDQ0hgCMGhpDAEYtDRmuJ3gpCgHSz81MPgsYdwB
      DFoaIxXCoKUx7gAGLY0hAIOWxhCAQUtjCMCgpdlfK6jrPPujv6HrzO9iL61xdWaZ9t4jfPnx
      h3j1+ed4a2KOr37jW3R3hFDrNZxeL9VSGbPNiajVUUUr87OTWDSdoYfO4rVZPhSnX33lRXqG
      j5LaXqOmmnn0kXNsrCxwdWKeo0M9JHIVwl4b6WyZ848/jt30/lVE5VyKl9+eYKw7SLZUo3v4
      BHp2g9VUkaA/QCa+jNnfjVBOoLq7ePjkcIPeqrxx6VWwu7GjUlZFrFoVrG7Onj3NfVy7S24v
      zuXJZb7yhSeYm7hOvlzD4by9D1ggfLtssqP/OH1R3/va0JQ6P3/ml3zpq08wMTFLKNrHYMzN
      61cmCLd3ErbJLKfrqKUMrkAbp08c/eDI5DqzUzfZKQp8+fFTXLlyA1mwcHKkizduLhGw6ygm
      B+fPnuYefQnukoqvM7G8S9RnIZWrcP7RR1mbuUm+XMPu8VHN7mFy+NCRaO8cpTfmv2+cv3jm
      l3ztn3+Di7/4Oee//i08QoWrV25g8/iol4qIVgdSOYfo8O0XgFzNML+ZYbt2Cb9N4/t//C+o
      lMuAyKOf/xKpms76jYsUKw+xPvk2miNAdieDI+DFVt3D2nkMUz1FdjtO++jxD0kAGlaLjc3N
      LR46MsyNuQ0AQm4LA2OnGBtqZ+3FV8iIMNBmJVXS6fK9/+jbXD4CHgeiKCIoVbZ2M3Q5REQ0
      0vkKmJ2cPTnO5TcynD4+1IS7GqVyBUE1cerMONdn1hBFgcTuFnXlNM4DDJHL34bbvg6AKIpo
      tTyrmRJWQSK1keAPvnaaq1e27ysAQTQTi4SxuIMMdITYKlYopQqUVTO2XJK15B4ObwCrKLK1
      uXUgAZgsNgRN58yZh0C0MjrUw/TqLm9evoGs6+zmJTyBAKrOfQXga+vAvh4nX67TG3SQqSoI
      ooBWy2PuHEPIJnE6LNSlGhvr8fsKQBDNRCNhEEQ6ohE0wGRxMjLYw8x6mtG+GOvJEuVyGVEz
      758Crc7P8tVv/wlD7S7Gxgb54Q9+wOVbC+9YFvC43fiCHYz0+CnURdxOG8dPn6MnGmJ4bIxi
      Povb62dosJd6Xb6Hew8AXUM0WbBZzfz6pYuEQyHS6TTxRIHhwQ5mZqZwu9z4PQ5WUwptnvtf
      Ys0WCy6nA7vdjqRbiQWsqKIFVVHp6+nE6fEjCho2pwfr/Y7iffx1eby4nDZe/vVFgqEQNruD
      cHsX96jVvycWiwWn00E2k8Zis6FaPPT3RGkLBeiPBbn89hSdA133tSGIJtweF/V8kpXdAnaL
      jmR2E3SIWO0eHr5wFq/Xg91qoav74IXnkmgj4LKQSu7w8sU3CYdCnL9wgYAvQHdPDJPZ8oFF
      8RaLBafDQdDjYCMnIdYKWG12VIuHemKeEnbcNiu1qsrAcO+B4hQEEafbjajL7O1uM7e8jd2s
      cOmN6wT9XtweLy6X87PxHCCTyRAMBh+IrVoxi2r347J88jaDzmUzeP2BB7JRta4q5EoVAj7v
      A/BMJ5PJPrBj8FHG+ZkQgIFBsxirQAYtjSEAg5bGEIBBS2MIwKCluVsPIMsf0rKlgcEnmLsr
      0Zr22ztsGBh89jGmQAYtjSEAg5bGEIBBS2MIwKCleY8AlmZukSlJVItZXnzhebZ207x+8QWe
      +6dfkq98slaK1pbmWd28vRXm5uoSV67fQtN11tfXySTjzC2u3HejvA+iUswxMz3BysY2M5O3
      yOQrh/BWZ215gZWNbRLbGyytbR7C1m02NjbQ7/w8ZEJLKbdHulBhbWme7UT60L4BoGusbzy4
      OHc3NqgfIlBdU1mYnWJ7N8Xywiwb8eR+Aei6wvT0FFev3uClF1/k5JmzFLIpJianqEsSJvMn
      aUclDV+onfjGKjrQ2RlDVjR21xe5Mb2EaLURX1/jMGtbTo8frV7FbdOJJzOsbmwdwpqOLxhh
      Z3Od9e1dKpldaofoRFMtZrg1NY9cLXD15tQh/ALQWJudZCdbwu50srKyfEh7t1ldnGVmcfVQ
      Nu7EqVQLXPz1a9QOIXRdV4jEulhbXiQUibG5trxfAMmVKXaLsLw4h9lsYmt7m2y+iNsXYmxk
      GEH7JPUOEthcnqV/9BgCsLE4T//YONl8Cb1eJl+s0O6zkasf4r/QVYqSgFWtEox2IlUPcwcQ
      2F6dp29kHF3XUTX9vjnyH4TDEyQa9mFxeOmOhg/hF4BIf18f6BqyJiLqD+I4axSKFaRKEfUQ
      V6E7cSZ2E3i8DorF5o+BIJhYmJ7k6MmTrMxPMzJ+4nY2qK7r1Ot1snu7OAPtVHNJrG4/6ytL
      dPUNsruxTKWuMjA8hucTs1eWysLsPCaHB0GTCYdCuL1eREEgl8thFXUSuQp93R333CXyQOga
      uUIJn8fF2uoqbR09uB1Nxq+rLM4vINhctPkdVGSRaCR04A3k7kUul8Pn95PP5fD5/Bwme1ip
      V6hqZsqZXczOAOHA/Tfca8RHv//9C1gOasPn91PO5bD5fFiaDFSVa8wvLOPy+qgV81g9gf0C
      +LSi63rzJ7lBS/OZWAUyTn6DZvlMCMDAoFkMARi0NIYADFqauwv7xjzaoBUxiuINWhpjCmTQ
      0hgCMGhpDAEYtDSGAAxamn3pnbquv5M+LCAKoOk6oiCgvfM9WRCEu+nFgiAeKvekGTRN+y0f
      AIS7/3bbc/alQAuCcN8Vrjsx37FxJ6474wD63fd9kK3f9hUERFF4j9+/8e3gY/huH/f7+xsD
      jcUpIHD7GDdq611W0bTfjIuu34759l/uHAsQD5j1d6cu/c7/fdun2zb2+d1AnAjvnMvv+PmO
      sbs/9wlgY/JNfvraLAgC//bPv83/8r/+V/79f/qP/N9/9V/wul0cOfc5bl76FZq3h3/5p9/F
      bjpQXA8ETa5w5foUiqbR5rUxvZbGb9Owe4JcOH+Wq2++RkkWcJo1FNHOYHeUV197g9/79h/d
      twPzysIM8e1tRFcAUZUYPn6WkNvCC8/8kFNf+j4Lr/8MX88RUskUnT39jPR3fqCvui7zwq9e
      5Njp83S2ebh+9SZlSaGnzce1mXXOnhzk8vVZvvWtb2I+wLmR2lnnzVtL/LOvfZHVxVm2Njcx
      e0Ig1xg+fo63n32ax7/3ffz3sZVPbLKwuYPF6mBnO8GFRx/BY65y8fIcoYCHbDqJzR3CK+aQ
      XcOcOdrzgX4p9TLXb82g6GYeOXuUVy6+jjcUopxJY/eGkMtpTHY/58/dvz36HZI7m1x69S1+
      79vfJb25xMLSBiMnjnLzjVcJd/SCptA9coKu8Psn6t2OM45o9qDktyA4xOkBP5cuTxJpbyOb
      TGJ1upBrZUSb571TINFkgnqNa5ffwGIz8fqVKXRdYy9bpqO7l9959ByPPPnkR3ryA4gWB11t
      XjzBKJos8/jnHsfjdrOXTKIDqmDB67SQzuSoFwp4g246B4/h/IAmt/2DQyi6mVoph92kkS2U
      2Zy/xU62yvLMNVZ3c6wtL2F2OMllcwfyVVcUQm1trCwvg2ilt6sNlzeIRVA58+hjeMxw7Nyj
      mA84AQ3Hegn7nHf9VbFQK+ZwmnWuv3WRZEmiUCjf14avvRurJhH0+wi1BVheXUe02HHZLezu
      biNLCoqiMHxkDNMBF8bNVhexkBtvMIRaK1GSNPKpXfIliWI+RSZXplzKoRwwHTrsd9E9cgKn
      RaSzbwi3Tcfm9ONv6wS5gttlJpsuHCBOmc7ePlSTk/MnBqlkkygmB6nkOp5gL1qtiMMbxoyy
      /w5g9/jwOCzYAp1UcPGf/vN/5tWLFzl14Qk6fWYy2QIhbwBTsynBh0Ctl7g5t8axE6eoqm6C
      bjvbFhO9/QOkkgkCHgdFCUaHB0nmKlSzafqGPngzi8nrV3AH2wj7HKRSKex6BV/vCb5steHs
      GGekK0gZB8ntLbyBg6X16jpoqkIwFCYR3+TGzVmGx09QqxbobvMRX47T19tYDr/P5yO1l2R7
      dQFXIETE72ZvL8lDFz7Hke5Vgj7XfT+f3l5kr2oiLGjomkYo4CGVKSCiMjg8Rj61h83tQzTZ
      8LgPdsbKtSKT8xscO3mKdFGitz2IIlppR6aimuho1ylWVUwHFHo+m6N/cIDUXpJCNo1o92DV
      yoRifUQ9Oqsb27R33D9NO711O84uQSEQCoMqUTN5aXOVsLuHqRUSBKK91EsZbN7gZ+NBWKFQ
      wOt9EG2+oV4qoDu8D+gOp1MoFB+Yb8VCAZfHe6hCmjvoqkqpWsPjvr9wDmjtUxvnZ0IABgbN
      YiyDGrQ0hgAMWhpDAAYtjSEAg5bmbnt0SZI+bl8MDD5y7j4HMBaDDFoRYwpk0NIYAjBoaQwB
      GLQ0hgAMWhrTU0899RSAqqpoSp2XX3ie9WSB3u4OBGBpegLB4UTHhOVd6Ytzc7OEw20fg8s6
      8zNTFKsqye010vkqoaCfjZUFthIZpFKOlc1dBLXK0to2kUj4QLntqd0tFpZW8AbbqOX3mJlb
      wu7xs7W4gMPnYGpyGrPNjctha9hjpV5iaX2XgNfG/NI6lXyamfllYh2dDee7aKrC7PwCDrPG
      5Owi/lCYxfk5wuG2A9UW6LrO6vwMNn8Eky4zPTmBItqo5xMUZBPbqwtkijVCB0z8ezdzU7eo
      yAKZ5BbJbIlKfo/tvRzhYLCp2pG52RkCwSBzc/OE29pYm53FHg4fqDeoVMkzMTWLYHHitJmY
      npxAxszGygJ1zYTTorGykdyfDbo2fQVX93GiTpW1+QlevHSd7qift29ewWL1U5FNjPZ4WE3W
      iAXsLM9OkCrU+P3v/jGB+yXdP1B0wuEw04sbnDl5lBu3JhgZ6iO+HacoQVyu4AlEWK2U6PSI
      JMo6MfcHD5jTG8SXTpAp1QnbPcTCWXYSKeIr6zj9FgS7h/m5OdoePdeYt7rOzMwk+aodpZwm
      ma/y6OlREgXlwOnQ76ZayrO9m6RaLnB8MMaNuVVSO3GOHBk/oEMKW6urBAaOYjdDKOhjYztO
      UM9TdqvE1+LEupvIBNRVNrfidNsdFDJVLEKRtK7jMQvU1EEcDXbWT++sMzm3QndXB5vxBP1d
      bVy7NsmXR8dwHEBMgslKf3eUld0kkUAfoaCPldUFBMFJenGOjMNEEff+KZA3EGJ19hY3JmaZ
      X1igmElSVXRisU4sJjhy8iRrK6skd3cpFArUsTA+EKVU/QjbpusamVwZk6By6+qb9AyNocgy
      GiIOqwl/IIRZriOjkSnJOK0Hu/Tkk1vEKyYibjOVQoqZtTxDvTGi7SFc/jDVXBKbq4mOyaoE
      oplCPoOmixQLBdZW1+kfHGjcFuDyhfC57DgtJrYSWQLhNiKBg2dhCqKFaDRyuxV6rUJZEtCk
      Gh2xGKJoJtLeTqWYb9wxXad/aITMXgpNrSOpOqKmUpO1poRerkpYBBnN7CLodZIvlHG7LAdu
      j65KVS7fnGNsqBe5fjtOQRexCDUQRATRQj6f/63u0LpOLpNCsDoxo1Cty5jNFuw2C8VSGbfX
      T62URxMtWEy3TyyLScRsc+6bHn3Y5LNpTDYHxWwWwWKjXqvQFvRTU8BlM1GsKfhdNnKl27fy
      g9x+i/kM+WIFm6BQt/hAKuMPtWHWVawOB+m9PQLhNsxN5ehqVCoSTqedSqWCKIDV7mw63bdS
      qeCwW0mmskTawlSrVRwO54GnGfVqBdFsYjeZxWkVcfmCWAUNSReRKgVEqxO3096wX4VsGtHm
      QlTrKIIFq6BSUwX8XnfDtgCq1Qp2u5NqtYLD6USqVDA7HJgOMgWqlUmmsrhcLkqV+t04q8Uc
      Do8fu0WkUpM+G+3RDQyaxVgFMmhpDAEYtDSGAAxaGkMABi3N3dVZUTS0YNB6GEXxBi2Ncdk3
      aGkMARi0NIYADFoaQwAGLc1+Aeg6pUKOUqXWkBFd18lnM1TrcsMOVKsVVK3Z7+E6tdptX2uV
      EsVyBalepVCqoEh18oUSjVi+kw6i6xrZbBZN18llM6iaTj6XRVEP2OX1fahVyrfHVtep1w/X
      hEBTZdKZHLqukcnmmq7p1jWFuiSjqQqSolIuFahJjR9HgGq5SKVa5/ZxqZPLpNhLZWjm8CpS
      jWRyD0VVyGRz1Kplkskk1VoT46brFPO52/EV89QlBV3XqNXr+9OhM9sLPHtpEqvVyte/cIGp
      hQ3GBrrQrU5K2RSZZAqbP8zE5UuMnXqYrrAHRyDKzvxlbq5msFgdPHpykLVEke52Lxubu/QN
      9LGxukYw1oNe2kP0RLDIefKSwNzVt3C1d3DmoVMsLSwyNjbM8uIywVgvgz3RD4wrsbnM1blt
      vvHlJ9nY2CCeSGEWdKxmG1VNwmsxM/DQI/gOkBFayaf4+Ytv8L1v/z7bC1OkZJHa9AR1LFhN
      UJc0nL4Q508dafwAAOgyr736Gt5wlKhfYHFb4oufO9ucLSC+uUk+HWdtuw1zbY9sz0MMtjfa
      51Nn+sarVMy9iOlZbP1nsNTSpHNlHnvkfGOW5Aqvvv4WoUiM7rCTyzMbPH5mjCtXJ/naV7/c
      oF8wP3ET2RkkFV8lX6oQ6jvO3sIN+k49Rqe9sebMilzi2vWbmMwmRNGCaDHTFbAytyvtF0A6
      scPIqYfp8sDzz79Ab0eYZ5+bZeTUQ6zPTVCrWTGZVlBkldLOMj+7XuRP/+R7JBIJzj76JcxS
      jhdf+jVhr53pyRq93TEuXnoNVbSjzs6zuraIr3OAgNXC0WNHqNQVLPUil379Il3dXTz7j/+I
      3R1hYWWbwZ5vfVBY3JyYR1Jvd2NuC3jIlFXcZom1pU3ah3pJbywTlfQDCcDpC9PbcbvAp5Cv
      0HPsKFdeWsDkCiKYQFI0nIdZMVYlVNFOrZin48w5tpPzzdsCYh0xllY3OH2+h9RmiVqpCA0K
      oF5MsbS1hycY5MLYKCuSQHtbiJ29xtOhVamGYHVRzKe4sVNBlnSq+TQjx880lfXqDoWpZPfY
      yNRxmGREkxnd6qIj0HhmqS5L1GQFK3X8wUFqxS2mZrPIVv9vKsIA/G0Rpi5fIllSODnSw8xq
      ks89cYHpiUm6+vro6eojHPIQdNtp74qxvlvl/MlR2toivP7Ki0iCk752D7tlODY2RG9vL2aT
      ma6efgJeDx2RAD1DR4m4BfbKGr1RL5rZw7GxYWbnlzl79gxt7R34XDY6OmIfEJbI0MgIVrOJ
      Wq3G8tIivmAYh0XE5g/T5rah2f0MdbcfeFcXSZKwizKCK8jawhKDI6MoskIkGkXQNcKRdgK+
      5lJ7ES3oUgmTw0MsEkKSVIJBX3O2gNX5aTSLE4sus5evEuvsxNXgldFsczHY34XF4sLntqKZ
      bCS21vEG22gLBRqyJVpsSOUcDm+IRx+5gNViQjSbiUZjmE2NK6BazJEuyfR1x5AVnVhHGLNg
      IxRqYswEgWKhSFu0B72exR/p4cLZhzBbrM0/CEtsrWH2RAi9s3HDx0m5XMblehBtvkGqlhFs
      LizG8kBLYDwJNmhpjOucQUtjCMCgpTEEYNDSGAIwaGnutkc3iuINWhHjDmDQ0hgCMGhpDAEY
      tDT7coEquQQ/ffZFJEXnD//4exTTe/hc8OqNHc4c7eT1N6/xhScfQRVsoNaoSSqRSBt7Gwu8
      8Np1dNHGt/7gK+TzZWq5BLqnHbdZIxCOYDnoduEGBh8h+zrDLVy7SNnbz+KbLxOIhKjpFpRa
      EbCQKVbQZIny3iplW4zegAC6wFe+++csvvkcHaNneO3iy5w6cYznX3yRnlgU0WHn6uXrPPG1
      b/O7T575uGM1MHgP++4AfWMneObZ51EtNjq7urlxa4qR0RHKVZVaeRHd66cjMIY1PIBZLRFy
      mRGBoydP8auXX8dqd5JKxAmFI/T09ZMulhkdHWN0sOdDcX5m8gaqycmx8VEWpicQnX5Mcpl0
      WSbitZPIlDlz9tSBekm+m2Jml7nlLQZGx1mbnmDk5FHWFhbQ7EFOjvU36a3G1M2baBYXFr2K
      ZnJxZGy46f6gmiJx+dotxkf6WZibIdR/gv5oYy3N1XqJG5Nz+MMxrFIGIdCLubJD1RRioCvc
      nGPozEzeQhJsOE0KNd3K8fFRGg1TkapcuzXLaH8ns7OzhLoGKOyuNRUnQHZ3jZTkJOZW2UjX
      UcsZBJtnvwCsrgDf/aM/uvt6/NjJ3/zxiYff37q7hz/6ow/nJL8fyeQeisnBsfFRsrksZgmU
      cpZ0WYaanVSmjAI02uzb6Qvjt62RzheplauYnB40WWbwyGFiFBgZG+PtaxOIalBcPV0AABI0
      SURBVI1aPUn/0DDNdpWXJYm6JOEJhJF1E73tjWdJihYHo4PdzK2n6bDJZKsSYVGlVKg25xSA
      WmF1I0F7LEb3WD9vvHUd/chow/sDyJJMXarjD7eji0sM93Xz1s5mU3Fqco25lSXsrj5mthKo
      ok4uWyXaad8vgFJmh2f+8XmsgQ6eOD2OzeGkXJPwu2wUKzWCoTCpxA4+t5WpxQR+n4vRkQEm
      b9ykXq0THegj7HGjixZkuU69XMLp9bK4uMpDp4437PgHhIU/FEVAQ5IkOrr7KeRzSC4vgx6R
      vKYxPuChXAdbg42OC6kEgc5B9rJV2qNtCOiIdhduWxN989/F/Owsp06fJrW7RT6Xx9pgz/x3
      Y3O6CQd8gIrb40dsYgcKXZOZW45z+vQppMw2NcVMwNtGUT5E5Ztopa+/H02qsLuXIdbmR9HA
      2uDQOdxegj4PqGU8/iiCoDUdp6rIOJ0eKvUybqeTbLlG38AA9Vrpvd2hr196jsDYI/zqH37E
      2bMnuHTxIoMjwyiKht0TYHpigi9/6XMsrWyTyVf5yz/7Nv/fz3+FQ86jWW2UqgrDx8+wvTLD
      xtIip3/n90gtz/C73/k2H9YWGrlcDr+/8duigcF7lmacbi82i4nx46eoFrO0tUdxe/2cP3cO
      X6CN4b4YpXKdWGcfAbcVXRSxmkS8Ph+lqsKRsWGmb1zG4Q0zOjxIuVhEtFoanoY0gnHyGzTL
      A9kfYHlxgd6hEcz3uDvpqszi6hYjQ81+eTQw+PAwNsgwaGmMp1MGLY0hAIOW5u4USNMO1/TJ
      wODTiFEUb9DSGFMgg5bGEIBBS7NPAEqtyNM/+iF/94MfU5Vvz4yUSoo3rs4COq9eevWeRkqZ
      HX7093/Pj3/6HOo7E6rc3i65UmNNdg0MPmr2fQeYv/Jrit4BFt98hf7hPqbmVujqilGuqOzG
      N1FFK3YpRdnRSYAsxarKv/jLf8vUpWfoPHKe1y5d5JEzx/nBPzzDYFcE0e1nbnKCL33zT3jy
      bJNNZQ0MPkT2pWN19g/zw2deRJUq1GUVRAFdv706dFsnOoqq4HQ4cTttDHut1GSNwaEhnn/l
      Zeq1KpMTEzicDtraO0iVSmi6iN324WQB6ZrMylqcwYFe1lcW2N4r0NcRJl2SaPc7SORqHBsb
      OnBv0HuR2tlAM7tI7m5jdvoZazq1W2d5fhbN4saiV0mkS5w5ewbzJ2ASqql1FuYWqelmHKKE
      3Reht/ODu3N/EJtrSxTrAkdGBxtOh75DObfH3OoufT3tbG+s448N0RM9WN/S+Noyge5BHCZI
      724iusLsrM3jDsWQCikEu2+/ANyhLv7iX/0ZOgIC8MTn9Lsnj67rIAj3DsR7nD8bOLbvvXd/
      /0P9UCfg/ZiZuEU8V2NwoJfuzhibyRIb6+ukSxLdsTPEb84yPjbUdB6SKlV487VXOf75b2JS
      qgTbRg7hrU442sWtW7d45Nxx4ukaTfSM/VAQTTaCbjNpzc3CxDWOnGysMe69UZm4NUUo1o2m
      03SsqmhDL+6g2I5QLs8x1nawvC9Nk5m8fp1zHYM4BJWF6ZtExh+ns6ef61fepFhR6ezt3f8d
      oJTZ4Sc/eZqfPvcSgiAgiiKCINz9XXznd6WWZ3E1TqVSRRAE1laW2Vqb59bc6j0/JwgC+eQ2
      e/lKc6NwTxSqdZVSIY+uw+r8HIPjR5FUnZDTym4mT1fIQbbW/CpvLpXE7nJTKBbJVFQi3gbz
      qvchsDI3ydD4CdaXlhkcbTxH/sNkeSvNSE87Jx46w+7WxgOwKBBqjyEqFWS1eSvlfJbe3i52
      kik0wYr1gEoSRQu9vV3vvDDR39eLIIhM3bzOybPniHX1UClk938H0HWdq6/8gtDRJ7n0zI84
      cuIks7PzjA52sri6zfjx40xPzfDEY+eYnZrj5sI2//P/+Jc889NnqSSXCA2eIbUb59iRQSaX
      4ljVIhari5HhfrA62Ihn+caXHmt+NO5BPp9nb2+P9kgEl8dDpZAlXZKI+BwksmV6u2KHugPV
      qyV0k516tYLP523eUV1lcWEB3ewkFvHjdHkxNVsO9iGQz+fxeb0kd7Ywu4IEfYfvtl3I7lGS
      RWKRUNNTIFWusbKxw9BAN4VCHV8DflWKeUw2K9vxNJ3tfhRdYH11DZcvhNOsIDr8+6dAwt0p
      joo72EE5vUNiexm3286Fcw8xt5GilNllamYezeQiFvYiaCqSCp3dvdTqOaZm5/C6zAyfuMDm
      1FW++NhJ/o//6xn+w//w58wvbzY5DO+Pz+fD5/tNlZDbF8T9zss+d/P99+9gc9zeD8BuPcTJ
      DyCYGB795C4E3BnDSEf3A7PpDbRxyFHDZLEzPHg7k9jna6yCyOm5HdNA3+07gQ0YP3p033ve
      8yS4mEtjdnopF4pYRZVsqYbdZsXjcVOTVbLJXdo7OqhLt/db6urp5oXn/okzF87h8fjY3Ngk
      2h5CM9mpl0tY9Aq/emOGLzzUw2rRwfljRlq0wScHIxXCoKX5BCzCGRh8fBgCMGhp7naHNtKh
      DVqRu1+rZbm5zZENDD7NGFMgg5bGEIBBS2MIwKClMQRg0NLse7asaSo6AiZRRNNUNB0EXUc0
      mVFV5fa/aTpmiwVd07BYPqxmhwdDkWUQRcwmE6CjqhoCoGo6JpOAquqYLeaG81B0XUeSJKxW
      K7IsY7FYUGQZk8XSVG/K30aq19EBq9XWdEKcrutIsozVYkGSZKxWS+M5T7qOLMuYzBZUVUY0
      WdA1BUEwYWpiPwdd12+vKKq3zx2TKKAjYDY3no+r6xqyrGAxm5EUBavFjCQph49TkUAwIaAj
      iKb9AtieuUrS2sOZkRg3X3+JxbyJUzEzcugISzffpCvi5eU3b/DNb/4+z/zkp/zFv/sPBByH
      6PB6KDRmp6fIles8/tjDxFcXWdjO4hQlNMFKKOxjezvJ5558ouH26On4Blt7CXTBhSoVARPl
      ukJnVy9DfR2H9jy9F+fKjTm+8Y2vN50mvDhzk2yhitlqR1XqdA4dpzPkbsiGqtSYnpxGNdmw
      IFFTBJR6BcHi5JHzpxv2afbaa1RdPVQTS3QPjbO9Oo/J5uLM2XMN1z3M3LpGoargD4WoZnbR
      HG3Y1RzmtlHGuoMN2boTp2a2k03GGT9xiqW5GQSr695TIF1XuT4xw+b8BNHRh5i4+HN80X5O
      n3+UkdEx6slVzDYzb12baiyqB4pIZzSEw+NHADr7R3BZBTweN/lkkrbePixqnWoTq7uhWBdK
      VaKnf4Bo0EtiZwu720M2m3sgnlt0mbFT5zjMpjnpTB6vw8TsyiY+r4NMKt+wDdFso7sriqRo
      9HZ3US2XsLkDmIXm8pcHhkYwizrBcJj1lRWcbheZ1B7NNJvO5os4RAVXIEpV0hk/MkylIhEL
      exq2dSfOWq1GWyTC8tISsiyhKAqmp5566ikAVVWRa2XefvsymUyK3rGzfPH8GPGigE2tcvL8
      w9hNkC+WkTUT3/rOt0jFN+ju7mo8ugeCyltvXqU91oEs1XC73ZTLZcyigNnjRy/nUAULsY4Y
      5gbTjnfX5tmrgMeisZsp0t3bh1ItE2iLEPA1dpW9F6l0hlhnJ5ZDVMQ4rCbS+TLDQwOUiiUi
      HV14nNaGbGhyhdmFNfx+L4ndBP5wO6JSxuYO0hZqvChGUxUkTUAq57G5fVhN4PK30RkNNzwN
      tZoE8mWJejEDNjf17C4lbLSFgtitjU2978YZ8CNVyniDYawmAafH/9noDVosFvF4Gr8yGBh8
      JgRgYNAsxjKoQUtjCMCgpTEEYNDSGAIwaGnufgk2KiMNWhGjJtigpTGmQAYtjSEAg5bGEIBB
      S2MIwKCl2ZfLnN5aYimtYaplOXXhAu+X6JzfXSMpu9DzW+QlM6dPH/9Qd4I/CEtzU6gWN3Yk
      slWNgFMkW1I4fvxIw+nQuqZy49Ykx8f6uTExS0d3D7vxOF19Q0TDze9KX8zssFPQ6QrZWN8t
      cmS4r2lb2eQ2i+u7DPR3sbK8xsCRk4Qbbd6r66wvzeCM9LO7Oos71IHXXKeke+ntaCzlGCCz
      u05ecyHl4siiA4cgUZQETh4bb7juQVUkJqfnGegMM7e6zXB/J3NrSY6NH2k46e/dce6szmJz
      B5FKGZyB9v3neCmT5IUXbhANenB7rfzq+bc4OtrBdiLH+KmzzF65yNij3+DMUJiXnnsFNAWP
      08ELz8yxlcwxPDrCzRu3+L0//FMGYw+ixfbB2d6O4wl30DPYw8zrb1N22rDrVXZLY3R6Ght9
      Ta6xtZNkuMPPXiZHuVTC3dbB3Owc0ScebtrHajHHXgYCTgfpZBYOIQCHN4RYneb1y2l62v1U
      qnVouHu1TnZvB9XbQ7S9jdm1OD1hyNbFpgRQzGXJahr57TiSaEUpFQnFOtGg4QtkrVwimc4g
      1cqcGunk2VeuEIzGqEpK4wJ4J84KFta283R1iBSLVXZTC++dAj35uceYm1lkdmaWWjFLOlfE
      7bIzN3WLTKlKci+DyerCJqcIdg1TKZWoSwIPnxljZWWFxF6aavWj3xqpo6ubUiHLxtY2XpsV
      d8BHpqLhtTeecmyyuWgLeCgVC0Q7ezDbHEiF9N1mq80SiUQRBYG2SPuhO0NnEnECoRCKLhII
      uEntNVGrIIhE2yPoqsRetoygSbRHo013cm6PRhEEBcFkxyYKBCIRlFoZpYl6AJcviMdhxW0z
      s7KZoL2rj96oi3g81bixd+I0WRy0R0KUS2WcNhGT1b7/OYBcr6EKZqRqGbNZpC4pTL79Br2n
      H6Uz6KZQLGGz2nG5HNRrFUSzHal2u+e/xWJCQ6RUKBIIhT7y1t+1SglJE7CZBap1FZfdQrmu
      4PO6mzqgtVoNm81KJp3GFwhRzGfx+oOHi0tTqckqdpuZWk3GbrcdwpRMOlskHPKRTmUJhkNN
      lWsqch1dtFAt5rA4PNgsArKsY2tiVx9NVZBVHVWqogoWLIKKpAl43c21Wq/VatisFtLZAqGA
      l1Q6RzgcbKrd/Z04a6U8ZrsbtV7GbHcZD8IMWhtjFcigpTEEYNDSGAIwaGkMARi0NHfbo6vq
      IbbyMzD4lHL3QZiiKB+nHwYGHwvGFMigpTEEYNDSGAIwaGkMARi0NPsEINerxONxiuXqPd9c
      q5SQmsls+giolArkCiXgdg6JVKuQyuQ4TKKHVC0Tj8cplMrsJRPI6uFi13WNWl0CXadWO3wn
      vlqthq4qJBJJtENltOjksxlqdYnETpxkKtOcFU2hLslUSgWK5Sq1Sol8sdy0V7VaDVWRSCRT
      6LrGXnLv0M0bdE2lWqtTzGep1KT96dC7i7d4bTFLuZDlS4+coIyTqSuXOHX2EXaTaex6CUuo
      n96uNvLJFLuJXRxuN1anH4uUpSK6OTU+fCgHm2V3N0F8N8lQbwe3FrcZ7Y+xuxXH9fjjOJrM
      bxTNFrK762QLIexWE+s7Gc6ePNK0j2sz19iue+j1KyzHJT7/eOMtyO9QLWZ47qU3eezcceRK
      lumqyPG+cFO2NFVhby9JOr/OcE+IqcU1IuHG06Fnr79B1dVLPb2BigmbRQBEHjp3AUuDc41i
      JslLb9zg/MlRytkE07OL9Hb7SeQVjg3HGvbtDsvTN9gpC4i6jNVqfe8UKJveY/zoMZ555mf8
      +pVXUQQzSFXWlyaIZ6rsrC6wvrnB9WvXWN1KMzkzy/TNq+QKJd58/bWmHTssPrcNuydIe1c/
      AbeVSNCHYnHSaIb8uzGbzRTqAuMjgxRSCXp6ew7lY//gMFazSPfAIE7r4fZVcHiC9HS00dbe
      zvpOjsGO5usvBEHA5/WiqCq78V1OPHSiKTsDQ6OYRRVFklEUFU0w4bCITaVDe4IROiIBIu0R
      dnIybruJ7u4o1UKxKd8AlHqBpY0ktWoVm0lgL53dfwdwh6L83u8foafNi0PJURK9+MQKiUyO
      YFs3sc4Ogn4fE5NT9A8PYbZ5EAQZZJlsaofB4RF0aDqf/DCsrm3iDnUAOpFIhJWVVQJeD7IO
      1mYd0jViHZ2Us0kquhVdPeRWsiYrkZAfMBOJhA5nC4hEIiQ2V7H7gkh1CafV0bSt3USCaCyG
      SZfx25sTp8nmIOw3Y1fbkAU7bqtORRGxN1kuGIlE2FxdwRsI0NUeYuLWCiPjzYkTwGzz8uWv
      fJHtRIpyLsVYtNvoDm3Q2hirQAYtjSEAg5bGEIBBS2MIwKClMQRg0NLcXQUyMGhFzEBTbSYM
      DD4LGFMgg5bGEIBBS/P/A1lImh4/DBMZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.trips.pct' width='192'>
      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
      iaMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tour Purp.n' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Work Travel' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top Ten-Non-Work Travel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='work in progress' width='192'>
      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
      5LX/HxuY+HkhD43NAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
