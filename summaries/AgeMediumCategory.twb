<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <repository-location id='AgeMediumCategory' path='/workbooks' revision='2.5' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' inline='true' name='csv.41592.618980856481' version='9.0'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\' driver='' filename='AgeMediumCategory.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='AgeMediumCategory#csv' table='[AgeMediumCategory#csv]' type='table' />
        <refresh incremental-updates=''>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>approximate_age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[approximate_age]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>approximate_age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fare_category]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>fare_category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_medium</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fare_medium]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>fare_medium</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>3</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Detailed Fare Category' datatype='string' name='[fare_category]' role='dimension' type='nominal'>
      </column>
      <column caption='Detailed Fare Medium' datatype='string' name='[fare_medium]' role='dimension' type='nominal'>
      </column>
      <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
      </column>
      <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
      </column>
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
          <alias key='&quot;WEEKEND&quot;' value='Weekend' />
        </aliases>
      </column>
      <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Legacy\Data summaries\AgeMediumCategory#csv (AgeMediumCategory.csv).tde' schema='Extract' tablename='Extract' update-time='03/25/2016 04:32:21 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_6780221130809601]' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' />
            <calculation column='[Calculation_6910224103336532]' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' />
            <calculation column='[Calculation_7570224103828506]' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5805' timestamp-start='2016-03-25 16:32:21.834' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_6910224103336532</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_6910224103336532]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_6910224103336532</remote-alias>
              <ordinal>0</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;16 to 22&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Younger than 16&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>approximate_age</remote-name>
              <remote-type>129</remote-type>
              <local-name>[approximate_age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>approximate_age</remote-alias>
              <ordinal>2</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>95</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-1872&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Missing&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fare_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare_category</remote-alias>
              <ordinal>3</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Missing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;youth&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare_medium</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fare_medium]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare_medium</remote-alias>
              <ordinal>4</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>73</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Missing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;transfer (santa rosa citybus)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>5</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>176</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4010</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>6</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>7</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4247</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>19474.557124324499</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>8</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>9</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3753</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>19809.785121811001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_6780221130809601</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_6780221130809601]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_6780221130809601</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>16</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cash&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ticket or Token&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>64</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_7570224103828506</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_7570224103828506]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_7570224103828506</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>18</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adult&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Youth&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>72</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='67' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Age.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Trips by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:trip_weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:trip_weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Age.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Trips by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='70' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Cat.boards.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='#4f6e8d' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='76' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Cat.boards.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[pcto:sum:weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='74' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Cat.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='74' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Med.boards.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='75' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='#4f6e8d' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Med.boards.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[pcto:sum:weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper&quot;</bucket>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='65' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='78' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='88' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Med.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='92' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Fare Med.boards.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Med.boards.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Med.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.boards.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.boards.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Fare Med.boards.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fare Med.boards.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fare Med.n' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Age.trips.est' width='192'>
      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
      cYks2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Age.trips.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Age.n' width='192'>
      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
      8Yb8/z8g7SM+lVsWSgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.boards.est' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.boards.pct' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.n' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
