<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <repository-location id='AgeMediumCategory' path='/workbooks' revision='2.2' />
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' inline='true' name='csv.41592.618980856481' version='8.3'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau' driver='' filename='AgeMediumCategory.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='AgeMediumCategory#csv' table='[AgeMediumCategory#csv]' type='table' />
        <refresh incremental-updates=''>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>approximate_age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[approximate_age]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>approximate_age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fare_category]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>fare_category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_medium</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fare_medium]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>fare_medium</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>3</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Detailed Fare Category' datatype='string' name='[fare_category]' role='dimension' type='nominal'>
      </column>
      <column caption='Detailed Fare Medium' datatype='string' name='[fare_medium]' role='dimension' type='nominal'>
      </column>
      <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
      </column>
      <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
      </column>
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
          <alias key='&quot;WEEKEND&quot;' value='Weekend' />
        </aliases>
      </column>
      <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Legacy\Data summaries\AgeMediumCategory#csv (AgeMediumCategory.csv).tde' schema='Extract' tablename='Extract' update-time='01/05/2015 07:48:09 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_6910224103336532]' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5496' timestamp-start='2015-01-05 19:48:09.096' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_6910224103336532</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_6910224103336532]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_6910224103336532</remote-alias>
              <ordinal>0</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;16 to 22&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Younger than 16&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>approximate_age</remote-name>
              <remote-type>129</remote-type>
              <local-name>[approximate_age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>approximate_age</remote-alias>
              <ordinal>2</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>91</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-1872&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Missing&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fare_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare_category</remote-alias>
              <ordinal>3</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Missing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;youth&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare_medium</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fare_medium]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare_medium</remote-alias>
              <ordinal>4</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>74</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Clipper&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;transfer (santa rosa citybus)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>5</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>328</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>6</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>7</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3732</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1782.7376568</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>8</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>9</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3240</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>2150.2978600840001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='67' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Age.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Trips by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:trip_weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:trip_weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Age.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Trips by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='70' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Cat.boards.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='#4f6e8d' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='76' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Cat.boards.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[pcto:sum:weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='74' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Cat.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='74' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Med.boards.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='75' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='#4f6e8d' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Med.boards.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[pcto:sum:weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper&quot;</bucket>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='65' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='78' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='88' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Med.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='92' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Fare Med.boards.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Med.boards.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Med.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.boards.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.boards.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='31'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Fare Med.boards.est' width='192'>
      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
      FpHJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fare Med.boards.pct' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fare Med.n' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dWYwcV5rY+39EZEbua2XtVVl7sVhcRUqU1Nq6Na2e6elut8bqxWOPDRi+
      Y9wB/GAPbBj2fRngPs69wB3bsGHDgDEzrXFD6pa6JTVbMy2Jmyhuxa2qWPu+b7nvmbHcB7Y0
      KokUK6tIFll5fi8Eipknv5MZX0SciHO+kEzTNBGECiXvdgCCsJssux2A8EUmnz8mS5JU1ms+
      O6BLEnd6p7CZ8md/9md/tttBCJv91f/4z4xNzxMI1bG4uIRDlZhdXEfLJykYCk67lb/4v/8D
      si/EW6//NW2tYQqmhUx8nXfffIf1RByH24liGkSjMVZWVikU8pQMGYdd3e3uPVLEEeBRJEnI
      koNsfJHfvPcr2roPkbM4uPl37+BqOch//Nf/gvqWTj58++fsO9TJX/z5/4O7pZdaj4ye0bCs
      r3Pl/CpdHW1cuzlKvqSRK0gEQ0H+8Wvf2+3ePVJEAjyC2vYd5sWXXuLmhdMEaxvx+/30dh7A
      mVunpuMoAPUt3WBxcXh/O6psp67zKJGZAZbMAjXVNXi9Mleu3qKhsZFAdQ2FgoRWyuxyzx49
      krgKJOwlpmneZdx0Z+IqkLCn5HK5sl4vEkCoaCIBhIomEkCoaCIBhIomEkCoaCIBhIomEkCo
      aCIBhIq2a1MhTNNkcXYKxRXAYpQwJQiGarFsMyVz6Tgzi+u0hRtIprLIFpVQ0LfN2AxmJsdx
      VzVgFrMAhGpqkffA9ErT0BkbGaKggdvnp72lGYD11VWCtbUon77utxMEyrmrulOx9WUKkgM9
      E0FWnXgC1bjtf7+JaoUMiZxBld/zpfdGo1ECweA9PyObyTC1kqCnrR6LLO3ebNDF0WtcGl0h
      srrC3NgomWKOVCLKpctXsasKZ859jC7bGe+/TKIkMXr1IkWrlyqf+8uNmRpv/vRNnDaJtcgG
      o6Nz5HJZbvX3sZ7WWZocoH9kBpdV5/Qn17AaefpujdPW2nzHKcPDl08zFSuxurDA5Ogw2XyO
      RHSVy303US0m5z6+gMXp5fqFM+iqg74zp7EFG/C5bA/8e9sx02RjcYzLQysUckmsWpoLN0aZ
      GxkmWcqjZVN8fOkG88NXmIzqtNUH+PBvf03GtDJ67St+g/vgytm/4/zAFNc++iUZbMiKhfNn
      z+L1uvnwgw+w2VXmF1YYuHmVSEZnfXaIq0MztLaEud53mcZwC7qmYbVa79x1Lc9fvneJgENi
      LpJhYHRm944AuUyG2qYWAnKeyUSM6MY66yuLtLS28eGHpwi193Lhg5OsbqzTsj+NlNd44ZWa
      OzdmGhiSSmdnJ8ury+ilAmsry2QNmfX+q5TQCQfc/PSt66gWO7nYOkdf/vZdz/8y6QxNnfsh
      GWE8ts7G+jpL8xk6Wxv56NQ5Oo8c4+9+/lM2skXiukE+adAU+vJe6W4MXcdEQlbkTQloGgam
      JCGXsdc1DAPDMFAUZUt7a0lWCLeEmYw5ycRmuNC3zBNPHKZvZpipvgINliSrWYlwbYiOpkZi
      C6Nk1RquXTyDRXbxwjfv8ht8gWkY6IaJoshIkoRhGMjyPQ7vkg0tPobVX082GSORSmPoRVZW
      1zEMneWlRWLxLLrdx8zYDbSigSKbaLpJyK2ykS7i/YotOp9M4KmuZWh4FHdNA96a+t2bDGfo
      JT45cwproIkqu4yhwOTQNQrWanoaXZy+McfLX3+B+MIoalUzdqBnf9dd21uaGeXarWlOnDhK
      PJpCy6c4c+EyJ557maErH1HffpBDXU309U+wvyNMKNyG137nPYVWzHHm1Cmqwj04KWJKcOvm
      ZWy+Buo9OgMLeb7+4rPM3rpGTXsPFHR69ndsqd+lTIS/+ukv0LHy4x/+A+YX1uhqa2B8agE1
      v8pMzsuJo/vxu+1baq+//yoDw8N4Am0caA3ir2kmHVnCGayjkFjH4gpSVx3YHEMuwexqFi2f
      wGU1GJmLEa6twuaQ0Q0YGZ/j+KEuluJFjva0cO7UR9R1HMDM5+jZ333PmEyjxJt/8zqGrFDT
      1EE6nSaT3ODpp5+jsTbI7HKEGr+LSDJLW1vLZzuiuclxMvksKCq6puNyexjsH+DIsSP0X7/O
      gUOHKBU1FLuLUjbJ2V//nLmMjf/r3/8bpFyMuGbHa5dxOp13C4wLfbdI6BZ6Grx4q2sfrdmg
      idgGLl8Io5Amb1jwura2EdyJoRWJp/ME/V4ikQhVVVU7ii0a3cAfCFHIxDGsbly27R081ydv
      cGNd5emeBtaXZjl58l26j36NW7eGOXGwnZW8gZ638ePXvrml9m72X6V/aJSe/YdZGusnWrRS
      3Jil9ejzLI9cItB2nO9/6/ltxbpdRj7BT391jh9/+zn+5mfvkCgqOMhgtaqYpSwDI7McO3qY
      up7jfOPJ/dteuRbbWCWryTTUVX/WRjabvXsC3MGurggzTYMLFy8RXZrkg1NncYbChHxOFKuK
      VZHAKHLq7CWamxu50XcJf20j1q8YiZpanot9fZx9/32uDw7TdeAQVkXC5XKh6TqyJKFrOoXU
      Gv2TqzTU3HnQdO3yReKxDd54400yupXm+mrsdgemYaCqdmTJZGVqgNPXp+kI13P50kXqG5u2
      dOri9AW41XeOwbFZ7FbIa9DW2UMuGaGqto72nl7kgka4pWFL32E+r3Hi+eepd0lcHZygobGJ
      kM+FoTioDbgomBb2dbR+ZRvrC5P85CevsxAr0tXSCJicPn2WcLgZMDGM27+VYRhIknTPUy3J
      YiOxNMkn127x7Esvk42uUtfUSmtTLTW19XiC9XS3NNK+vwe37c5H4enBiySkANfOn6KhpQ0M
      A0kCTdeRuD1It9mduJx2ME0Mw0SSZDStdNcxwOe9+/5pPrwxs7tHgGImwslTV8mn4vzoh6+S
      yeb41c9eR/c1M3/rMi/8/mvcvHAOQ3bw/LFWrI1PcCB89z15bGGYvtkMw+dPYfO4eOb5Fzj5
      1pscf/ZrXOgb5LXff4E3fvkh/8ef/DEXT5/nRz969Y7tvPHmG/zwhz/i3bd+xpHeVt4+M4Za
      XKGgq/R21DI4l+JAvYVo0cbiapIjbUEOfP17NHof3+WGp06+SffxF3nvF+9g8wXR1qdxNfVS
      WB5mMWOnpcpKIlPgu3/4z2kJPZhB8OcNXfxbaHqGobPvkS+mSSQydO/v5cL1Eb774mE0TwNz
      I4NMjk9TX+tlZGqFP/0P/xGnVNrSEWDg+g2k+u5dXhEmSUiSTK3fyuuvv064rYPFWJ5aj0FP
      dzujoxPUhTuxa3k0E+z3GERJsgKmSXPHAf7gtd/n0kfv4vC4Ub01+K1FInkL9T4r07NLyLJy
      13ZkSQITFFkGSebEs19jefI6QZuVquYGrl5/D7X7OK2eEHVtbqzRCZTH/I6KLMvIkoSEicVi
      weavxmrk0awqwVAQp9fOwR4/hZL2UOIJ1TXx1q/fwubwEPI7ONDdSt7eiNvsI5LRGb1+ikCo
      mq4Dx/HL66zES7cvoW9xd74QLfDcITuYu8nQzcuX+7b00htXL5t5zfjq5rSCebnvxj3bysVX
      zP6Rmbv+f/+1K2aupG8pLtM0zb4rl03d+OrYhIcjk8mU9fpHahAsCDtV7iD4MT9wC8LOiAQQ
      KppIAKGiiQQQKppIAKGiiQQQKppIAKGiWeD2vApxO0DYC0zTxDCMLb/+s6kQhULhgQQkCA9T
      sVi897qDz7HA7WVvDofjgQUlCA+LaZplbctiDCBUNJEAQkUTCSBUtC+tCFtdnAWbG4USQ4OD
      qC4/dlVhcmSI6dl5LHY3Lsfdqx8sLS/hcjpBlsta6maaJvF4HIfDwcbKApPTs1isFqYmZzAM
      jZmZGSSr8ys/+7O2DI3J8XFUlxfZKDE6OkoyWyKfiqLJKtHVeSLJHAHf1hey3yFgovE4Fslg
      em4Jv9+3pUXphlZkbGwcjz+IIpnMTE5gc3lZnp9GtrmJLM+hy3bsd1kp9UXFXJq8LqMqEmvL
      C2SKkIgss57IYhYyxLMlPK7yx3ef/h5WBSZnFvB5XUxNTuHyBbCUWR/GNA3mpicwLQ6iK/Pk
      dIlccoNMwby9omuHCtkko6MTuP1VYOj3XBFmGiUmJ6Zw+wKbE8A0Dd5/5w3WMhamBi7iCNSw
      uLRKuKmeQi7D2fMXsBolJpeWGbp2mbwkc/XcxyzGs6zPDjO+FCO6tsjZk+/gaOwk5N36tNTI
      8jyfXL/Fvs52nC4P0xNj6Lk4Sd1BV3sra4vT+GuacKj3XsOTT8WRVSvDI3O0hBtRSmmiWR3V
      ojA+PsHS/AxNLR24t7FhfCoRWeXUJ30UM0lq/HbmEybVvnv3NxlZx+m1Mji6hp8N1swqFvpP
      kVbr2Vgcx+nyMjY2Tku4eUtxDPWdIWevw28v8fH5qxgSzE5O0BgOMzk5QyYRo7axsexDfTq2
      xm/OXqY+FCCxvsTA0CQl08Bqc5e9VlsvZimYFkZuXiJjOIiuLRKLJ4lENmhubiozsi+bGrxB
      WnHSVBv6yrIon5obvIla38zE8Pjm7yWxPM7shsHQwHWyeY36hgY8LicgUdvQRDAYJLa8SHdX
      G7KqcPVKH2nNzurcOKVSiZXFJVY3Ivj9NdTXBu7y8XcWagh/ljClfBzJHiAQamBfs5uxqTmS
      BYmge2t1d+wuL/PTs/QeuF3BYHxmmZ72JiwWBdPU2HfwGAszE2z9avGX+UJ11If81NZUMT09
      g6Zv7T6KJxBgdHiWIwfbcQbqSK3MkJOc6MkVEuksiqxAGWVR6uvrADDNEr6qBgrpBN0HDrMw
      O43LrrC0GtlW/zzBWhprA1hUG3anjXg0QWdHC6tr62W3pagOYkszdHTvR1IUJEqUihqaZuzo
      N/iUu7qefSGVkdmtxVbVUMvS1CT5grZ5SWS2KPPH/+e/JLk0iSMQ4uqlS+w7cgIASZI5dOgQ
      Ft3A73Ghqh6eerILm9WDoecopqM0ux1U+xzYKBLbSOCtu3elrs9raWlhaXYWb7WP9vY2nHKe
      mcV12ttaCHhdW24nm4pSMi3k0jESUZPm1jasFgu5VJK2jm70TIyaxvCOB0AtLS34nCrRjMH+
      ltCW3pOIrKLYnKQT62TzJl6nlaYDz7I8O0F37wHiK3O0dWytxAqAK1CPolhZXI7RUG1Httdg
      FpLUNISRS2m81Y3cffHnvftnkU1yusorv/cNFucX6G6/d1mUL9IKGZJ5HbdkxW8tYW3qQiqm
      MKyu+zII9bpdzC6t09Xdgl7M3/P1Dk8AmxLhwOGWR6ssCty+kaGq92lxualT1EC1bncTeIAM
      jaIho263FuTnmSZFTUPdQjWEva6sFWGG9uglgCDshFgSKQhlEAkgVDSRAEJF+2w6tKY9nIJH
      gvAgaZpGqVTa8us/uwyq6/oDCUgQHibDMMralsUpkFDRRAIIFU0kgFDRRAIIFW3z1ErT5KNf
      vUn9oZdx5Re5cGOEupZ9LI1fxe6u4qVXfp+g+/Gtgf8oW58fYSnrQosvYPOGOPgVj4O6m1Rk
      iaG5GA5y6MrtOVlZ3cKTTxx6ABHvzPx4PzGCHO7a+WzQndiUAEYpzfj8BouZ8ziVIj/40Y/I
      pVOM9J3C7gndvzk6wiZGMcvo5AySu4VSOkOB8r9n0yhxc3AcyWYnVcyhyRrPPXWYU+evYMK2
      H0P0oPj9AdbXi7sdxuZToMlbNzj8tW8SUDVaw428+cYbfHJtGKtqBdMglU7vVpx7minJhJsb
      0bUcVtWJxbKd55ZItLQ0UyxqWFUVi0VhdHQMl8Ox1WdGPFQOhxPlEXiqiPTb5wSIsijCnpDP
      57Hbt75gZ/dTUBB2kUgAoaKJBBAqmkgAoaKJBBAq2me1QcsZOQvCo8owDHEVSBC2SiSAUNE2
      3XKMLU3x6zOX8dc08e2Xn+X993/D7/7ut/jbd39OqiDxwgtf48zp06A4+P5rf4DjEaw2Igjl
      2JQAqegqa7EM8yv9PNXpZ3Z6mv7pVRZW1mmq9jMdKfL0/jBRV6fY+IU94UunQFU1dXgUONN3
      i9b2NoauXcbudJPNF6kJeh9aYOtraxQKWcbGJshl0wwPj1LQxLLNhyWbjDJwa5hCSSe6vkah
      WGBsdJR8aW/8BpGNDQzT3FwYq5TPsrIeweHyYFUkfD4viUQSJAm3QyWV03GqErqk4rBtZ8LW
      1uSSEd78xW94+ng3uYKJrnpo9Mts5F0c7Kx/YJ8r/L3By+couhvY3xLiFz//Je3dnRiKleaW
      Lppq/Lsd3l1tqTBWKcdPfvYe/+hHr20+AsgWK16vF7fLiUWRSSRSuN1uME3SuRI+rwtFsVDM
      Z0imUiQTCRKJFIZpkkql0HX9t39LoBvbn4M4PT2N3aYQSxWxWCVsFoWZxRjdbbXbblMoj7+u
      hRafyZlPrmOz20ik8nS0h7dVHPeRY3XQ3XG7+vam3fjiSB/vX53D0IrYSgmqQwEkfy03L99k
      38GDvPoPfpdMYoPX//qvqN1/lIkrA3QePMiJg3W8cfITfu8732X++ilG4xb++R/9GK9je7Uq
      e488Sai2CafLxuz8Ch6bScluI5PJo5ZRcl3YPp/HycJagd95+SVSkVVsbg+zM7P0dJa/UOdR
      1NrShqxn+dJ5TDaT5sDBg8z2f8Lo5BzffvUoI/3jBKsC9F86g6Omi8P7O2g98STzAxP4Q0FC
      dS00+PtY20jyzNNPoqwo2974P1VTd7vs94He22XWwztqTSiXJxBif+B2xetgze3fore3dzdD
      uq9qamvB+EJ5dKe3iu9+/w/obAxwSYWucIjRhSihgJPIyjLPvPp9HAqMJJpxqDZCVW5ia4ts
      xGqRVDfVVX6sTqgNitsLwmNAtojq0MLeIqpDC0IZRAIIFU0UxxX2FFEcV6hoojiuIJRBJIBQ
      0UQCCBVNJIBQ0TbdCS6kNnj7vQ8wVRevfe9b5Aolxq5ewN0Yxu2pxue0YrHImCiMjw2zb98+
      tJKO2+Mp5+Hm9zQ/McJSNIHL6UYzNOyKQiyZpr61m9b6ez98O5dYZ3B8Bre/ln3hKi5e7cfh
      9pNPrNHc0YueWCAuhzjS3Xz/gt4lk7f6sNb20hy0cfP6VVDd6PkUqsuPnkuC6ubIof1l1wad
      nRhhLZbE6XBSMnT8LgcL6ymOHD6Ix2krqy2tkOZ6/zBW1YZWLCCrNqRSAVN1cuzwgTIjg+nx
      YZY2ktQEPGxEYgRCVSTjMdp7j+HewgwcPbPOmatTHHvi0OYjwOzYLXpOvMz3vvUN5sYH+W9/
      8V9YTaQZvHGFi+c+4KfvfMjVS+f47//rdWZmZvjlm/+bt978GxZi9346dzlyuSyFXJZcoYhe
      SHHt5ij7D+wnsrG1mYgOXzUdTTXIioVcKoqvphUtG0VR7GxsbBAKVaPvkcu+LlWhqBlIskJ3
      VyfxeBxd15mZmUbXdRZmptlOT+cWFlAViWyugF5MMz69hEOVicSTZbdlsbnp7WpFVp0c7O1C
      KmZZ3Eiga9q26pa2dXShZdM0tHfjsqtohTyFXI7CFtcqZLN5PB4n6xuRzQnQ3NnDrYsf8MuT
      HzAxOUWwyodssdPa2oaExPEnjzM/O4/H48LhsOOvaeTJI/sxDGMb3bg7yaLidTlRrRYMVI4c
      6uLW4BCBYNWW3p+JLXPq4gA+l5W8YSW6NIlsdWJRrUgS2OwOrI/i0+O3weZwYZEhGo0wNj6J
      2+3CplppbGrGZlOpbWpiO9MSmxobMUwTh8OOYVppbqpHkWWkbdSZLuWS/O2H5/A6VX79/od4
      axpoCPnZ7iycqYlxnC4X/VfOE8npKIoFj8eNrm3x+r+kYLFISHppjxfHNUpEEzmCgYe3km1X
      mAbRWIJgMLDbkey6sorjGvk9ngBCxRHVoQWhDCIBhIomEkCoaCIBhIomiuMKe4oojisIZRAJ
      IFS0TQlglHKcfOdtTn748Vfeol5bW3vAYQnCw7GpKsTEtTNs2Npp9kksz4wwMD5PR2sYX1MH
      S+M3mRlbwFlbz+rkDcKdh2mq89P95EvUbGUGkiA8BOVWhdg0GzRYU8f5M5eYtlrwqkV8Tgvx
      ZIqxT86hWmXqwj0YRgxrc5gDnXW8+8k4z31dbPzbZeolRkdHqa5rYGV5GavdjUMuYfNVUxP0
      ldeWaTI7NY7NE0LPxdAUJ05Zo4CN5oaaB9SDrcskouhWF/GVeZyBGkqZKKbVQ0Pt1uZ3PSib
      E6Cxm3/43Vokiw2HTSGezBD0e4nFE9hUFSQFMMDU2Vie5pknj21japTwqVI+Q01jmOHhMbrq
      XESwMTs3g7wapeaZE+U1Zuo4PUHGRgew2NxgrNEaDjMxNvIIJIDBwJXz+NsPE48XMFdvYeoa
      hmzd9QT40iBYkiSQJBSLSlUwgCQrBINBXG43LpcDl8uFy+2lpesIL3/tyGfvKxXyFPdI6eyH
      xWp3MTE0yOGjRxhfjNLT7MGQ7JjbmV0rKURWZmnrPgCYmKaJJEkoksTu/yoynV2dKKoTuZQi
      mUlhYgHD4P7OIy7fF54QM847p/tRVQvf+ebXGBydpaejmYnpORrCYdbn5lADNfgtRRKajTqv
      wuRSnNTiELqtinB3L/GlaTp6elmYHMPqreZAd9tu9e2RV8imkG0OUskUXV1dIDsJ1/uxeavL
      bss0SuSKJrZ8gcZqP7rFhWkUCbd38ihM/HZX1aPKDqyFIO3dveSTGxhW165fhvzCIPg067YO
      wj6JCx+fpqWxmqHJFQJNYTKRZXIpGYtaYmNxkry1mtYGD709vUwM3yRY08Ly2hr1rZ3Mz4xi
      lhRkxeSf/dN/spv9EypMuYPgTQmgl7K8f/J9cIY4EPZzqX+CJw52Y/FWE1mcQlF8GEYGCikS
      eGjymAxMr9HbVsvyeoqG5mYGb16n9+gxitkCupblySefeiAdFYQ72VECCMLjThTHFYQyiAQQ
      KtpnxXHLKSgqCI8qTdMoFotbfv1nl0ENwwDTJJNOopkKPq8bANPQyOY1XE4bmUwWl8t1/6MW
      hPvEMIyyqpRsug8QX5niV2dvYkXnd7/zbYYH+unqbOT8tUXaaqxcH57mG08fJiu5sOppNuJZ
      jh0/hkUW94OFx9OmqhDT/edZlqoZP/c+7to6Gtv3MTsyiGp1kMGOnokQW5nB9DZR71MIuKwc
      eOkHNPnFfCDh0VBuVYhNCWBoBU598BuyuoWnjh3kwoVLHH7iCZKpIquzI5jOKkJ2jbw1gNtq
      4Hda8DX1EnQ9uIdmC0I5dpQAgvC4KzcBNu2686kN3n737yiUTH7w4x+SSyVRjBzLSYPmag82
      lxeb9cHv7RdnxplZXKOlrZ2xgWsE6prRigUa2/bRENpLVd4Mzp58lwNf/xaTA/04vUEysRVs
      nhBHD+3f7eDuI5Pr5z8i0PkEsflJUB0Y+QyS3b2t4rifyiajnLsywNHuMBOzC/QefwZHmcPR
      TfcB5seH2PfU87gkjZmpSd74yf/i1LkL3Ljex5//+f/LG+9+sO1gy9HY0oFqlrC7fdi9IcjE
      sdis5PP3twjv7pOoq61Gl+3s6wyTSCbI5Ytks9ndDuy+q6+rRTMUurvaSW4ssxxNUSoWt1Uc
      91Oqw4PPbae2uQ2XxSCXL/9S/qYECHcfZLzvPEVZIba2iNNXRV1DE1arjZZwE92d7TsId+vm
      piewOt0Uswl8wRqaWsJIhoks77X7dhIOlxtFyzA2tYzXpWK3u/dghQ4Ju9OJVdIYm5zBW1VD
      U00ARdnZPFWL1YrDbmdpbhJJdW5rGrkYAwh7yo5qg2aiy/z0b37Cm+99+JVv0gspRifnWFu7
      Xa9/eHCA61euIlJIeNxsGtG6gvXsaw7i73mS//6f/xNPnDhx+1LogU5mF9fp6N5H35WrfO+7
      3+TWjSHGZlb5d3/6LxmdmMZeSjM4dovG2joCTd1sLE3zysvf2K1+CcKW3PWkura5i+TaAug5
      Yuk8Lzz/LImcjs9uMDw6hcVVRchnB9PE+O2MaofNSiaf5+ql80TiGaamppiann1onRGEcn1p
      DFAs5JEtKqViEUU2KRQ1FEVBVVU03aCYz+JwutB1A61UxOVxMz40TENrG4au4Xa5SKfTWK1/
      f3fY4XDsVv+ECrPtG2HaHnlmllDZcrlcWTvcz4rjfn6PLQiPq1KpVNa2vPlOcHKNN97+NYWS
      yT/+Z39EJhbB54KPLs/yzNF2zn58kVdefhENC5JRJF/UCYWqRG0g4bG1aU3wWN8pEp42Js5/
      QFV9LcmiiawXMHSFtVgS09AoRmeJKTV0VCkYus7v/eGfUO8Vk+GER8OOSiO29BzmZ2+fRJMt
      1NY3sHRjgK6ebtJpjXQyhu7w0ODroC3QikPKU+ezglhTLzzGRFUIYU/Z0RFAL+V4/1cnyehW
      vv/q97ApEqV8mnjOoPohPmt3ZX6KudUYjbVVzC+tEqqqIhaL0dp1gGr/1jv32DCK3LgxgMMX
      IhNZorq5g+b63a7n+QAZGuPjYyytJXnxhWd2dQy5KQGmBy4T7DpK/sYF5menOPnWz2kMNxEp
      KGRWZul+8kW+841nHnhQwdoGpiYmGU7leOqJdibmsjRVe0imc3syAdKr08zHirS7CkSicVxV
      e2826CayhSq3SsHSvOsXUDbdCa5uDDPSd4HVyBrDgwNoSDg9AaySwdpGhNJDKn67sriAL+DD
      0EpMTi9QyES4NrZMXZX7oXz+w2Zz+wn5PaQSUeobmknEorsd0gM3s7BGR0vDbofxhTGAaZLP
      Z9FNGbtqIZcvYFVVSiUN2dSx2ByoD2FBjKFrZHIFXA4b6UwO229jcbjcD2VBzm7IZtJYbQ60
      Qg5FtT+U73k3lYpFLKp6348AOyqNmEusc+7SdSSbh1deevaubzKKGWZXUjTUBrDZbCzNz6FY
      IJIx6e1s2VkPBGEHdjQItrn82LU4/q5DvPHXf0lLdw8TkzP0djczOjnPwcOHGbhxk2eeOc7w
      4Cj/e2SWf/9v/4RLfdcobEzhanmCgb6LHDm8n6sDU7z2g1exPwq1uQXhLjYlgPtnQdUAAAlc
      SURBVGyx4nLacbkcmDYfRi5JZGmcSVXi8KFexmaXKWQTjE9MkZfsNNYGkEyDQkmnsamZtJZm
      aGwCh02ivvMohXSCAuDzlfe4H0F4WL50otnWexzV6+S5r51AlUq4qurwej1UBYP4grWsVrlp
      bu+gWDRIRNYwJQWf00bX0SN4fFXUVNfT2hbGsDiJxyOASADh0XVfboSVigUUqw1RIE7Ybdsa
      A9yPNcF6Ya9VbBAeR8VisaziCXutzIIglEUkgFDRRAIIFU0kgFDRNl0GLeWzaJIVh81KqZAj
      VzJRzBI2l49sKkGxmCeXL+ILhtAKOYLB4G7FvWeUCjkkqx0FnVzBoJhLYnP5cNjKX6JqGhqF
      kkkhkyBvyHjsFjQseN2PzgTCRCyC1eEmGd3AVFTqaqt3dULcpiPA6tQAt2Y2ALj2yVlOfnSW
      yPwI10fn+ejUaeIbq7zz3nskIiv85f/8nyzHxZWfndH58J23iRZhrP8Tbg6PMDy2wMjw0Dba
      Mhm6eo6hqRWuX7+GYZisrq0z0H/zvke9bUaJjUiMmzf7cdoUxiZmdjuiO58CmabOwPAIK5Mj
      OJsPMnb+lwQau+no7qWxsYno3DhOv5+Ll68+7Hj3GIV9+7rQslFmlmOkMiWsUoG1jdg22pLo
      2rcPyTQIt3UyPztNKOinUNQov2Lmg2Ei4/O60QyT1aVFeg8f3vXp0JvqAsWXZ/jN+atUV1dR
      3dBOW5WFhbRCfnWa9qMncCkmA7eGMQ2dw4cPc/NmP0ePHtnlLjzeIouzqDVhPFKG2ZUc6egC
      vuommuqry25LyydYievkEytINg9yKUPetNLT3bHrGxrcPkUbHR5BdfuxmhoNLa0o9zkw8YAM
      oaLtqDiuIFQakQBCRRMJIFQ0kQBCRfvsRthOH1cjCI8CWZbL2pZFcVxhTym3OK44BRIqmkgA
      oaKJBBAqmkgAoaJtmg69PjtC/1IBezHOiZde4m5DidTaDFNxC5bUAilcPHX8EOIaUvmMQpor
      NwapbeogYMmwmLaR3ZiiNty1jeK4JotTw+QsIXLRBVR3EKmYImtYOHpw/wOJfy/YlAC5VIzL
      56/h97qoqvHws5/9hmNH2lmNpug8cIzRSx/S+ez3ePFoC+PnTiJLYFMUfj3dz+JGgpa2Di5f
      usyrf/THHG6v260+PTYkq4O2xhCTS4usFlYxnG1kE2lc6TRQfnVoi2IQT6TJJVMkltYJelQy
      JQUQCXA3XzoFevHlrzM9PsFA/wA2RSeVLaJarSxOjZIsScRjcWRFJWDNEWjah1YqYZg2Xnr+
      GOsbG+RLOjLikQNboeUSLMVKUEzjcLiIJ2JUhWpJJRPbaE0i4A8gSQouhw2f34ckWbDKEg+n
      pPHjaVNdIEPXMJAxtBKyLKEbJjcvnKP1yecJOVWKpRKKrGC1WtA1DWQFQ7/9dElZljCRKBWL
      2Ox2ZOlRmID7qDMp5PNYVDuKZKIZ5u3v3qJiUcofnpmmgWHc/h0lWQFTxzAlVLVy7vHsqDiu
      IDzuyk0AcRVIqGgiAYSKJhJAqGgiAYSKdt+K4wrCo0AUxxWEMogEECqaSAChookEECrapgQo
      5tJMTU0RTaTv+OJsOkH+IT0su9KsryyRL+msryyRyu7sgoRp6GSzOZbmZ5meXXhkSiN+Xjy6
      TiKd2+0wNs8GXZu+xbXpNLHV83zj6YMkTSdDV05z9KnnWFhaI+jQwBumraWW+PIqC4sLODwe
      rE4/Tj1JXLfz7PFDu9WXx5eeJ5UtMDl7hZqaRiZmbvDsM09vu7mJoatsFL0c29/Ixb5BWlua
      7mOw94FRYGR8HpsqcfSJJ3a1bOOXnhK5urTIU089yclf/wJrsAW/y4ddNoivTpL1VGNPTiLL
      JWZuDVGU3ZjrG9gsFtrCjdzovywSYBtMU8JhVzFlGxY9TX24fUfttXXtIzm8TGRhmpae3S9A
      +yWSFYfFYGktjgmPTgJ4qur5/qv7aQp5cOhxYiUH1fYSq9EkvlAzDY0NBAIB+vv76erpQVZd
      yJTA0ElGVujs7t31Dj2WZJloJEpzfRVTU3O0dAR21pxio7YmCFqexpDrPgV5H0kSTpeD3rqm
      XR+EiuK4wp4iiuMKQhlEAggVTSSAUNFEAggVTRTHFfYURVFEcVyhconiuIJQBpEAQkXbdCfY
      NPP8t//vv9Jx7FmWbl3GXd3IK995laFzbzO6biBb7Hzvd05QMFWsyu03u4NVWMStX+Ex9YW5
      QDbaW2qJxlPohoFkdeF2WjAMAxOJTCbFUP91PhmcZX+4lpwOP3jtH+5O5IJwH2w+BdKyxLIG
      TtVCR+8T/ODVb2MBvP4qVAVqa2pYXVunrq6O3tYqNHsI+QHs/Uv5NGc+vsja/BQXLlxgaGiI
      S5cvsRJJ3f8Pe0TElicZHF/ket8lhsemtt2OaRpMjN7iNx+dQy9mOX+xb0dxxVdmudB3k4W5
      aa7duMlG/M5T5ctiaIyPDvHBqY/vSxFNvZjj9Nnz25r2vekIIFld/OEf/dMvvejws9/k8LOf
      /4vJxK2bvPLivm185L3pOmDqzC+ucaC3lamFPE0hyBe1B/J5u83UCoxNTmI4W8lGY6glGdje
      jFBJkqnyqOTCHQz0D1Aq7Ww1QDweR5EMVpZWwGplbHKW0PEDO2oT2YLfoaC1dd2XiZOabiBt
      M5U2HQGSawu89dZbXLh26x5vk+g8cJRqr2NbH3ovdpcb1SLjc6n0D46TiS1xYXAWv2frk5we
      J7pWwuVyEY+tIluc2/4xPzUxs86+9jrcXg8bGxs7WhBjc7hRFR1FtVMsFqmrrd5RbJ+aW4rQ
      1lx+Bew7sTlc2Kzbu4+1qTbo3OAFfn52iN/5xotMDfQRautlceQKTo+fIjKN4S60XI7nnztx
      XwL/KoZhIEkSumEgSxKGYSDLCvKDOOd6FJgmhgmYBkjyjvp5+7uSARPDMMsqE/LlsMzP2vv0
      N7gfdY8Nw0CS5fs2df7T9nI7rQ36zIuv0Nvs4ewnl5mYmgO7n6Dd4Omvf5ehj99B8dXep5Dv
      EZgsI0kSFkVBlmUsFsve3fgBJAlZlpCVnSf532/w0o42/tthSSiK8rl/d9TcZ+T7uPHvpL1N
      Y4Ca1v34JDuK08af/pt/hc1bjVHKY5NN7A4Ti6eRo/vD9ylkQdh9Wy6Pbpomhmmi7HCPIggP
      Urnl0b+0JvhuJElCEQ+9EPaY/x/J5LlcG4QBSwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Age.trips.est' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9aYxc53nv+Tvn1Kl9r+p9X9kkmxSpXZEsWY7XeMtiJ9e5g0wGmDszwFxg
      MJgB5ms+D5DgXswEmASDe4FMNiexY8eWbG2URZri2tx7X6u7q6uqa9+rzjofKEtqstndRUqW
      5D6/L2R313nqOctzznve9//+X8E0TRMLi0OK+EknYGHxSWL7pBOw2J9fPaQFQdjtj/zqEb7r
      3y32xCqATzmmafIPf/3nHHn5v+Fop4NUtki0o51UPMHQ6DC1zAb/9G9vgezhu9/+bco1lTs3
      p3jq6ecolGr0d0XYTKTwByPUCtv4ol2UM0kamkhXRwhddOL3OD7p3fzEEKx3gE839fwmf/6X
      f0O4a4ioS8EhmeTrBrdu3eF3/+R/pkPdoBI8wniHh/WlGc7NxjGLCXw2g2tzGzx26jjRSIhi
      sY4he1CbeZRClSOjPcTSFb767T+gw394C8B6AnzKWVtZ5z/8L/87q9fPsxlfZ2M7z7FTz+Jw
      BTk+0o3fFuVHP36VZbufNp+JzxugO2oHmwt31zjdPpNrM8v0jJygnl6nZ3gCSdV45vQIU3/z
      U9oP8cUPn8EnwEeZ7metzRxbvMON+U2+8tUv47QdrP8in9rgFxeu8bkvfJmo3/X+77PJdfKK
      zGh/18eV7qeO3d6lPnMFoGka1Wr1kePYbDY8Hs9HkJHFZ4Vms4kkSdhsHzR8rG5Qi0ONVQAW
      hxqrACwONVYBWBxqfu3doIXkKjdjJahmePbFz2MThbtVKAh339JNEwQRuDvCKQoChmny2eqv
      sTgIq7PXePf6PJ39Y0hamZdeeom5G5cIDJ6iw+9AFMEwQJTEj+38//p7gUyTH/zNXxGdfIna
      +k02twu0RSKMTk4yd+c2sc0EgWgXjkaWVFVnvMvHxdsxnjo+Am1DfPOlp61eoN8Q/uHv/44/
      +t4f8/3vfx+7LCIqdeLbGXr6B7l0+TovPHOaeFXmv//330L6CL5vt14g6c/+7M/+7COIfXAE
      gVouS8/RSbIbixSrTTo7IkxN3cTl9tI7ehybVkatV6mq0BZwUWxAZyjMb33xZVyigKqq74fL
      p9bZrugklm4TzzfobAtRqVSx2+3vf8bQmrz95hvIvjA3L57DdAYJB7zvf8Y0dM6//Tplzcbi
      rcvUcBENeSmXKzgcHwwUqfUSP3v157j9Ac6+/QsiXf24HfKO73n9Zz/DHWpn6vzbGM4gIb/7
      vjiVXJKfv3mO9rYAr7/+Nj2Dwzju6dffWJqmath598xruMLd+Fx2qtWd+2WaJjevXMVmhzff
      fpeBoWFs0gf3yszmMq+8eY6A18XZd68yODwEepOGaiDbPrikpq9d4OrsOloxwcJmnr6uDj48
      RJJYm+fC9XncksL5q9MMDfajN2uopm3H99268ks2801SK3eI5xW62iPsNdTSLCR569wlZHcI
      CQ0bOoVylWA4TLZQZaS3i6NPPkdn0P2hrQzeeeM1PKEwZ995l4bSoKOtbUfclcVZXP7IjtwA
      dF1HFEVE8YNj/YmMBD/5ha8AMPDtP3r/d7/95Q9/4hl+9qPvIwVdfPX3v8k3xA92RNO0HbEu
      vvMm/iOfY+b8BYZOPIs5McB//au/5Knnnie2meC3Xv4ybQ6VSDTInVszdEejzM4uMNrf+X4M
      Q1fwByPcuT3NicEgt6ZnGe328Z//4j/xuc89y1p8m69+8/dwKEXCITfvnHkTxYDzl2/wrS8+
      934c0zTx2g2mLl9AcLiYunCJ7q88zV/8xX/hpecfYz1Z4Nt/8B1sNjuVdIzLlxSKpRKXbi7w
      xWeOvR9Hb1b4t3/9AUefeAGC7Vw4d5GvvDDOn//1v/K5J0ZI5Jv8wXe/QyWxwI9/eoYXPjdO
      IVPg5tIWzxztfT/O7O3rpHM1Ll14l7ZIhOWtPNlbr7GhRRDKSUK943zl888ydfUqzvZRLsc2
      aDQNTp86gftDV8Yv3n4b3dPBhcwmfqeDZKXJjVf+P/TIUcqpNXrHTvHSs0d4+8y7jD31PMnl
      aRrGIo9Pju/ZdHnyc1/myc/t/rdvf/tBW5nM3bpCPJllOpbh806J3MYSdTlCQCiTbjpo94ts
      bGywth5n8vQTzE3fJhDp40uff+a+aJ/gS7CJaZqkUqld//q13/0j/vg736JezFBTdLbWVylU
      Gvd97vTp04BAIBwltbWBIEh09/aS3ErQHfUQ28og2iR++e41jk4MceH8BcaPjO6IIQgiF869
      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
      hyLLLxw7/wET8hl94KJqXgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Age.trips.pct' width='192'>
      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
      AMC4/5pv3ShKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Age.n' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.boards.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.boards.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.n' width='192'>
      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
      tmMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
