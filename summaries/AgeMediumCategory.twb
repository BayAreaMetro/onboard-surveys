<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xml:base='https://public.tableausoftware.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <repository-location id='AgeMediumCategory' path='/workbooks' revision='2.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' inline='true' name='csv.41592.618980856481' version='9.0'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\' driver='' filename='AgeMediumCategory.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='AgeMediumCategory#csv' table='[AgeMediumCategory#csv]' type='table' />
        <refresh incremental-updates=''>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>approximate_age</remote-name>
            <remote-type>130</remote-type>
            <local-name>[approximate_age]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>approximate_age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fare_category]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>fare_category</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fare_medium</remote-name>
            <remote-type>130</remote-type>
            <local-name>[fare_medium]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>fare_medium</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>3</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[AgeMediumCategory#csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
      </column>
      <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Detailed Fare Category' datatype='string' name='[fare_category]' role='dimension' type='nominal'>
      </column>
      <column caption='Detailed Fare Medium' datatype='string' name='[fare_medium]' role='dimension' type='nominal'>
      </column>
      <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
      </column>
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
      </column>
      <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
      </column>
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
          <alias key='&quot;WEEKEND&quot;' value='Weekend' />
        </aliases>
      </column>
      <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Legacy\Data summaries\AgeMediumCategory#csv (AgeMediumCategory.csv).tde' schema='Extract' tablename='Extract' update-time='03/18/2016 10:47:41 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_6780221130809601]' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' />
            <calculation column='[Calculation_6910224103336532]' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' />
            <calculation column='[Calculation_7570224103828506]' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='6007' timestamp-start='2016-03-18 22:47:41.104' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_6910224103336532</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_6910224103336532]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_6910224103336532</remote-alias>
              <ordinal>0</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;16 to 22&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Younger than 16&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>approximate_age</remote-name>
              <remote-type>129</remote-type>
              <local-name>[approximate_age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>approximate_age</remote-alias>
              <ordinal>2</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>98</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-1872&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Missing&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fare_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare_category</remote-alias>
              <ordinal>3</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Missing&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;youth&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fare_medium</remote-name>
              <remote-type>129</remote-type>
              <local-name>[fare_medium]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fare_medium</remote-alias>
              <ordinal>4</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>75</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Clipper&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;transfer (santa rosa citybus)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>5</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>176</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>4010</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>6</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>7</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4275</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>19478.615538458998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>8</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>9</ordinal>
              <family>AgeMediumCategory#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3762</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>19809.785121811001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_6780221130809601</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_6780221130809601]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_6780221130809601</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <scale>1</scale>
              <width>16</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cash&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Ticket or Token&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>64</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_7570224103828506</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_7570224103828506]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_7570224103828506</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>18</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Adult&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Youth&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>72</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='67' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Age.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Trips by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:trip_weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:trip_weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Age.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Trips by Age Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Age Category' datatype='string' name='[Calculation_6910224103336532]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if INT([approximate_age]) &lt; 0 then &apos;Missing&apos;&#13;&#10;elseif (INT([approximate_age]) &gt; 0 and INT([approximate_age]) &lt; 16) then &apos;Younger than 16&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 16 and INT([approximate_age]) &lt; 23) then &apos;16 to 22&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 23 and INT([approximate_age]) &lt; 30) then &apos;23 to 29&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 30 and INT([approximate_age]) &lt; 40) then &apos;30 to 39&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 40 and INT([approximate_age]) &lt; 50) then &apos;40 to 49&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 50 and INT([approximate_age]) &lt; 60) then &apos;50 to 59&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 60 and INT([approximate_age]) &lt; 70) then &apos;60 to 69&apos;&#13;&#10;elseif (INT([approximate_age]) &gt;= 70 and INT([approximate_age]) &lt; 125) then &apos;Older than 69&apos;&#13;&#10;else &apos;Missing&apos;&#13;&#10;end' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6910224103336532]' derivation='None' name='[none:Calculation_6910224103336532:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Younger than 16&quot;</bucket>
              <bucket>&quot;16 to 22&quot;</bucket>
              <bucket>&quot;23 to 29&quot;</bucket>
              <bucket>&quot;30 to 39&quot;</bucket>
              <bucket>&quot;40 to 49&quot;</bucket>
              <bucket>&quot;50 to 59&quot;</bucket>
              <bucket>&quot;60 to 69&quot;</bucket>
              <bucket>&quot;Older than 69&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='70' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-family' data-class='total' scope='rows' value='Arial' />
            <format attr='font-size' data-class='total' scope='rows' value='11' />
            <format attr='font-family' data-class='total' scope='cols' value='Arial' />
            <format attr='font-size' data-class='total' scope='cols' value='11' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:trip_weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]' value='72' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6910224103336532:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Cat.boards.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='#4f6e8d' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='76' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Cat.boards.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[pcto:sum:weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='74' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Cat.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Fare Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Category' datatype='string' name='[Calculation_7570224103828506]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [fare_category]&#13;&#10;WHEN &apos;adult&apos; THEN &apos;Adult&apos;&#13;&#10;WHEN &apos;disabled&apos; THEN &apos;Disabled&apos;&#13;&#10;WHEN &apos;do not know&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;easypass or class pass&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;Missing&apos; THEN &apos;Missing / Unsure&apos;&#13;&#10;WHEN &apos;student&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other discount&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;free&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;other&apos; THEN &apos;Other Discount&apos;&#13;&#10;WHEN &apos;senior&apos; THEN &apos;Senior&apos;&#13;&#10;WHEN &apos;senior or disabled&apos; THEN &apos;Senior or Disabled&apos;&#13;&#10;WHEN &apos;youth&apos; THEN &apos;Youth&apos;&#13;&#10;WHEN &apos;medicare&apos; THEN &apos;Senior&apos;&#13;&#10;ELSE &apos;Error&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_7570224103828506]' derivation='None' name='[none:Calculation_7570224103828506:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Adult&quot;</bucket>
              <bucket>&quot;Youth&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Disabled&quot;</bucket>
              <bucket>&quot;Senior or Disabled&quot;</bucket>
              <bucket>&quot;Other Discount&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='74' />
            <format attr='height' field='[csv.41592.618980856481].[none:weekpart:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]' value='64' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_7570224103828506:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Med.boards.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[sum:weight:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='75' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[sum:weight:qk]' value='#4f6e8d' />
            <format attr='font-family' field='[csv.41592.618980856481].[sum:weight:qk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[sum:weight:qk]' value='11' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='120' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Fare Med.boards.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Boardings by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[weight]' derivation='Sum' name='[pcto:sum:weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
            <column caption='Estimated Boardings' datatype='real' name='[weight]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper&quot;</bucket>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='65' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='78' />
            <format attr='text-format' field='[csv.41592.618980856481].[pcto:sum:weight:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='88' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[pcto:sum:weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fare Med.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Surveyed </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Riders by Fare Medium</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AgeMediumCategory#csv (AgeMediumCategory.csv)' name='csv.41592.618980856481' />
          </datasources>
          <datasource-dependencies datasource='csv.41592.618980856481'>
            <column caption='Fare Medium' datatype='string' name='[Calculation_6780221130809601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;cash&quot;)) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;pass&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;monthly&quot;)) THEN &quot;Clipper (Pass)&quot;&#13;&#10;ELSEIF (CONTAINS([fare_medium],&quot;clipper&quot;) AND CONTAINS([fare_medium],&quot;transfer&quot;)) THEN &quot;Clipper (Trnsfr)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Clipper&quot;) THEN &quot;Clipper (Cash)&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;cash&quot;) THEN &quot;Cash&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;pass&quot;) THEN &quot;Pass&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;ticket&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Ticket or Token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;token&quot;) THEN &quot;Ticket or Token&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;do not know&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSEIF CONTAINS([fare_medium],&quot;Missing&quot;) THEN &quot;Missing \ Unsure&quot;&#13;&#10;ELSE &quot;Other&quot;&#13;&#10;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Surveyed Riders' datatype='integer' name='[freq]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Calculation_6780221130809601]' derivation='None' name='[none:Calculation_6780221130809601:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <sort class='manual' column='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Clipper (Cash)&quot;</bucket>
              <bucket>&quot;Clipper (Pass)&quot;</bucket>
              <bucket>&quot;Clipper (Transfer)&quot;</bucket>
              <bucket>&quot;Clipper (Trnsfr)&quot;</bucket>
              <bucket>&quot;Cash&quot;</bucket>
              <bucket>&quot;Pass&quot;</bucket>
              <bucket>&quot;Ticket or Token&quot;</bucket>
              <bucket>&quot;Transfer&quot;</bucket>
              <bucket>&quot;Other&quot;</bucket>
              <bucket>&quot;Missing / Unsure&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Missing \\ Unsure&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='alphabetic' column='[csv.41592.618980856481].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='191' />
            <format attr='height' field='[csv.41592.618980856481].[none:operator:nk]' value='58' />
            <format attr='width' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='108' />
            <format attr='color' data-class='subtotal' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='italic' />
            <format attr='color' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='#4f6e8d' />
            <format attr='font-style' data-class='total' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='italic' />
            <format attr='width' field='[csv.41592.618980856481].[none:operator:nk]' value='92' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' scope='rows' value='Arial' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-family' scope='cols' value='Arial' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]' value='11' />
            <format attr='font-family' field='[csv.41592.618980856481].[none:operator:nk]' value='Arial' />
            <format attr='font-size' field='[csv.41592.618980856481].[none:operator:nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[csv.41592.618980856481].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[csv.41592.618980856481].[none:operator:nk]</rows>
        <cols total='true'>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</cols>
        <pages>
          <column>[csv.41592.618980856481].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Fare Med.boards.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Med.boards.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Med.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6780221130809601:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Age.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.boards.est'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.boards.pct'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Fare Cat.n'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='112'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41592.618980856481].[none:Calculation_0021115162220708:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6151115161013068:nk]</field>
          <field>[csv.41592.618980856481].[none:Calculation_6691114145422134:nk]</field>
          <field>[csv.41592.618980856481].[none:age:qk]</field>
          <field>[csv.41592.618980856481].[none:fare_category:nk]</field>
          <field>[csv.41592.618980856481].[none:fare_medium:nk]</field>
          <field>[csv.41592.618980856481].[none:operator:nk]</field>
          <field>[csv.41592.618980856481].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Fare Med.boards.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fare Med.boards.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fare Med.n' width='192'>
      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
      lP8P8suAddAkEXAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Age.trips.est' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Age.trips.pct' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAIAAADdvvtQAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO29V5Qk13nnecNmZGRGZkZ6n+WrvTfoBmhBI4qkyJFIUSK1s3N2zhmd0ctq
      9mh2z+6+aN/2ZXd2dc6e0ezRyMyKI0MLkgAI30B7312+Kl1Veu8iw5u7D1Xd1QCqIgsqNCgQ
      8XsCuuLL+4/IL29kxne//0UghMDC4p8K+qsWYPHxxkqgDwyE0DB2mLYhhIZhfNJmdPxXLeDj
      RyP38K9fWfgf/+33NtbzNtpJQFUnnCGv6/Vf/Kje5Q6c/pyXlDRVqgyQ6Qjj9EWFXkOBeICl
      y41+iHXWWx2PN2DocigY+lWfyoeAlUAfEAgvX74Be+25uXv3l4uayNUy91X3xP/27/9tizN+
      /7vfHfT7b712eVjNwOjRl/7hanz2mJNCVFlnGNxDETc4zT9+gL9/m3CEvvHVX4cEsm5hHwwI
      9ODksT/5d3/UbjSb5Q0NIucvPPelz30aINjRmejf/8MP14sVXkUOnTrnpJ0XLpz/7Kcviv3u
      UFJmxlNdGT80O33s6GHKECcOHf1Vn8qHA/JJu2d/WEBNfv2116LTxw5PJU2PM25euaTTwYun
      jzz6B+3h3MLhY8cJFPkohH4YQAgRZGe1VgJZjEYQBJqmd/yTdQuz2BdWAlnsCyuBLPaFlUAW
      ++JpJBC8c+sm12suZQpP4cUtRtBtlH78ox8tpgtzcw8BAMXcSnuofOijZHPr//DqrQYnP40H
      iYiPBn/+V//4vd/75vf/y98EUtO4ppC4xg0G1Ubn5KmTy0sr7mC0XcqOHz62dvvul3/3e/GA
      6ynI+ITy2utvffV3vvPjH/6QpohOdX1+OX345LnMWvbYwYm1Kv+9b/8mtu8hNJG7stI8ErbP
      La5hf/qnf7p/0e+BDfirpc5UhF6tDDmu26kWK/UWYbMfnYquZMt2p6PVaiwuLLpDQRvuuXDu
      yOPARjFdHRiFlbvrLT4e9vd6fYqiNv+kq8JLP/8Z7vTeeud1w+b2eZjNf2+Wsq9eusFQ6FtX
      b09MTkJVFBSDJLY+GIv3rs9na0JzY7nQSsUim88yDFV8+cVfUO7Anctv6DaPz+14cqBBq/zi
      q+/4vcwrr74ZHZukiK0LDg312vW7htC+MZ+dHE9Iw56BUvijGZzvVpdy9ezi7Y6EhgPs1ukU
      1l58/TJDk5eu3BqfmICqKKrb2uZuX7m7WpTaxdViJxkLb2nT5Nd/+RJid9+98qZOvVcb32u8
      +PLrLMu8+upbsbFJG7FDMpTzq7XOoN0dUgTg+hyBI9yAy+QLHqfj4JkLEdaxeVirlLmxsM7X
      s6V6R4IEy2z9SjcUYTVf8nvZJ19TVVWCIB7/r6ZIt1eKtWodJcmnU8pAyOe/8CmWdf0G4Xaw
      AZnrKgZqI3GKxD3e3H/9wYvnv/iNr3/pebvbq0rqk3E333mdOfDZh29fmTr1KQi1P/+z//P8
      s5/aKFU//cWvRZ1GJOJfWlyNhsOrq5mZVGQzRJR1XOMljO5V1jlJW3nn5+uSCxk23JHJr37h
      WczONFYWy+pA4NUzp086CAAAgAjqdRL379zE7MyDW7cS7Pn/+8/+8tnzh8v1/m996zsU5VR6
      5Qf34GDQvT2X/sL5Q5sD3b329v3VeoUhXBjoa/CVv/vP7omz9VJ+8vCZZ08dePOt1xQk0mvl
      lWztxMGJzZD0ymKz079542Y46M9Wu525V4sqC7m6Jzr1m88/uzA/j7gT7UJ1KGpnTp+gcQAA
      6JTW5lYLJO1QKM+Dm7cT7rP/15/91XPnDpcb/W98+zsL1680uoOlh3c4rnt7Pvv8uQPvv/Zf
      /Npvl4rlZ86dl4ShDUe7A97r87aabR/rQkj748O69fLV60sxO8cEpgK88Oovlj/3/Kffef2t
      Zz/72Vq1fPXtN2xMIMrAjXL3K9/5Pde7E5V0uL/z+ROSgboo9Cl9iUZZ1m0YBm23qRr0BkLh
      UIBlWbuDSc0c/5//1//lc2cPKjogDLVSrz/5JPPUqdMAoN5AsFYuIgieSCUa9XqIpYv1DgDw
      tTevz07F33j9renpycchQq+ab4rN3CKCEZ0BH41GCKDIiL1RqwAA0g9vkGx0PB4zcPvjj6vM
      tYtNjueFRjGPkDTF+GIhtlZvUYjS4aRSdlnHSNwZUHnO5WIeD1QoltqlDUVXyx3ehiLRWEwa
      du1uf6Vc1Ph2tckVa7Wwn7U7tkMIm9OJQwOBmfUyTdki0SgOZRmh67UyAIbbG5K4XjwWBbj9
      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
      PI6w2ZwU8f8DGWi9g281PicAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Age.n' width='192'>
      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
      63EhctcT9P3/UaDeVWOxmg8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.boards.est' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9V5QcyZ2v92VmZWZ5X+29A9Bwg4EbDIbjh0Oz5C7XcB3XXV1JZ7VP0pGO
      7tGDzupBermSrqS7Oro66+iWSy4pLodmyOFYYgw80AC60Wjvu7q7vDfp9NAzIAcYuEZj0MPO
      76W7qjIjI6rilxEZ8Y9fCJZlWdjYbEMEQRDEh50JG5uHiS0Am22NLYAtwGsv/Qtf/+Y3GZ5c
      vM1RJq/+6Hv8w9//AzMrGQAMrcLM3O3OsbkTjoedARvIJJOYagCPKvCP/8//gbt1N4ujp+np
      6eXy6ASf+90/59E2ibgW4Ct/+CJV3eCbf/c3uMPNXBmP0x7USGleDnQFWVhNEmobYHnqGg53
      BKeZxh0I4Qo0UylV+d3f+szDLu6Wwm4BtgCyGuTLX/lj3FqSvCZRyGdp6t5JW8hJXbcwdA3R
      HaSemOWVn73MlSuXSZRMVF+UWMhNKpnCsixy+RKhoJ9auYCg+rBqZXQlwG//zpeZH/oFbX27
      HnZRtxyCPQr08MllMvhCITA0VhMpVNWJIAgEfG6W46s0NrUgO0QqpTzpXJnmphirqwncXh+V
      UhGPS6aiCUxffJOfvzfMi1/+C/qjMpLLj6nV8LkV/vmf/4Uv/eGf4lWlh13cLYMgCIItAJtP
      DJqmIcvypqVnD4PafKKo1+ubnqYtAJttjS0Am22NLQCbbY0tgE84M1cv8PV/+meyZf2mz6ZG
      L5OvGpt2rVxigW9/65945a1TVEo5UqvLnLk8dsfzTr/5MueuzvDaD7/DuQsXmFpO3XTM8KWL
      aOZHn19KLTG9nL7DVSymRs7zzW98k7PDk7c9UqtmOHf+GmBPhH3iWZgeR0emkJznuz99lZ2P
      HmPs3OtojiC7e5spayanTp2hd/d+pobOcuzFL9EZtPiXf/0p0Y4BKsvX6HjkKR4/sPOO13r1
      1Td4/gu/z4XX/pWvf+0U7lAzy/EVrlwZZleTytW5DHv7mrk8X+AvvvKl65VrfnGVykqG+Ogl
      BnBTrev87F//hSefe4FLJ9+geeAgVn6FlaUpZhZT7D10jJELZ6hLbv7yL/6I2elpgv2HgFso
      BLD0Om+dHeFzzz7OudFFvjf0FpGOnSTmJ/C1DLA0eZmqofLEwT7OXR7BGxsEtnALYGpVTrx7
      6vrrhekxsiXtgw8ZHhmjXC5zN4O4Y1cukK1oXLl0CfMjji+Xy0xdG6Wi3fluaVkW5997k/cu
      jHBTUpbJlZGrtz3fqBb40Uvf5yc/f4NCJsH43PJNx0yODlMxQCtnGZue/9Bna/PTrGXL11+H
      W3twVZd54613uTY1y/LKKu5wC+1RF+l0hpmJa3QO7mNuYgxnqJU9fa2k4rP4WnpZWZzGlHwc
      feTOlR8g6FG5OjrKcirPQG83DbEYXTsfQRWqjFweYnlpgZXVLI8/9eSH7qyCqKKl5wm396HX
      ylQMEbdiMjQ8Ttjv5cLFIbLZLMVylReefYLJ8VEEV5h6pQhAIl8l5nPePnOihEOvMjk9y+j4
      BBVU9nVFyJZqLCwuogSa6I55mZybp6e355d526rzAPNXT/OjNy7y+T/4E2bO/pyhq5McOHyU
      7oFdzE2MMTe/wPzYFf74r/4dXY3+26aVWhzn299/mZ1HX8BfX2ZsMcvBvb3IwVbmxy9z4rVf
      0NXXi+xSOPDYcwx2N90yLcvS+L/+/f/K3sefo80PZ0bmOLyvj7NDo7T17sKo5gkrBiOzSQ7v
      6+e9S9P8/pd/C7e8PgGl5Zb57ptXONwuc3XNIBKJsDw5TNeexxByc0yt1XHVV8joKvt372B2
      NY9STeJuGsBZiXNhaJRP/c6fsq8zBkA+vcr4bJy9ewaZGB2hsaOXaimPQ7SwLAiEo0xeG6Wr
      fwe5bI6OthYsU+fayDDh1h7qxRxtHe0Id/GbmHqd4StXCDZ10uAVmVtO4gmEMbUKQbfM9HKG
      9oYQij+Mz6VcP29pfgFR1MHhxNANFLeXlblJGtr7KKeXMJQgbslAECEYCJJMJfnaP34NZ6yT
      /+6v/g1rq6vEGhspl0p4PJ5b5q9ayjJ8dZKu/p2UC2laG6OMjE0T8AcQJAlFMPH4vUzPzhON
      NNPW2rBVJ8IsvveNvyVXA29TN6WVBWJ+CVN2E2rpZmpyGsWhYFRS/MFX/hzFcYfZTcvi61//
      Kn/4lT/hG//wVXZ1RphOlGjoHGBhbh6hWqTBp9J3YDcTM1V+49NHbp2UUePMqTO8ffIMXgXK
      pkhfZxuRzj1MT1xFsAy0Uo49vU2ML+ZoGTzG0wd6EIT1KqbllvnuG5c51KFyZT6H5AkhFVeo
      OMKElSrDwxO0NAUZ3Lefd8+N4PPKjF4coX3nPiQ9T0/MT2T/M9cFYFkWlUoZEHE5VTTDQLlh
      skjX6giSjCisTyYpyi8rp2noGJaA/MF3aJmUyxUQJVxOBU03UeTN6yl/cD3BNBAcMpL4UdKz
      yGXSSKobr9t1/d3SHQTwAfVaFU03ECUHTqd6k7gt00AzLFRFFqS//uu//uv7KtGDwNIxJT8v
      vvhpBK1KW2OAouXi4KMHWJibo79vgNbmRlrCXkxXGL9buX16goCsKDQ0NBLyyiwXRZ5/+hhz
      01P09O+gOaigRtrp7GjF7fYQDvluk5bI8uwkjd27eeLofmq6gwP7dxOJxgj4PDQ1NrCrp435
      jMETh/cTDEcIeJwfysvizDg53c0zxw/hdLqplws0d/YiG2Wi7T10dbSzGE/w1KeOE4210NkU
      pKV7gJ3tEZIli/7+XjzO9UpuaVX+5m/+T+ZnpsjVRRaXllCoU6hZmNU88ytpJs6+yVJFwO+U
      +cnPfk5TxE+uYiCZVYZOvsV0RqKrJbyePy3D//Yf/pbF2WtogsT4QhpFL1AxRNBKLK5l8btl
      Jiam8Pu9JNJ5yoUcxWKRxGocrVbi9bfP0d/f85GtSnzsFEPLOosX3qDgCFDKpjBFhVxymXzF
      oFzM48CgUjdJJhIImMQTGYIB/03ivRVTVy/yn/7+q8ieMLJRpm5JnHj1Z7jDURbn5xCNLK+d
      muI73/z7/2mLtgA2d4tZr/Cdl37Kbz9/hH9++R08Hg+JqUtEdzxOX1Ti5Z+8yf5Du9AdflLp
      An63ydWTp6h7mujrjNDgV/F0Pc4zh/rWE6yn+aeXzvClp/v58atnqLsCrI5fovfAcfILY7R1
      91NMLuCMNJBeyaB5Y6jFVUytiBrwUzdU1tJl/uq/+OOPfMBcHj3JtUoMx+IFckhkaxKGplGN
      TxDoO4xRXOOJfZ1cnMkQT5Yx0xPMxnP81b/7axrc3FULAPDNb32Lzz+xj++fGKeeT6LVCzz9
      /LOcPfEWoY4BBDnCb3/mmB0K8YlHEEgvTfGt7/+M/fv24XK56O/fQWp1hbGxawRCASSHi0R8
      mZbWVlwuH30DvRw4eJDOxhDLiRyq8qtdHJHVmRG+/dKbPPLoHlxuHzv7u1hbXaUh7GV6bpFY
      UzOzU3N0DOwgNzfCYrKAO9jI0YP7iMVacFj1W47XhJq7GDv1KiPxIq3REI8cPELYr9I3MEBq
      dZWoR+KVdy7idDrZvfcRdu3oZ+feA0R96j19LW63G5c/gl5cw9/QSn97M9euDFMTnSgOEZe6
      3pLYLYDNJ4a7fQa4W+xgOJttjy0Am22NLQCbbc31p5/1WVX7ccBm61KtVjc9zesCcLvdm564
      jc1ms5kPwWB3gWy2ObYAbLY1tgBstjW2AGy2NTeF+ZmGTk0z1iML61WqdROvxwVYFPIFLMDl
      9qLIt47AtEydmm7hVO7dwkKrV9FMAdHSqdX19Ws5RMqlEorLjV6vYAkykmBSqWr4/d7rkZa3
      TFPTcMgylVIRxenGIYlo9RqaAapDoFiuoKoqtVoNRXXhct454Go9r+tpuFwqWCalYgm31wuG
      gSWKiIJw1wFcmqbhcEjraXi8iKJApVxCklUwdTTDwqXKlCs1PB4Pdyjy5mJZlEpFZKcbS69j
      WCJul/p+vutIkoNyqYjT7UWrVZBk523rx+0vZaLpBrVKGQsRSRLQdQOP99YBiqZpYiFQq9Uw
      EHA6RGq6hdelYJomhVIVVXFQrevIsgO3KqMb68EaNwng6tkTvDGyxl/9yW/w9a9+C4ck8Pjn
      fo++JhcnXv4Bw/E8Lzz7HOGID6tSwBVqwijnKdZ0utubmJiao7PRx6nRBbLJNL/5xc+jOO6y
      obEMTp88hdPtpqWtg0tn3mX/k58l7KhwbXyWGg6qmQSmKKM4TNo6+/D6vdzuq64VM3z7uy/z
      5T/4PCPXptEMkceP7OfcmVPoBnhUCTnSSnssxMSVswjRAQ7t6ryLzJqcPvkequJi95GjLF+9
      SNGS8IUbGXv7TXa+8AX81VVOXJ7ntz/37G1TSi7P8uqpYY7sbKOggTfcQl+Dwrunr+L3OakX
      c9R1k4DfDZZJuHsf3Q23iVjdZGqlDNcmFiiWKlAvoJsSTz73LA5L41+/8y0OHjlComBQy69i
      yX7cLoUjBx/ZwJUsJkdOspj3M9Di5r0LV3nqiUOcfPsdnvrcb/FRt1OtVuWHb5zn+PFHuXxl
      gt07ujg3MUOpavLCMwdYm19gqSqxoyXE7MwcBYefgJ4lI61Hv4o3ZuDkmbOUV6eZmJzE3bab
      P/rKV+iI+hAElWee+xS79h1k/tIJUoUyw8OX+c53f8BL33+JM6+/wjsnT/LyK68xv7RMIplk
      fmGVe7tVCXg9LlaXlhBVFVe4hZaQG6cvQntTkHotg+xswC9LeENBlqfHyFVvP3ehekPs6OtA
      dAXpaQlT1XSw1u0GKzUN1RfEyi6yWoKy7uDAzrup/Ot59XncJBbnyNct4qsJLMukkC+zf/8g
      hl7h3bPDCFrlI1eh/SrRli5aYwHW1lYxdZ18vgAOFafDYm5hBkty0+LzUDB0CqXyx95vVb1h
      eppDBMIBRNlHzCtT1uHiyRMYksLS0jJdA3sQTB1ZNJifX9jQdcqZFYZn4lSKZdBK7Dv8ONGA
      k0BTH0HXR/cmZNVJcyxEwCni97gYHp+hrIEuiqgAkoxezBAvGOTrAk8MthILeGhuDAE3CKCW
      j9O08zj/9s++zNxaGTkzwT9+9esspwoACJIDt1PFF2ihry3A7FKSQNBLe3c/gzt6iDa3EfZI
      pPJVwo0tBFQLTb/1Os6bEARM0yDc1IbTLBJt7KBezhFfWmBiIY3P24BZX6GEhKRpSKoH9S7W
      ajhVFb2YZHRmDb/XSSKZxOl04Xa70DQNAwc+t4DTHUS6a72u59Xf2o1cTtPR1Y2hm7hdLiRZ
      QVFcvPDC88Si4btabeVUVbq6ezEtC5cqkcwWsfQ6vb27UMQqi6UaEbcHr88D5uYtdL8bqvk1
      fvL6SbweP6JZIlkVqGQT7Dl0nJ097XT39DB64V280RYMTaO3r29D13H6Yzz/1OOEg37S+Srt
      zWHSS/O099/e01RSFOqFAlXDJBoK4FQcRIM+EpkCqVwJC4mwquEOhBAFgVTRoC28vkZjy0eD
      asUMRdFLyL1ZlngWa2sJGhoaNik9yKQSeIJRlLtXz20xdY1UrkgsEtqU9B4Ea2trm/od3g33
      Eg1qmjrJbJWGsPeWx9jeoDafKOxwaBubTcYWgM22xhaAzbbGFoDNtub6IKKmafZ6AJstja7r
      m75HwHUBmKZpC8BmS2OaJqZ5D/NKd4HdBbLZ1tgCsNnW2AKw2dbYArDZ1twUSlZMxxlbKvLo
      nj7GLp9lZrXIsYODvHniJCgePv/i83cf3nwf5JJxppeS7Nm7F7OSY2J6DkNysbMzylreRKxn
      Wc1WeWTfIOLHGhx/Kyympqbp7e1k6NxFoq0dlLIJssU6hw49eg9Bdr+knF0jqztpCqrMLq7h
      V2FhLcOuwT045a1w71ovc1M0yMz8IoLiQ9KLuMPNdDTHHmK2LEZnV9jV3QzA0nKCaGOEq2Mz
      RBsaaPYrxHM14CNagAvnLnB1+CKl7DJnJ1Ls6W1mLb7I1HIKt8uF+JF21puPKSpIlRSJQh3V
      EyCgmniDURYnrzK7kmYhniAsllgpbe6owEapFTOcvjiMnl9ldq2ArDjpamvAENQNN7OTo5eJ
      p3Iszc0wPb+IqLhpcsPC+9G5D5tCapWhkXE8gQiSViESixAIR5mZmnqo+ZqeXeDyzBoAxXye
      XwzPYRRSzCSqKLLE8PAYy4X1LaU+9NtYZo2ro+NUs6tcnljGMgzqdQ3DMGlq7WLnLSyvHwSG
      YdLYGCWVzAAwt1qgpyVEb18/krDui29Z1seWnzuhesN0tcTQUTl+/DFmJ8cYHRln775dG169
      1dc/gAi0d/fhViRkQWchD7132BDk48IXaaI5GgDLIFkyiHkVBElGsD7ecO1fxahXmY5ncDjW
      Ozden5f2WICiJvHpI92Mzazi9XroaFj/Dj/UBdLKJZ7/0h/S3eRnan6VBo+DmZU8h/cPML14
      luHLI0QaG/EqD35rMVkwWCmLdDTqLKUqdHV3r1d2xUtni4xQlVjL1+j0bIWuwDqdnZ0obh+J
      axN09+2gXingUzaeP9kdpEUEBJHOjnZWVlZQZYlipY7ffW9uyQ+Kzs5OsCy6e3uQZIV8ao2u
      3o2tB9gMJMXJUwd3kCrpzCyn6G4K0N3aiFuFsbkkB3a1U8zmafCu1+Hr4dC1Wm1LToTp9To4
      HDjErVPRbR4OlUoFl8t15wNZ3wWmqlm4brNiyuVyCVt+l0jHXSwot7G5EUGUcN1FI2nfVm22
      NbYAbLY1tgBstjW2AGw+MdzJAG0jXH8IVtWtMaxmY3MrDMPA6bzDjvH3iN0C2GxrbAHYbGts
      Adhsa2wB2GxrbAHYbGtuCIUo8r//z/83/oiXg899CTFxlWtpkc8fbOU/fuvnBFSBFz77GV79
      0Q/QlAh/8W//DP99BHtdx6jx7ntnEJ0eJK0Eshu/W2Z1dY3dR58mLBV55a1z7H1kD7PXrqFJ
      Trqbg5w5d5HPfun38an3mAfL5PR77yAoHpyyQLGQwxdqpJhP4411sre//TbnWlw7/wsK7h6s
      zAzZks7Tzz/L2vQIMysZ/IEQuWwGrz+GS6pyZWye3/nSF5HuIouJxSmuTS/S2ruHntYAJ944
      gewLcXhfHz965R329sRIVmX27h3Eo26WV+rGGbtygULNoLV7J+nxkwgt+0jMjKF6Azx26Pb2
      6BfPniRbqBCOhCnnMzQPHKI1YHH67CWc/ghWOUXZVAg5IZ0tceCJT928eOWDfIxeIyMGMYoZ
      NFFmsMXHxfk8Lx7uZzUeZ2Q+TUd7I+MTi+zZ1Y1eSLFSX48puskevVqpYeg1Mtk8F4bHScxe
      o1CtU6trWIAn0srzxx7l+POf3ZzKDyCp7N+7g2w2j6bpJJcXCLX3oVKnWtepViu4PR5SqTyP
      H38MSRRobW2gqXPnvVf+99E0jbX4PMPXpnAqCqHmLnrbGpCkO2/s0NzSgmFq1CyZ7rCTdNVk
      dSXLgaNHKZZKDPY0ky9XibhFdh18/K4qP0CsrZdGv0yxUgXLpFKtUiqVOH/uEm6Pk7puIVEj
      m9/87UI3gqZpGLUSV4bOs5otU69rVKs1SuXyHc995NBjuFUHA4P7iQW9OGQR2eln90AXuVyB
      /fv3kc/l2PvoEbwuBekWcwAr8RXGl/I0xgLs7m6kphk4xHXreoCLo3OABVoNh8tJIltCNE38
      gXXT3Jt+Gskh4/P7ySxcRQq0c2BXB+cuT3Lg2FNEvApaXbuPr+yjsbQyVycWcKoyXp8XfyRG
      cn4KbzhMZm2VSs3C6/NQq+T4l3/+NpGGZlZmp2jt3bHBKwp4fT6C4Qb6ezpQJIvpa0O8cXac
      WOjWbsLrpwq4nE5AAq3MXLKMQy/hDzi5cvEiEjCzVkEWdMYXMgx2Re86V/G5SeqSm3q5QCGT
      RHIFEDGJNcTIJJKIihNVhlpt83+DjeDxehFllba2dnwuB+nEKqo3gMido4rfevn71OQAk0Nv
      M7JUxC1oZFKrTC6mUGSL4ZExfE6Vt17/MQXTieMWApBkmUpdo5JNMrFawO9xUS1XiEaD5EsV
      IuEgigCJfI2oTwFBIlPSaI+t/843uENbVCtVLARk2QGCiCSCrukgSohYWILw/l8RaRNDlLV6
      DUQHIiaGJeCQBOp1HbGWI0OAoNPC4ZCp1+sIgogsSwiig40uUDN0DfP969TqOrJDpK7pOGQZ
      2XH7IFnLMjFNsCwDw7TIpdbwR5tB11CcKlqthkNRsEzz+sKMu8GyTGq1OrIksJLM0hAJguhA
      dkjouo4oCtQ1HVVRP94tkm6VX9OgrhnrW0BZBiYihl5HFB04HLdvSWvVKqZlIUkihmEiaGUy
      ukLEIyM5FCxTx0QEU8cwLVTVSaVS/kh3aN0wkESRWl1DUWSwLCzLZClRoK0hgGaYKA6Rat3A
      qTgwTBNJkhBte3SbTxK2PbqNzSZjC8BmW2MLwGZbYwvAZltzfYhC1/WHmQ8bmztiGMam19Pr
      AjAMY0u6QtjYfMCDEIDdBbLZ1tgCsNnW3DBNWef1l1+lJsoce+JJrOIqqyWJ3kYXP3/rJIo7
      wJH9/bxz8hwg8fSLL+LdEiatNjYb4wYB1LhyeZyGRjejswMUZi+RqRi0PD5IVncSTEwSr+yh
      I6hQDPTjdmyB+Xgbm/vgptt3INLInj0DrMxOMDY+RSo+x/RKluTKPKPLZboa/bidKi6X+2Oz
      JbdMg5nJCQqVOguzk0zMLDA/Pc6lS5coa1vrwd0yDSbHRskWqyRXFllaTd5FaNgd0rQM0ukM
      1VKOialZzC02WGHodcZGr1KqacQXZllN5R5qfizLIlNYj0g1dZ3x2RXqusH49BLFms5SfI3F
      9x22b2gBFFoaPczESzwyuINHDx6k2QeT0wt8/nOfx6WlSGVLhFu68Dg3LybjTqTmJ6g7I1wb
      vkI6scyBx54kFmph9sS73Mb68aFQLaTwxVoYOvMOmiEQisZobojeV/DawuQoIws5wi6Bgb4W
      xmcT7Oxu2LxM3yfFTJJYaxunXv8ppitCNFqhMRJ4aPmZmpxmMi/wmYM9DF2dpqHBx9krc3S3
      hzg3PEO+UMT9fkzRDdVH5cUv/uZNCe7eF37/v8b3/3689ty+aAMzozMkszkGB/czP34NpbcB
      b0P3LePEHxYuf4yF4SE6entYXMpiVosYJoh3XmZwSzp6d7KYukBz1M/ExDRyeOfmZXgT8Eca
      Gb54ju7+XhIVJ+XC6kPNTyTgofq+iW5Rt2iqaQRjQcam4nQ2+MiEAxTS663UTSvC/ubf/x1q
      wM3gjl6GxuaRJZH9/c1cnlqlrbOXF599nPTiJN/53r/iaemhuLhEtKWR48++wDs/+f8g0Mrh
      HY289NPX6d13jN/69Kfuu0CiQ0bAZO/evWRX5vFEGtBqBl2dHfed9mZTTC8zu5ZnR6iJhkAJ
      TfBy/xvqCESjEWQFHK4IO3oa73zKx0hqeYa1ksHOlgieyipSrPmh5qdmirRF3CwlsrSGPMSr
      4LYyOL0e/MEAicUEXW3r3+ENAlhfDyB7Feq1KppuIEsi9VoN3TBRnSpzE6P4Gzo4vKebhkc/
      zQ//9j+BIKA6XTgVgZok0z14kIGJaZ57+vimFEh2+jh0+DAAbU0Pceudu8AbaeXTz7Wuv2jb
      pIogSgz09QLQvPU0T7Stj+fa1vcEaG1uesi5gaamBkxTRzTdtMaCN30eDf2yB3PTvaljx37+
      y7/8r+huCPDYE8/gFAx0w0B1udBrVQTJ8SGLOkmScbuclHIpLNlHcmGa2tbYtchmGyOKDvye
      O1vr37BBhkm9rqMoMqbxyxU5prUeKyQIIk6nE0EAXasjSjL1WgXTAllRsQwdSxBRFRlNq+Nw
      yA/Ez9Fme3IvG2TcDS6XS9jyO8TY2HzAgxCAPY1rs62xBWCzrbk+CqTYe3HZbHF0Xd90G//r
      ArAfVm22OoIgbHo9tbtANtsaWwA22xpbADbbGlsANtuam2KB3nntJ0wupnjqM1+kuykEGLz5
      xjv09HbR2dn5oaNHLl+gf/ejKPcR6Xgjlqlx4p0zDHQ0ML+aYmDPQdxWidHxcXI1BwFZo4aT
      sEdkJVnk6PHHUO7VINSymBq/yrWpeZ781HHODw3z1PEjnHrnBHsfexbvXQ6IFTIrDE+ucezw
      Pky9zpsn3uOpY49w6vwIvmCEWjGNoHg59Og+7vnRzajw3skLOP1hHHoB0RXCSZVkpsDA/oOE
      Pb8emxoaWpUT757hqaeexKwXGbp0FdkTwKpk0B1eAqpJIlfj0KGDt0/IMjl5cYxwQ4xyNkNR
      Fzn+SC8icHVkDG9TCwtzi/iDQWrFAoZjfbO9DwugmmR8zeKPfvc3KdVNvvvNv6PmakUopXjv
      7Vfo6+6jJEfpCBpcmc2xo8XL/Mwk88sJ+g8/z7OHNurW/EEhLEaGLpCv1MimU5QLWfIVjVA0
      iGxqDPQ1c+LNS/T0tTF6bZyGplYMk3tvxwSBjrZGljI6gqlTq9UwtDr1eg39HuKYNN2kWikB
      YGg1yrU6ycVJmvofZWX8HEePHuHUqTNYcO8CEBQOHn6U02eH0CtZAlEnvYM7kSYuU6xqvzYC
      qNeq1633M4vTrBY12r0iff39vHnyIvueO87MK29QM8zb/sy6ViORq+D01RnoaeWdi9NYQHw5
      zqWZJAOGwWrJItLopCWgcG4yAdxYdWQvRn6Zd97+BddGrxLPVsmkkgiSTHt7F27FwRNPHmNm
      bplSPkO1VkUz4XMvPkcildmEr8PEFCTy6QSJksbenV0kkxlM0yJZ1GkKBWnvaEMr5gk2thCQ
      dXLVjUXezYxN0De4E28gjFt14FDdhPx3sEa/gXAkhkMUME0Dh9NL0OvC4/GRSycwLTjz3tv0
      Du5H2ECEiYXBeyfeZnDvXjq6+1G0ClPToyR0D22hj28x0oPG5Q3icylgmThcHto7OsilV4iv
      ZQm7ZKbml+jtjJEu1G+bTrlUYf/uXtLpDCfOXuORPb1gmmRLNTTLwtRgf3+E2ZT0OxEAABs0
      SURBVNk4ZVNCfn/ThpvcocuFDPFEnq6uNhbnF3G6XYgIOESDYsUg1tREenURU3TilAVEUcTj
      8ZCv6MRCvk35UnK5HG7Vwdxykma/QIooAVkjEPCTXotjOLx4ZZNEvkZ7S+OGVlsV8nk8Xh+i
      KJDL5QgEApQKOVRP4O7j9y2TXKFILrlCtK0PrVIgEPAxNz1NINpIMr4Eipuero57tnE3tQrj
      U3Mobh9Rn0KhLuAwymTyZVo7uvG5fz1aAIB8LodKleWyglPP4Qk3oZczaIILvxNWM2U621oo
      l2/tDm2ZJjOLazQ1hFmIJ1BdTqpVnZ1djeQKZfwelZmlNJ0tYeaXkzQ1RXErjq1vj/5B9rby
      RJ1lmiCIW8Kz/5PK3fzO92KPblkWFtx23bogCMIWW1F7M1u54n+AsIkbhWxXNvt3FgThrp67
      7F/OZltjC8BmW2MLwGZb8yF3aBubrYxpmpteTz+0P8AWHxCy2ebouo6mbe4WsXYXyGZbYwvA
      ZltzkwCK2SSjY5Po5u27Q5Zl2V0mm088H54IMyp893s/YkdfG6MON9X4GEKglYBk0NAUZHkt
      z8rSIr5YKxfffpn+fcfZt6uDXF2muyX6kIpgY7NxPtwCaGVEb4xHHj1I0EwwnrKYHHqXc+cu
      shKfY3hkhJymMHr5Ei5fiCZ3ne/94KcgOzc9Y4ZeJ53JXbcWN7Q6mmFSLuYpVWrUqmXS2fyG
      W6FapUShVME0NFLpLBag1WvcoeG7JZZpkE6l0epV1tbWyOYKWJZJrXb7IK7bUcznKFfrlIt5
      Esk0hlYnk83ft936ffErZTK0Gql0BtOyyKZTaIZJMZ+lUtvcB9V7yBw1TadarZIv1wAwDYO1
      dI5KXSeXL1LXTbAsytX1Mny4BXCG2d3m4qWXX+X4088QNMeR2nbQ5jO5NDxLe2c3vnALeb+M
      pOVwhFsplkbpiN5bFOXdcOnCBaIRH+myRV+ji1df/gG7Hv8NFseGsEQFBzqioTNw5EmC6r2v
      B5iZmSWRSKM6HbhUB3Wjl3ff+Ckv/OYfE9iAnhcmh8nrIlrcQ0DKs1RSiDpSJKoRnnxs8N4T
      pM7Q0DCCLGNpJbr6BlmcnyWZXKNlxyGag5t/07kbJkfOMpdVeO6JA8zPzlAp5xgbNVB9Qdxr
      qyRTRSQJHn/syMeaL8s0uXDxMnqwA6eWI5Gt8MxjgywvLLGiyQw4YGalQKGSpD+m8s5kGrhp
      QYzAoSee49D7rzq+9HvXP9lz6FcOG2gHILO6wG988fNIDyBcJxIOkE6uUnF76WsNsmfXDnQM
      tGod0yGCItIVdZEvWwTvNTBSEOjr7WFxKU6+mKe3NUK+LrKzr/s+ciySz+Xxx0IkVwscOnoc
      VcyRPR3fWHK6Tq1eQxQkWmMxFiYn2Pv4UdJry2j1OvBwBNC3YxdrF+cA6O7bwcWzpxD1CqIc
      I5dZRavpGOrmubfdLYIo4nd78LYEkfI6eU1CAiTViVTMsFzwElV0Uvk6b15eIRRZN1m+aUXY
      qbdeYWopzRPPf47OxpuddX+VUGM7off/12tlErkCiXiKffs3csf7MKahowkuepo9ZIt1ZNWJ
      KAm4PR4shxNV0pharXF0YAMDWZbJyPAV/IEgAZ+bcilPs0el6HLfc9jyBzhkFZfbg1MW0dxe
      XA4Ry5Rw30fYstvjQVKdVMoVHG4Pi+PXQPVcj2V/KAgSbpeTRCJBfGqErOGir6ubtXQBnz+A
      IFYRlYcjziIy3VKN7w3NcnhfH2uZAslsgZouYOZSFE2dvq5W9rf6yMvrdfvD3qCVJN/44Wl+
      73OPU6xU+fEPf4zkCRMQyqzlCvTuGGR0ZAxvtJkQGRYLIsf2dnDuyiTNUT+TiQpd0SiSkWU1
      W2FHTysj00s0te/gNz+9Mat0rZSlLHoJuLZ84Oq2IpVKEYlEPtZr3os3qGkapPNVosFbh0/f
      7A0qu9HzK5w++R7Ts3PUJS9aOUtNc/D8M0dIJlPsPHAMp1lmbm6OYr7AUjxOe2c3TU1NhEJ+
      quUyqXyFkFskmSly5MkX0MvJDRda9gTtyr8F+bgr/70iitJtK/8H3OQOXS5kiSdzdHV2kFpd
      RHQGEbQqHp+TQqmGrLjQamWcskCmZNDaEGB2fpmOjjaW46u4nG48qkCqWCfiU7FkN9VSgWjU
      Hia1uT9se3SbbY1tj25js8nYArDZ1lx/upRl2e4C2WxpNE1DluVNTfO6AER7YbfNFkcURSRp
      E20IsbtANtscWwA225oPzzBZBqfefReHLKOGWuhrDVGqWeSWJ1GbBlDNIiNXpzj06B4MQUG0
      6lSrdYKRKA403nv3DLIi4G/spSkgY0kKi1MTdOzYRbVYIBprQNporIGNzQPgw85wlTW++sPz
      7Gt1sFBWSc9eQRAkAqEITreLlWyZUi5PKTFLUY4x2CSjI9F96DMcajb5wak5OtxFCo4GxOws
      pyfWCBtFmnrbOHVmmOd/6yt8+tieh1hcm08y9+IMdzfc7AznjOCpL3NlUsDb2IMiCWSrJo2K
      hMvjIT+ziCgpeD1uArFWnK4q+3YNMFfTUENtGGuvMS6IxDrcDF+eQPFFaG2MoQsOXG4fjdHb
      B9cBpFfmuDSVoCMss5JI0733MVpCLpYmh0gaMUqr4+gOL/sHWjg7ssDzTz127yW3TM6efo+q
      LhIJuEmnUsRaO1lbjdPWM0h3y71P88dnx1lKlwj73Swn8jTEImTWlkH1ceTg/nt3h7bqvHvi
      JM5gDKGaJVs1aY14SaRz9O07TFPQfc95fFBUsitcGJ0jHAyQTmcIRGLs2dn3sebBsiymJqeo
      qFFaXBoj8RJP7utiZmae+WSR3o4GxhdSBHwe6qUCpvxR9uiCxO/9yX/2K288/aGPn37qmY+8
      eO/7f//43/zn19/7/HPPfuiY3/ntuyuI7A4hGfPEU1WOHhjg/NQKUTXE5FIct1/AkiK4zDya
      4kYRNuYMjSBy+OhxTr7zNiuZIk/v7+XkkkRbyEUmV9yQAPLZHIrTzaWL54h17Wd8YornP3WY
      N949z4b80QWF/ft28e6FK3hULy0ukdG1LC8c7GFsLkFTsPPOaXxMaLUK5WoFK1FDExQmJ8Y/
      dgFgWWQzBRoHu6ll4yjKehTuSrqAVasyNr9GsVimXq+RKmjs7PYDNz0EG5w68Qavv/4686t3
      sDs3qkzOLFKvr6+sqZeyzM7Ps7D80YFvll5lfmn1juXw+f0ggMsBM7NLeHxOypUaTlkmla1T
      r6YoaQYhv2/DZrSWZfL2ay/jbezAI1lMzMUxy1nwhqmXChtKMxgOYup1OnsGkQWdcMjP1Nwy
      PpeMvpHpFaPC9GIKVVYw9QqJUpWIIjI7t4InuPkLkO6HQi5Lc0cfgmDhUR0PJVBOEEUqopNW
      j4he12iIBanWNHxeN2VDQBYEdnVEcCoKXa0RiqX1FWM3uENbxKeG+emZCfZ2hElUBRyVNGKw
      HbeRZnElw2PHjvLuO+/x2PFjjI6Mcf7cOf7yv/5vmT79KnJTG2/9/CR7jxwh4rRoivnIVEUu
      nT/LkSdf4Ny7v+DLv/97d7wZVioVZEkglS3id9RIC2GaAw7qGtQrBSyHk4DXRaVS3VBsiGVZ
      pBKraJZIOOAjmy/REA2RTKYIRqIbirc3DZ1UOkc0GiaTSuILRqiWclgOJ37PxuJXcpkUDqcX
      wahR0cHvVkhni8Ri0Q2vW3gQWJZJKpHAH45RKWRQPQGcyuZH8N7pGaBcreNSFer1OqIE8ysF
      WiJudCQ8ikgyVyEW8pLOFvD7vSgO6UZ3aIFoLIbXt0ZmeZY9z3yJmeELDF26SMAtcqC/ienl
      DIoqk1hdIVO2aO/oIOJVeSdZ4JE+mdbeXUyPXiTpkjHLMXKOJlRFYTWRxqpUqHHntUwfVOrG
      hvUjW99/36mCUw3fdNy9IggC0Yam668bnevpxBoaNpQegCg5iMXW73zh6PpqIzkQut0pdyQQ
      +uBOqvJBj/+D72QrIQgi0YZGAJTQwwuTdjvX97ZS1fW/vW0fzktDeH3/ikjIf/29m2QqKm76
      u9txaUHCXoWL6RQ7d+8m6lNoinhR6hJrszr+cAM7lRDFNZNUsUZbg5+S6UHWrtG/5zCNSonR
      2Ti79vhJzmsEA16WPB5+fbZ1sPl1YNM2yNDKOVIVgaaI/yM/t/QqS4k8bc0bv8vabG8exDDo
      lt8hxsbmAx6EAOxQCJttzYfs0e3GwGYrY5omuq5vapq2PbrNJwZd1zddADd0gSxO/PyHfOPr
      X+P0lcnr744PnWIuUQQ0Xnv1zY9OyTJ47cff5xtf+ypD4wvX356fnGLj5oA2Ng+WG3yB1vjG
      j85zqC/AclkmPT1EpmzR1daI0x9g5NoUgiDjqCYoKg10eKsksxUOvfC77A7Xeen0HDsiJgUx
      SmV5mOF4GUdmma69gwxdHOXTX/ojju65H/c1m+3Mg1gU/+F5ADWAUFxiZrFCWlOxNAOv6qCq
      6QiVMr5giFI2Ry5fQIk1Ijm9PP/UI8wXyyhdjZRX3mCh7qPqKLE2m8CQVHo72jG1GoYgYpn2
      Nkw2W4ubbFG0WplkOk801oBeK1KqWXidEoKskstkkBUnsmhQtxzIgomqKmimhMelUKuUSOeK
      xGIxcukkokNFdgCiTDGfI9LQ+HBt/Ww+0XwMvkAG89PT1E2INrYQ9N0m5NbUSGbLRMOBTcvQ
      r2JoNRbjSTraWxEE0GplTFGlkktiyh5ckkGuYtAYC997qPEDwNAqzM4tEWtpo5ReI9jQglOW
      KBaL+Hy++0rbsixKpTKqLLCSzNPW2rQlyvxxc7cCqFYqZCsGTWEv2WyetVyZWCRIsVCkqTFC
      KplCE2QGOppujAWyyKzO8/bwAscO7MaSVaRaATnYgmIUSKTy7N4zyOWhS+zcPcClS2PMTk/x
      5a/8KQG3sqmFvXDuDC63m1V/mCavyGs//RGDx3+D5YkpLAQaG6LE4ytEIk8gb4HIsNXZCZIV
      J761KRJGhOXhYZqCCucnEnzxxafuK+2FyWGG5/PEPAId7Q1Mzqfo79ja1oQPDcvgtdOjNDU3
      0BT24vW6GZ9ZIpPKEWkMcP7aItlMjqOP9AM3jQJJDO7eTUt7J5mFUVyBKIViiTffeJNTp05h
      FONcGL7G+NQ0K6trpHJlBEHErW5+5F+xXCHoVUimC+BQ2Tu4AwudWrlCrW7Q0t6KWS1Tqm+N
      oVvFG6I14mZ2JU81E2c5vsiFKxNolfyGN934gI7eXQQ9Mo3RMPPz8+RLlc3J9K8hWqmAoXrI
      5tbD2rVKEcETors5wNzsMlUDejsaGLo2D3xEMJzgUIiFQ3g1aI16GXpnhaaWZhoCKt1NAdKG
      l4zPRa1u0dTUQkkskq/UiXg3N0pxR18va6kMDc0GqXwNp9uLITsIBHxYspvZyQncwSiq4+Hf
      /WE9HDqRKtDc0sLC0gq79x6kp72JkaujmxC6LBDw+wELQQnQ39V0xzO2Kw6Xm0a3iMvrZyWV
      p1Yq09/RSGZlBdXjp7/JzVQ8Q0vTulftlvcG1Up5ag4PXnVz/WBsPnnckz26oZErG4R8t74x
      f6Q36KWLFxkdOsWZyxO3Tt2yGLp4EfNjEIzs8duV3+aeESX5tpX/A27YJbLI+PQShaUrtOw6
      wt/+v2+y+8AjXDp3kYjfjRwM4fGEMapF3GaBtf69NHlt736bTy4fbgHqFTTBSUd3D06hxlx8
      jcTaKm39e/HLMs989vPkFy9jqH6cskWpurlxGTY2Hzc32aL4HBX2HX6CQDhGrKGN1s5OanUT
      od6FRzDxuAPs2ruba6cTPBKy13fZfLK56SG4Wq2gqq6PdlywTPKFEj6fl2q1htPl3JYTMjYP
      hwc6E2yaG/TYsbH5mCiXy7jdm2cIJkm/4gph26PbbHUEQdj0emrXepttjS0Am22NLQCbbY0t
      AJttzQ3TuBVOvneNY48fwLJMfvbSDzj+2S8wfP4sjx17jFMn3yO3sshSpsTRpz7N0tWzHHvh
      CwRcm7txGcDqwjTTS0n2HzyMS6jw3ukhOnsHSC/PoAYaUK0Kk9PzHH36eXzKw9dxKb3MpfFl
      du0eJDM/ga9jB2GnydDIDAcf2X3vCVoGF8+dxRVqQqznKWoS+wb7uHj5KocPHtj8AmyAZHye
      2aUE/YN7qa5OUnM3k1qcIhBtpqez9c4JPCCujs+giyp7+lpYW1llaiVPb3uMqflVOjrayCXX
      MB3rYRI31BydmelFACrpBRKZLKcvjGEV1rhy+QKZuocXPvNpfJFmekMGq6kcZ4auPZBCeEMx
      KCXJVXRK2QSpXAXDKJErWsSnxmnq6kRSPXjlh1/5AZYXZtEsMAyN1YUl8rU6Q+eHSGXSG0zR
      orW1lfmFRVpaWlhaXKCQy7GyltjUfN8PibUVivkUiUSSoYsXWFuNU5X8TI2PPsRcWUzOr1LX
      TUTA4/URdVqcvzxNrCnE6bNXqDq8pNPr7uc31Z5CNsXk1DTvvH0KVBfjV86z99BBvv3tH3L8
      sX3Xjzt98hyCqjJ25cLG7L/vQCaTYXB3H8vLCSTZw7HHj7I8v4xT1qhaItmFCRq6dm3YIn2z
      CcbaObh/J9NTs3R0tGDqVTTDIp1KbWw9gKlRtVRUUSedr9AW8iIFIgS9mzcRdL8USnV27+xj
      emIc1e2lWAehksYUN79HcLcYtSr79+0im80BsLQUp6wE2D/QwsLELD6fB7dTwBLXF3DdYI2o
      cfH0BWqCRDAUZkd/DytLC4Qbm1lZitPZ2Y6p11laS2HpddrbO1hdXiDU2L7pcfmVQpaZpQQd
      UZWUGaKeWSTW2kUptYzDG8UjaUieCC55ayhAq5aYmJ6nd2AHZjmPoXrwKg6SqRTRaHQDKVrM
      T0+g+GPIeolsTaCno4XUhtPbfKrFHNMLK/T19yPUC5QsF7mVWbzRViKBzbMw/IC7sUa0LIvp
      uWW8AT/ZfAVBr1I1JbqbgyxnKvS3BBmfW6WzvRm3Im19b1DT0LFECWmr3OptHhr34g1qWSa6
      AbLj1l3km/cI24KI0pbPos0WRBDEdUeSO7A1niBtbB4StgBstjW2AGy2Ndd7SXY4tM1Wx7Ks
      Ta+n1wWgadqWdIWwsfkATdOub8u7WdhdIJttjS0Am22NLQCbbY0tAJttzU1bJGmajmWa6Mbt
      n7Yt08AwTCzTRNM0zPt1gP0IDOOXG2pYpolpWei6hq4bmIa+nlf7uf2uMXQd3TAxDeP9786k
      VqthbHBkxbLM64MnWr1+/fcx7lB3Hjy/HC2yLIu6tr7/nWVZ7+fRwHi/vt4wWVzkf/kf/wN/
      9udf4FLc4mB3EHeoAa2Uo2YItDSEmJuP09bZiVlY5pUzc+wIa0yl6vTt2otXMnB6AyhWjYrp
      oDEa2nAR8qk4L791jj/4nS+AUefVl19i4LHPMHv5NKakEg26SK3lOPrcM7jtTTfujGVweegi
      uYpOLKCSzmRpCPtZq7t5ZFcvPve9ezwtTI+ztLxKuCFGIldFtepUdXB7fRzcv4E1EJvE7MwC
      YymNFw/1Mjszx1y6RDAUY3F6hgNH9jA7s0zt/XvrTdESHe3N/OLESQJd+7hwfox4XkIsJwh4
      FVoHDzN29i26H/sCzxzogeJ7XMlL7OoIMT8xwnw8DXqd/MoEGdPH//Df/ze45I35enpDjbQ3
      hddfiDK7BvowrCKquwnFytO/dz+l0+dRtsDeAJ8IBInBwR288c45dh0/zLkzZ1GcXnyUWVhK
      Mdjfcs9JdvTuJLW6TK1WR69VqBbTaEoYxPIDKMDdE/a7aLDW7VPSxRpGVSMY9lHOB4n53BgR
      N4nqer284dYpEG7poa89hlXLM7ucxe1yYOo18lWTUmIRzeFENAxAYLCnCXdDN05FQVEUdu9/
      lFjIR2tbG4ODu5Hvw8JCFEVkWUar5MlXdBwOGUn0o1XiFAyBd3/2I0xJ5aG3tp8UTI0rw6N4
      vB7e/vmPqaJiGCaCBaq6sfj9mfGrWIoXvV7H5fERijUS8io4HA83gDFbqNAY9ZHKlRAEEcXl
      xO+UkRwOisk1TlxdoTXqB+7KHt3gxC9O8uRTT3ycZbiOVsxQELyEPQ9vkYXN1uCe7NFNg0S2
      QmPYe8tjPmKPMPuJ0mbr8iCsEe2nR5ttjS0Am22NLQCbbY0tAJttzfXxqoc9dGVjcyc0TUOW
      N3c08HqtlyR7IzqbrY0oipteT+0ukM22xhaAzbbGFoDNtsYWgM225gYB1HntJz/mldfeoqK9
      Hy9qWVQq1etHzM9MUPyY9wc2DY1rI1dYWkszfvUy49PzJOILjFyb3Fj4hmUxPz3O1bEpsskV
      Ll6+im5BfGGWjRfNYnZ2FlOrcHnoIvFEhslrI1ybnOV+A0zmp8cZHp3AtCwWpqfR7jO9X3cs
      02Bhdd39WatVGRqdJV/VGZucYzFZxDINJuZXgZvCoWtMz6VpjSQ5c8HP0sRVBvq7+fHrZ/js
      048ytZwj7NQIrWVo6e1h4eo48eU5TIeKrhl86omD/OL/b+/cmpIKozD87A0CCQSCDShBHMKI
      UchxpgubyQub7vSqi35tOR0sO1k6CpKAIiEiArLluNl7d2HddBzRC2t4fsA337p5v2+tWWu9
      Sy+YfbBIYMx+YQEV0xvkq23cuirZrS1id++znUmhyQrNcBCz7qwt0RpGs53idoJjawTqBYpH
      HlZeLTO/6MfUR0W4I1VZWn7L44V5fKEwqyuvMdlGEeU8csCPoe/ihUYymcQfidOoFnny5CWP
      gkEGrYG/J5vdJVFW8LpGWN3McsN3jWfP39HQm5k2mVnfyJORTmXppy9QvVLC5Aqjr2XIFcuU
      ai38IT/dTo+DfIZOV6FWKpDP50mls1RbOhpSjTGzxvbeIWaDQiq3f6EBKYqKPzRBtfyF+Mws
      pd00XVVlSKfQaPejrwJqu47RcR2LUceo00b1RCbs9/Z9R6PVQcjrxmixkdlY43YsBoJwAT7K
      GpHJaXqVA95vpjCZROpS69yn/s84rg7jcTkBaPY0ZEniRBa4N+0hmdpjp3SM0XBqkPGD1hl4
      uLBALH6LzkmFw8ZTJmMxPq9/BBEi0Tt4PU5GR+y8+fCJqfgkgqhHLyrYjDraCDSP3QRc/U+C
      /Yrxm1ESiS38oSitaoGRcR/jQofDWhvH8NnTGA2NnVwei8ON3G5y1DUwEXIgDfkwnaPM7PP5
      aFQOkHoC7a6C3aiiWNz0ORP0DRFNboLVydxMkH1vDqf18ngEXEZU0UDAZSVbKDPhcVJqKCzO
      RVlLl5ibnUJoSciG0zbpS78efcCA75xlPbqqKrQ6KuY/2Hf9E+vRBwzoB1HUYb7y96f3K2SM
      gL8SjjZUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.boards.pct' width='192'>
      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
      z1M0oLQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Fare Cat.n' width='192'>
      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
      BEIxAP5/N2GFfzfjwDUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
