<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='AutoWorkStudent' path='/workbooks' revision='2.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AutoWorkStudent' inline='true' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' version='9.3'>
      <connection class='textscan' directory='M:/Data/OnBoard/Data and Reports/_data Standardized/tableau' filename='AutoWorkStudent.csv' password='' server=''>
        <relation name='AutoWorkStudent.csv' table='[AutoWorkStudent#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='weekpart' ordinal='1' />
            <column datatype='string' name='auto_suff' ordinal='2' />
            <column datatype='string' name='work_status' ordinal='3' />
            <column datatype='string' name='student_status' ordinal='4' />
            <column datatype='integer' name='boardings' ordinal='5' />
            <column datatype='integer' name='freq' ordinal='6' />
            <column datatype='real' name='weight' ordinal='7' />
            <column datatype='real' name='trip_weight' ordinal='8' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>auto_suff</remote-name>
            <remote-type>129</remote-type>
            <local-name>[auto_suff]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>auto_suff</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>work_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[work_status]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>work_status</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>student_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[student_status]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>student_status</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[boardings]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>boardings</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Transfers' datatype='string' name='[Calculation_4061113112044266]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
          <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
          <alias key='&quot;zero autos&quot;' value='Zero' />
        </aliases>
      </column>
      <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Student Status' datatype='string' name='[student_status]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;full- or part-time&quot;' value='Student' />
          <alias key='&quot;non-student&quot;' value='Non-student' />
        </aliases>
      </column>
      <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
      <column caption='Work Status' datatype='string' name='[work_status]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;full- or part-time&quot;' value='Worker' />
          <alias key='&quot;non-worker&quot;' value='Non-worker' />
        </aliases>
      </column>
      <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\AutoWorkStudent.tde' schema='Extract' tablename='Extract' update-time='09/12/2016 04:30:51 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_4061113112044266]' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1065' timestamp-start='2016-09-12 16:30:51.020' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1065.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1065.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>auto_suff</remote-name>
              <remote-type>129</remote-type>
              <local-name>[auto_suff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>auto_suff</remote-alias>
              <ordinal>1</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;auto negotiating&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zero autos&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>boardings</remote-name>
              <remote-type>16</remote-type>
              <local-name>[boardings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>boardings</remote-alias>
              <ordinal>2</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2266.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.1276995305164319</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>6</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.0489131789627104</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.0484206158085416</statistic>
                <statistic aggregation='Var' datatype='real'>1.1002188570016591</statistic>
                <statistic aggregation='VarP' datatype='real'>1.0991857876523616</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5992.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>3</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>161</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>73632.0</statistic>
                <statistic aggregation='Avg' datatype='real'>69.138028169014078</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>13364</statistic>
                <statistic aggregation='Stdev' datatype='real'>522.78671910701757</statistic>
                <statistic aggregation='StdevP' datatype='real'>522.54122169075322</statistic>
                <statistic aggregation='Var' datatype='real'>273305.95367467968</statistic>
                <statistic aggregation='VarP' datatype='real'>273049.32836606493</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>295888306.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>4</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Golden Gate Transit (ferry)&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>student_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[student_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>student_status</remote-alias>
              <ordinal>5</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;full- or part-time&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;non-student&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>6</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1016</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>812185.73017145495</statistic>
                <statistic aggregation='Avg' datatype='real'>762.61570908117835</statistic>
                <statistic aggregation='Min' datatype='real'>0.011713358599999999</statistic>
                <statistic aggregation='Max' datatype='real'>133256.65750800099</statistic>
                <statistic aggregation='Stdev' datatype='real'>5243.7094483909277</statistic>
                <statistic aggregation='StdevP' datatype='real'>5241.247034802037</statistic>
                <statistic aggregation='Var' datatype='real'>27496488.779144287</statistic>
                <statistic aggregation='VarP' datatype='real'>27470670.479821146</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29875649657.529842</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>7</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;WEEKDAY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>8</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>964</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>963542.97514736536</statistic>
                <statistic aggregation='Avg' datatype='real'>904.73518793179846</statistic>
                <statistic aggregation='Min' datatype='real'>0.058566792999999999</statistic>
                <statistic aggregation='Max' datatype='real'>133256.65750800099</statistic>
                <statistic aggregation='Stdev' datatype='real'>5302.8635235705215</statistic>
                <statistic aggregation='StdevP' datatype='real'>5300.3733315930695</statistic>
                <statistic aggregation='Var' datatype='real'>28120361.549614765</statistic>
                <statistic aggregation='VarP' datatype='real'>28093957.454263017</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>30791815923.490425</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>work_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[work_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>work_status</remote-alias>
              <ordinal>9</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;full- or part-time&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;non-worker&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_4061113112044266</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_4061113112044266]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_4061113112044266</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1065</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.509554' measure-ordering='alphabetic' measure-percentage='0.490446' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:auto_suff:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;zero autos&quot;</bucket>
            <bucket>&quot;auto negotiating&quot;</bucket>
            <bucket>&quot;auto sufficient&quot;</bucket>
            <bucket>&quot;Missing&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Auto Suff.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='103' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='64' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='136' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Auto Suff.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='118' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='64' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Auto Suff.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='103' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='text-format' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='64' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='136' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Status.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Worker and Student Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[student_status]' derivation='None' name='[none:student_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_status]' derivation='None' name='[none:work_status:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Student Status' datatype='string' name='[student_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Student' />
                <alias key='&quot;non-student&quot;' value='Non-student' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
            <column caption='Work Status' datatype='string' name='[work_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Worker' />
                <alias key='&quot;non-worker&quot;' value='Non-worker' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;non-student&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-student&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;non-worker&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-worker&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</column>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='94' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='95' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='184' />
            <format attr='height-header' value='44' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='52' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='36' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Status.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Worker and Student Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[student_status]' derivation='None' name='[none:student_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_status]' derivation='None' name='[none:work_status:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Student Status' datatype='string' name='[student_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Student' />
                <alias key='&quot;non-student&quot;' value='Non-student' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
            <column caption='Work Status' datatype='string' name='[work_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Worker' />
                <alias key='&quot;non-worker&quot;' value='Non-worker' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;non-student&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-student&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;non-worker&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-worker&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</column>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='92' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='95' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='184' />
            <format attr='height-header' value='44' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='52' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='36' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Status.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Worker and Student Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[student_status]' derivation='None' name='[none:student_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_status]' derivation='None' name='[none:work_status:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Student Status' datatype='string' name='[student_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Student' />
                <alias key='&quot;non-student&quot;' value='Non-student' />
              </aliases>
            </column>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
            <column caption='Work Status' datatype='string' name='[work_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Worker' />
                <alias key='&quot;non-worker&quot;' value='Non-worker' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;non-student&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-student&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;non-worker&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-worker&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</column>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='94' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='95' />
            <format attr='text-format' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='184' />
            <format attr='height-header' value='44' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='52' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='36' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Transfer by Auto.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Origin to Destination Transfers and Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Transfers' datatype='string' name='[Calculation_4061113112044266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4061113112044266]' derivation='None' name='[none:Calculation_4061113112044266:nk]' pivot='key' type='nominal' />
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4061113112044266:nk]' />
              <groupfilter function='member' level='[none:Calculation_4061113112044266:nk]' member='&quot;Three+&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:auto_suff:nk]' />
              <groupfilter function='member' level='[none:auto_suff:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='96' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='57' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='52' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='116' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='48' />
            <format attr='height-header' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</column>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Transfer by Auto.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Origin to Destination Transfers and Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Transfers' datatype='string' name='[Calculation_4061113112044266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4061113112044266]' derivation='None' name='[none:Calculation_4061113112044266:nk]' pivot='key' type='nominal' />
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4061113112044266:nk]' />
              <groupfilter function='member' level='[none:Calculation_4061113112044266:nk]' member='&quot;Three+&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:auto_suff:nk]' />
              <groupfilter function='member' level='[none:auto_suff:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='96' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='58' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='52' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='116' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='48' />
            <format attr='height-header' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</column>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Transfer by Auto.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Origin to Destination Transfers and Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Transfers' datatype='string' name='[Calculation_4061113112044266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4061113112044266]' derivation='None' name='[none:Calculation_4061113112044266:nk]' pivot='key' type='nominal' />
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' type='PctTotal' />
            </column-instance>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4061113112044266:nk]' />
              <groupfilter function='member' level='[none:Calculation_4061113112044266:nk]' member='&quot;Three+&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:auto_suff:nk]' />
              <groupfilter function='member' level='[none:auto_suff:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='96' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='53' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='text-format' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk:6]' value='p0%' />
            <format attr='font-style' data-class='subtotal' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk:6]' value='italic' />
            <format attr='color' data-class='subtotal' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk:6]' value='#906800' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='52' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='116' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='48' />
            <format attr='height-header' value='44' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk:6]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</column>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</column>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='row-in-pane' />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='Auto Suff.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='122'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Auto Suff.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='122'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Auto Suff.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='122'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Status.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Status.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Status.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfer by Auto.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='145'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfer by Auto.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='145'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfer by Auto.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='145'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Auto Suff.trips.est' width='192'>
      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
      Aw8NKNIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Auto Suff.trips.pct' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Auto Suff.n' width='192'>
      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
      29Ke8/8H+ROsMd4cX2oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Status.trips.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Status.trips.pct' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Status.n' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transfer by Auto.trips.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transfer by Auto.trips.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transfer by Auto.n' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
