<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0811.1521                                -->
<workbook source-build='9.3.6 (9300.16.0811.1521)' source-platform='win' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='AutoWorkStudent' path='/workbooks' revision='2.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='AutoWorkStudent' inline='true' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' version='9.3'>
      <connection class='textscan' directory='M:/Data/OnBoard/Data and Reports/_data Standardized/tableau' filename='AutoWorkStudent.csv' password='' server=''>
        <relation name='AutoWorkStudent.csv' table='[AutoWorkStudent#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='weekpart' ordinal='1' />
            <column datatype='string' name='auto_suff' ordinal='2' />
            <column datatype='string' name='work_status' ordinal='3' />
            <column datatype='string' name='student_status' ordinal='4' />
            <column datatype='integer' name='boardings' ordinal='5' />
            <column datatype='integer' name='freq' ordinal='6' />
            <column datatype='real' name='weight' ordinal='7' />
            <column datatype='real' name='trip_weight' ordinal='8' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>auto_suff</remote-name>
            <remote-type>129</remote-type>
            <local-name>[auto_suff]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>auto_suff</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>work_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[work_status]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>work_status</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>student_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[student_status]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>student_status</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boardings</remote-name>
            <remote-type>20</remote-type>
            <local-name>[boardings]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>boardings</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>20</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AutoWorkStudent.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Transfers' datatype='string' name='[Calculation_4061113112044266]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
          <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
          <alias key='&quot;zero autos&quot;' value='Zero' />
        </aliases>
      </column>
      <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
      <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Student Status' datatype='string' name='[student_status]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;full- or part-time&quot;' value='Student' />
          <alias key='&quot;non-student&quot;' value='Non-student' />
        </aliases>
      </column>
      <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column caption='Weight' datatype='real' name='[weight]' role='measure' type='quantitative' />
      <column caption='Work Status' datatype='string' name='[work_status]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;full- or part-time&quot;' value='Worker' />
          <alias key='&quot;non-worker&quot;' value='Non-worker' />
        </aliases>
      </column>
      <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\AutoWorkStudent.tde' schema='Extract' tablename='Extract' update-time='09/19/2016 10:54:33 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_4061113112044266]' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1120' timestamp-start='2016-09-19 22:54:33.434' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1120.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1120.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>auto_suff</remote-name>
              <remote-type>129</remote-type>
              <local-name>[auto_suff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>auto_suff</remote-alias>
              <ordinal>1</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;auto negotiating&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;zero autos&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>boardings</remote-name>
              <remote-type>16</remote-type>
              <local-name>[boardings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>boardings</remote-alias>
              <ordinal>2</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2367.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2.1133928571428573</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>6</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.0409828599425845</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.0405180316720579</statistic>
                <statistic aggregation='Var' datatype='real'>1.0836453146942424</statistic>
                <statistic aggregation='VarP' datatype='real'>1.0826777742346938</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6215.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>3</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>164</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>76530.0</statistic>
                <statistic aggregation='Avg' datatype='real'>68.330357142857139</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>13364</statistic>
                <statistic aggregation='Stdev' datatype='real'>510.498310733457</statistic>
                <statistic aggregation='StdevP' datatype='real'>510.27035880839077</statistic>
                <statistic aggregation='Var' datatype='real'>260608.52526171325</statistic>
                <statistic aggregation='VarP' datatype='real'>260375.83907844388</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>296850262.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>4</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;LAVTA&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>student_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[student_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>student_status</remote-alias>
              <ordinal>5</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;full- or part-time&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;non-student&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>6</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1035</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>814542.48017145472</statistic>
                <statistic aggregation='Avg' datatype='real'>727.270071581656</statistic>
                <statistic aggregation='Min' datatype='real'>0.011713358599999999</statistic>
                <statistic aggregation='Max' datatype='real'>133256.65750800099</statistic>
                <statistic aggregation='Stdev' datatype='real'>5115.6484163446039</statistic>
                <statistic aggregation='StdevP' datatype='real'>5113.3641347320117</statistic>
                <statistic aggregation='Var' datatype='real'>26169858.719649054</statistic>
                <statistic aggregation='VarP' datatype='real'>26146492.774363652</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>29876464275.147884</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>7</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;WEEKDAY&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>8</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>979</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>966440.97514736536</statistic>
                <statistic aggregation='Avg' datatype='real'>862.89372781014765</statistic>
                <statistic aggregation='Min' datatype='real'>0.058566792999999999</statistic>
                <statistic aggregation='Max' datatype='real'>133256.65750800099</statistic>
                <statistic aggregation='Stdev' datatype='real'>5174.2507130241192</statistic>
                <statistic aggregation='StdevP' datatype='real'>5171.9402638296551</statistic>
                <statistic aggregation='Var' datatype='real'>26772870.441230603</statistic>
                <statistic aggregation='VarP' datatype='real'>26748966.092622358</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>30792777879.490425</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>work_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[work_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>work_status</remote-alias>
              <ordinal>9</ordinal>
              <family>AutoWorkStudent.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;full- or part-time&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;non-worker&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_4061113112044266</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_4061113112044266]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_4061113112044266</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>32</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Two&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1120</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>128</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.509554' measure-ordering='alphabetic' measure-percentage='0.490446' show-aliased-fields='true' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:auto_suff:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;zero autos&quot;</bucket>
            <bucket>&quot;auto negotiating&quot;</bucket>
            <bucket>&quot;auto sufficient&quot;</bucket>
            <bucket>&quot;Missing&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Auto Suff.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='103' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='64' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='136' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Auto Suff.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='118' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='64' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='136' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='font-style' data-class='total' value='italic' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Auto Suff.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='103' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='text-format' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='64' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='136' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Status.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Worker and Student Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[student_status]' derivation='None' name='[none:student_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_status]' derivation='None' name='[none:work_status:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Student Status' datatype='string' name='[student_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Student' />
                <alias key='&quot;non-student&quot;' value='Non-student' />
              </aliases>
            </column>
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
            <column caption='Work Status' datatype='string' name='[work_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Worker' />
                <alias key='&quot;non-worker&quot;' value='Non-worker' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;non-student&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-student&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;non-worker&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-worker&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</column>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='94' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='95' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='184' />
            <format attr='height-header' value='44' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='52' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='36' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Status.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Worker and Student Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[student_status]' derivation='None' name='[none:student_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_status]' derivation='None' name='[none:work_status:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Student Status' datatype='string' name='[student_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Student' />
                <alias key='&quot;non-student&quot;' value='Non-student' />
              </aliases>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
            <column caption='Work Status' datatype='string' name='[work_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Worker' />
                <alias key='&quot;non-worker&quot;' value='Non-worker' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;non-student&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-student&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;non-worker&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-worker&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</column>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='92' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='95' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='184' />
            <format attr='height-header' value='44' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='52' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='36' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Status.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Worker and Student Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[student_status]' derivation='None' name='[none:student_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column-instance column='[work_status]' derivation='None' name='[none:work_status:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Student Status' datatype='string' name='[student_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Student' />
                <alias key='&quot;non-student&quot;' value='Non-student' />
              </aliases>
            </column>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
            <column caption='Work Status' datatype='string' name='[work_status]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;full- or part-time&quot;' value='Worker' />
                <alias key='&quot;non-worker&quot;' value='Non-worker' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:student_status:nk]' member='&quot;non-student&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-student&quot;</bucket>
              <bucket>&quot;Missing&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;full- or part-time&quot;' />
              <groupfilter function='member' level='[none:work_status:nk]' member='&quot;non-worker&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;full- or part-time&quot;</bucket>
              <bucket>&quot;non-worker&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</column>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='49' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='94' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='95' />
            <format attr='text-format' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk]' value='p0%' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='184' />
            <format attr='height-header' value='44' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]' value='52' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]' value='36' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Transfer by Auto.n'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Surveyed </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Riders by Origin to Destination Transfers and Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Transfers' datatype='string' name='[Calculation_4061113112044266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column caption='Freq' datatype='integer' name='[freq]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4061113112044266]' derivation='None' name='[none:Calculation_4061113112044266:nk]' pivot='key' type='nominal' />
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[freq]' derivation='Sum' name='[sum:freq:qk]' pivot='key' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4061113112044266:nk]' />
              <groupfilter function='member' level='[none:Calculation_4061113112044266:nk]' member='&quot;Three+&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:auto_suff:nk]' />
              <groupfilter function='member' level='[none:auto_suff:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='96' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='57' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='52' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='116' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='48' />
            <format attr='height-header' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:freq:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</column>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Transfer by Auto.trips.est'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Origin to Destination Transfers and Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Transfers' datatype='string' name='[Calculation_4061113112044266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4061113112044266]' derivation='None' name='[none:Calculation_4061113112044266:nk]' pivot='key' type='nominal' />
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4061113112044266:nk]' />
              <groupfilter function='member' level='[none:Calculation_4061113112044266:nk]' member='&quot;Three+&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:auto_suff:nk]' />
              <groupfilter function='member' level='[none:auto_suff:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='96' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='58' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='52' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='116' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='48' />
            <format attr='height-header' value='44' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[sum:trip_weight:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols total='true'>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</column>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</column>
        </subtotals>
      </table>
    </worksheet>
    <worksheet name='Transfer by Auto.trips.pct'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontsize='20' italic='true'>Share of Estimated </run>
            <run fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontsize='20' italic='true'> Trips by Origin to Destination Transfers and Automobile Sufficiency Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='AutoWorkStudent' name='textscan.0n96dtm1lhfkax1dpspg41vd1ka5' />
          </datasources>
          <datasource-dependencies datasource='textscan.0n96dtm1lhfkax1dpspg41vd1ka5'>
            <column caption='Transfers' datatype='string' name='[Calculation_4061113112044266]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [boardings]&#13;&#10;WHEN 1 THEN &apos;None&apos;&#13;&#10;WHEN 2 THEN &apos;One&apos;&#13;&#10;WHEN 3 THEN &apos;Two&apos;&#13;&#10;WHEN 4 THEN &apos;Three+&apos;&#13;&#10;WHEN 5 THEN &apos;Three+&apos;&#13;&#10;WHEN 6 THEN &apos;Three+&apos;&#13;&#10;WHEN 7 THEN &apos;Three+&apos;&#13;&#10;WHEN 8 THEN &apos;Three+&apos;&#13;&#10;WHEN 9 THEN &apos;Three+&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='Automobile Sufficiency' datatype='string' name='[auto_suff]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;auto negotiating&quot;' value='Negotiating' />
                <alias key='&quot;auto sufficient&quot;' value='Sufficient' />
                <alias key='&quot;zero autos&quot;' value='Zero' />
              </aliases>
            </column>
            <column caption='Boardings' datatype='integer' name='[boardings]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_4061113112044266]' derivation='None' name='[none:Calculation_4061113112044266:nk]' pivot='key' type='nominal' />
            <column-instance column='[auto_suff]' derivation='None' name='[none:auto_suff:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column-instance column='[trip_weight]' derivation='Sum' name='[pcto:sum:trip_weight:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='RowInPane' type='PctTotal' />
            </column-instance>
            <column caption='Trip Weight' datatype='real' name='[trip_weight]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4061113112044266:nk]' />
              <groupfilter function='member' level='[none:Calculation_4061113112044266:nk]' member='&quot;Three+&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;None&quot;</bucket>
              <bucket>&quot;One&quot;</bucket>
              <bucket>&quot;Two&quot;</bucket>
              <bucket>&quot;Three+&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:auto_suff:nk]' />
              <groupfilter function='member' level='[none:auto_suff:nk]' member='&quot;Missing&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='47' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='96' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]' value='46' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='53' />
            <format attr='font-style' data-class='total' value='italic' />
            <format attr='color' data-class='total' value='#4f6e8d' />
            <format attr='text-format' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk:6]' value='p0%' />
            <format attr='font-style' data-class='subtotal' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk:6]' value='italic' />
            <format attr='color' data-class='subtotal' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk:6]' value='#906800' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
            <format attr='font-style' data-class='subtotal' value='italic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]' value='52' />
            <format attr='width' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]' value='116' />
            <format attr='height' field='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]' value='48' />
            <format attr='height-header' value='44' />
            <format attr='color' data-class='total' scope='cols' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='cols' value='italic' />
            <format attr='color' data-class='total' scope='rows' value='#4f6e8d' />
            <format attr='font-style' data-class='total' scope='rows' value='italic' />
            <format attr='font-style' data-class='subtotal' value='italic' />
            <format attr='color' data-class='subtotal' value='#9e4c00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='parameter-ctrl-title'>
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[pcto:sum:trip_weight:qk:6]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</rows>
        <cols>([textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk] / [textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk])</cols>
        <pages>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</column>
        </pages>
        <subtotals>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</column>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</column>
          <column>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</column>
        </subtotals>
        <percentages enabled='true' mode='row-in-pane' />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' maximized='true' name='Auto Suff.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='122'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKEND&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Auto Suff.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='122'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Auto Suff.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='122'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Status.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Status.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Status.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='94'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:student_status:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:work_status:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfer by Auto.trips.est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='145'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfer by Auto.trips.pct'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='145'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Transfer by Auto.n'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='145'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;WEEKDAY&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:Calculation_4061113112044266:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:autoSuff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:auto_suff:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:operator:nk]</field>
            <field>[textscan.0n96dtm1lhfkax1dpspg41vd1ka5].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Auto Suff.trips.est' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Auto Suff.trips.pct' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Auto Suff.n' width='192'>
      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
      29Ke8/8H+ROsMd4cX2oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Status.trips.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Status.trips.pct' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Status.n' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transfer by Auto.trips.est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Transfer by Auto.trips.pct' width='192'>
      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
      j04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Transfer by Auto.n' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
