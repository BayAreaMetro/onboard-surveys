<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <repository-location id='BoardingAndAlighting' path='/workbooks' revision='2.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='BoardingAndAlighting#csv (BoardingAndAlighting.csv)' inline='true' name='csv.41690.411216701388' version='9.0'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='M:\Data\OnBoard\Data and Reports\_data Standardized\tableau\' driver='' filename='BoardingAndAlighting.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='BoardingAndAlighting#csv' table='[BoardingAndAlighting#csv]' type='table' />
        <refresh incremental-updates=''>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>day_part</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_part]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>day_part</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_board_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_board_lat]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>first_board_lat</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_board_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_board_lon]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>first_board_lon</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>freq</remote-name>
            <remote-type>3</remote-type>
            <local-name>[freq]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>freq</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I4&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_alight_lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[last_alight_lat]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>last_alight_lat</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_alight_lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[last_alight_lon]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>last_alight_lon</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trip_weight]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>trip_weight</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[BoardingAndAlighting#csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='board_lat' datatype='real' name='[Calculation_2040322094055831]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[first_board_lat]' />
      </column>
      <column caption='Time Period' datatype='string' name='[Calculation_2830105132955536]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [day_part]&#13;&#10;WHEN &apos;NIGHT&apos; THEN &apos;EVENING&apos;&#13;&#10;WHEN &apos;.&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN &apos;NA&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN Null THEN &apos;MISSING&apos;&#13;&#10;ELSE [day_part]&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='State' datatype='string' name='[Calculation_6890220101436174]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='&quot;California&quot;' scope-isolation='false' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[day_part]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Avg' datatype='real' name='[first_board_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' datatype='real' name='[first_board_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' datatype='real' name='[last_alight_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' datatype='real' name='[last_alight_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
      </column>
      <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
      </column>
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
          <alias key='&quot;WEEKEND&quot;' value='Weekend' />
        </aliases>
      </column>
      <column-instance column='[Calculation_2830105132955536]' derivation='None' name='[none:Calculation_2830105132955536:nk]' pivot='key' type='nominal' />
      <column-instance column='[day_part]' derivation='None' name='[none:day_part:nk]' pivot='key' type='nominal' />
      <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='M:\Data\OnBoard\Data and Reports\_data Legacy\Data summaries\BoardingAndAlighting#csv (BoardingAndAlighting.csv).tde' schema='Extract' tablename='Extract' update-time='03/22/2016 05:04:45 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_2040322094055831]' formula='[first_board_lat]' />
            <calculation column='[Calculation_2830105132955536]' formula='CASE [day_part]&#13;&#10;WHEN &apos;NIGHT&apos; THEN &apos;EVENING&apos;&#13;&#10;WHEN &apos;.&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN &apos;NA&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN Null THEN &apos;MISSING&apos;&#13;&#10;ELSE [day_part]&#13;&#10;END' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='29687' timestamp-start='2016-03-22 17:04:45.268' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day_part</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day_part]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day_part</remote-alias>
              <ordinal>1</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;missing&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_2040322094055831</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_2040322094055831]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2040322094055831</remote-alias>
              <ordinal>2</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5894</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.456529</statistic>
                <statistic aggregation='Max' datatype='real'>38.806274000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>first_board_lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[first_board_lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>first_board_lat</remote-alias>
              <ordinal>2</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5894</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-122.456529</statistic>
                <statistic aggregation='Max' datatype='real'>38.806274000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>first_board_lon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[first_board_lon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>first_board_lon</remote-alias>
              <ordinal>3</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5996</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-123.5783081</statistic>
                <statistic aggregation='Max' datatype='real'>-121.0540771</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>freq</remote-name>
              <remote-type>2</remote-type>
              <local-name>[freq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>freq</remote-alias>
              <ordinal>4</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>328</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>last_alight_lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[last_alight_lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>last_alight_lat</remote-alias>
              <ordinal>5</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6008</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>36.964374200000002</statistic>
                <statistic aggregation='Max' datatype='real'>38.806274000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>last_alight_lon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[last_alight_lon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>last_alight_lon</remote-alias>
              <ordinal>6</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6069</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-123.023804</statistic>
                <statistic aggregation='Max' datatype='real'>-82.030166899999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>operator</remote-name>
              <remote-type>129</remote-type>
              <local-name>[operator]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>operator</remote-alias>
              <ordinal>7</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AC Transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Union City&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trip_weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_weight</remote-alias>
              <ordinal>8</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11089</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4256.81994966</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weekpart</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weekpart]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weekpart</remote-alias>
              <ordinal>9</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;WEEKDAY&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WEEKEND&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>10</ordinal>
              <family>BoardingAndAlighting#csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9293</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>4641.4994585599998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_2830105132955536</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_2830105132955536]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_2830105132955536</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;missing&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:operator:nk]' type='palette'>
            <map to='#32a251'>
              <bucket>&quot;AC Transit&quot;</bucket>
            </map>
            <map to='#32a251'>
              <bucket>&quot;Union City&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Napa Vine&quot;</bucket>
            </map>
            <map to='#39737c'>
              <bucket>&quot;Sonoma County&quot;</bucket>
            </map>
            <map to='#3cb7cc'>
              <bucket>&quot;County Connection&quot;</bucket>
            </map>
            <map to='#82853b'>
              <bucket>&quot;SF Bay Ferry&quot;</bucket>
            </map>
            <map to='#86b4a9'>
              <bucket>&quot;SamTrans&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Golden Gate Transit (bus)&quot;</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>&quot;Petaluma&quot;</bucket>
            </map>
            <map to='#acd98d'>
              <bucket>&quot;ACE&quot;</bucket>
            </map>
            <map to='#b85a0d'>
              <bucket>&quot;Golden Gate Transit (ferry)&quot;</bucket>
            </map>
            <map to='#ccc94d'>
              <bucket>&quot;Tri-Delta&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#ff7f0f'>
              <bucket>&quot;BART PRE-TEST&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Santa Rosa CityBus&quot;</bucket>
            </map>
            <map to='#ffb977'>
              <bucket>&quot;Caltrain&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Caltrain Pilot&quot;</bucket>
            </map>
            <map to='#ffd94a'>
              <bucket>&quot;LAVTA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Calculation_2830105132955536:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EARLY AM&quot;</bucket>
            <bucket>&quot;AM PEAK&quot;</bucket>
            <bucket>&quot;MIDDAY&quot;</bucket>
            <bucket>&quot;PM PEAK&quot;</bucket>
            <bucket>&quot;EVENING&quot;</bucket>
            <bucket>&quot;MISSING&quot;</bucket>
          </dictionary>
        </sort>
        <sort class='manual' column='[none:day_part:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;EARLY AM&quot;</bucket>
            <bucket>&quot;AM PEAK&quot;</bucket>
            <bucket>&quot;MIDDAY&quot;</bucket>
            <bucket>&quot;PM PEAK&quot;</bucket>
            <bucket>&quot;EVENING&quot;</bucket>
            <bucket>%null%</bucket>
            <bucket>&quot;.&quot;</bucket>
            <bucket>&quot;missing&quot;</bucket>
            <bucket>&quot;NA&quot;</bucket>
            <bucket>&quot;NIGHT&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='First Boarding'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Location of First Transit Boarding on </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt; </run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Trips by Operator</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BoardingAndAlighting#csv (BoardingAndAlighting.csv)' name='csv.41690.411216701388' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='csv.41690.411216701388'>
            <column caption='Time Period' datatype='string' name='[Calculation_2830105132955536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [day_part]&#13;&#10;WHEN &apos;NIGHT&apos; THEN &apos;EVENING&apos;&#13;&#10;WHEN &apos;.&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN &apos;NA&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN Null THEN &apos;MISSING&apos;&#13;&#10;ELSE [day_part]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Avg' datatype='real' name='[first_board_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' datatype='real' name='[first_board_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2830105132955536]' derivation='None' name='[none:Calculation_2830105132955536:nk]' pivot='key' type='nominal' />
            <column-instance column='[first_board_lat]' derivation='None' name='[none:first_board_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_board_lon]' derivation='None' name='[none:first_board_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]'>
            <groupfilter function='member' level='[none:Calculation_2830105132955536:nk]' member='&quot;AM PEAK&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41690.411216701388].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='%null%' />
              <groupfilter from='&quot;AC Transit&quot;' function='range' level='[none:operator:nk]' to='&quot;Union City&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41690.411216701388].[none:operator:nk]</column>
            <column>[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41690.411216701388].[none:first_board_lon:qk]' field-type='quantitative' max='-13495031.933632657' min='-13687210.580327448' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[csv.41690.411216701388].[none:first_board_lat:qk]' field-type='quantitative' max='4600191.7997669885' min='4461414.3404130172' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[csv.41690.411216701388].[sum:trip_weight:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-style' value='italic' />
            <format attr='font-weight' value='normal' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41690.411216701388].[none:operator:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
            <format attr='size' field='[csv.41690.411216701388].[sum:trip_weight:qk]' value='Estimated Trips'>
              <formatted-text>
                <run>Estimated Trips</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[csv.41690.411216701388].[none:operator:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
            <format attr='color' value='#4f6e8d' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4f6e8d' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#4f6e8d' />
            <format attr='font-weight' value='normal' />
            <format attr='font-style' value='italic' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='7'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41690.411216701388].[none:operator:nk]' />
              <size column='[csv.41690.411216701388].[sum:trip_weight:qk]' />
              <lod column='[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2880' lmargin='2880'>Surveyed Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2880' lmargin='2880'>&lt;[csv.41690.411216701388].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2880' lmargin='2880'>Estimated Trip Boardings:&#9;</run>
                <run bold='true' fontsize='12' indent='-2880' lmargin='2880'>&lt;[csv.41690.411216701388].[sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='false' />
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41690.411216701388].[none:first_board_lat:qk]</rows>
        <cols>[csv.41690.411216701388].[none:first_board_lon:qk]</cols>
        <pages>
          <column>[csv.41690.411216701388].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Last Alighting'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'>Location of Last Transit Alighting on </run>
            <run fontname='Arial' fontsize='20' italic='true'>&lt;Page Name&gt;</run>
            <run bold='false' fontname='Arial' fontsize='20' italic='true'> Trips by Operator</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BoardingAndAlighting#csv (BoardingAndAlighting.csv)' name='csv.41690.411216701388' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='csv.41690.411216701388'>
            <column caption='Time Period' datatype='string' name='[Calculation_2830105132955536]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [day_part]&#13;&#10;WHEN &apos;NIGHT&apos; THEN &apos;EVENING&apos;&#13;&#10;WHEN &apos;.&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN &apos;missing&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN &apos;NA&apos; THEN &apos;MISSING&apos;&#13;&#10;WHEN Null THEN &apos;MISSING&apos;&#13;&#10;ELSE [day_part]&#13;&#10;END' scope-isolation='false' />
            </column>
            <column aggregation='Avg' datatype='real' name='[last_alight_lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' datatype='real' name='[last_alight_lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column-instance column='[Calculation_2830105132955536]' derivation='None' name='[none:Calculation_2830105132955536:nk]' pivot='key' type='nominal' />
            <column-instance column='[last_alight_lat]' derivation='None' name='[none:last_alight_lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[last_alight_lon]' derivation='None' name='[none:last_alight_lon:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[trip_weight]' derivation='Sum' name='[sum:trip_weight:qk]' pivot='key' type='quantitative' />
            <column caption='Estimated Trips' datatype='real' name='[trip_weight]' role='measure' type='quantitative'>
            </column>
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;WEEKDAY&quot;' value='Weekday' />
                <alias key='&quot;WEEKEND&quot;' value='Weekend' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]'>
            <groupfilter function='member' level='[none:Calculation_2830105132955536:nk]' member='&quot;AM PEAK&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41690.411216701388].[none:operator:nk]'>
            <groupfilter function='level-members' level='[none:operator:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41690.411216701388].[none:operator:nk]</column>
            <column>[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[csv.41690.411216701388].[none:last_alight_lon:qk]' field-type='quantitative' max='-13493439.285464052' min='-13682085.871271852' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[csv.41690.411216701388].[none:last_alight_lat:qk]' field-type='quantitative' max='4597570.2676446019' min='4460442.238901007' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[csv.41690.411216701388].[none:operator:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
            <format attr='size' field='[csv.41690.411216701388].[sum:trip_weight:qk]' value='Estimated Trips'>
              <formatted-text>
                <run bold='false' italic='true'>Estimated Trips</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[csv.41690.411216701388].[none:operator:nk]' value=''>
              <formatted-text>
              </formatted-text>
            </format>
            <format attr='color' value='#4f6e8d' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4f6e8d' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#4f6e8d' />
            <format attr='font-weight' value='normal' />
            <format attr='font-style' value='italic' />
            <format attr='font-family' value='Arial' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value=''>
              <formatted-text>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41690.411216701388].[none:operator:nk]' />
              <size column='[csv.41690.411216701388].[sum:trip_weight:qk]' />
              <lod column='[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]' />
              <lod column='[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontsize='12' indent='-2880' lmargin='2880'>Surveyed Operator:&#9;</run>
                <run bold='true' fontsize='12' indent='-2880' lmargin='2880'>&lt;[csv.41690.411216701388].[none:operator:nk]&gt;&#10;</run>
                <run fontcolor='#787878' fontsize='12' indent='-2880' lmargin='2880'>Estimated Trip Alightings:&#9;</run>
                <run bold='true' fontsize='12' indent='-2880' lmargin='2880'>&lt;[csv.41690.411216701388].[sum:trip_weight:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='206' />
                <format attr='has-stroke' value='false' />
                <format attr='size' value='1.4612706899642944' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41690.411216701388].[none:last_alight_lat:qk]</rows>
        <cols>[csv.41690.411216701388].[none:last_alight_lon:qk]</cols>
        <pages>
          <column>[csv.41690.411216701388].[none:weekpart:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='First Boarding'>
      <cards>
        <edge name='left'>
          <strip size='224'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='222'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card mode='radiolist' param='[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]' show-domain='false' show-search='false' type='filter' />
            <card param='[csv.41690.411216701388].[none:operator:nk]' type='filter' />
            <card pane-specification-id='7' param='[csv.41690.411216701388].[none:operator:nk]' type='color' />
            <card pane-specification-id='7' param='[csv.41690.411216701388].[sum:trip_weight:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='90'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]</field>
          <field>[csv.41690.411216701388].[none:day_part:nk]</field>
          <field>[csv.41690.411216701388].[none:operator:nk]</field>
          <field>[csv.41690.411216701388].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Last Alighting'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='229'>
            <card playctrls='0' slider='0' trailctrls='0' type='currpage' />
            <card mode='radiolist' param='[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]' show-search='false' type='filter' />
            <card param='[csv.41690.411216701388].[none:operator:nk]' type='filter' />
            <card pane-specification-id='0' param='[csv.41690.411216701388].[none:operator:nk]' type='color' />
            <card pane-specification-id='0' param='[csv.41690.411216701388].[sum:trip_weight:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41690.411216701388].[none:Calculation_2830105132955536:nk]</field>
          <field>[csv.41690.411216701388].[none:operator:nk]</field>
          <field>[csv.41690.411216701388].[none:weekpart:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='First Boarding' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Last Alighting' width='192'>
      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
      B6/bySdSsPWLAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
