<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.1008.1759                               -->
<workbook original-version='10.5' source-build='10.5.9 (10500.18.1008.1759)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='12' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='route_level_analysis' inline='true' name='federated.1hcs22b0sjelfs17e15x6081mi6k' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='route_level_analysis' name='textscan.1eomjis1i6i5bm10z8ipe0rk3npv'>
            <connection class='textscan' directory='C:/Users/USDO225024/Documents/GitHub/onboard-surveys/decomposition' filename='route_level_analysis.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1eomjis1i6i5bm10z8ipe0rk3npv' name='route_level_analysis.csv' table='[route_level_analysis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='route' ordinal='1' />
            <column datatype='string' name='survey_name' ordinal='2' />
            <column datatype='integer' name='survey_year' ordinal='3' />
            <column datatype='string' name='weekpart' ordinal='4' />
            <column datatype='real' name='first_after' ordinal='5' />
            <column datatype='real' name='first_before' ordinal='6' />
            <column datatype='real' name='intercept' ordinal='7' />
            <column datatype='real' name='second_after' ordinal='8' />
            <column datatype='real' name='second_before' ordinal='9' />
            <column datatype='integer' name='third_after' ordinal='10' />
            <column datatype='real' name='third_before' ordinal='11' />
            <column datatype='real' name='survey_boardings' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[survey_name]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[survey_year]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_after</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>first_after</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>first_before</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intercept</remote-name>
            <remote-type>5</remote-type>
            <local-name>[intercept]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>intercept</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_after</remote-name>
            <remote-type>5</remote-type>
            <local-name>[second_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>second_after</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[second_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>second_before</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>third_after</remote-name>
            <remote-type>20</remote-type>
            <local-name>[third_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>third_after</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>third_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[third_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>third_before</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[survey_boardings]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_boardings</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[usr:Calculation_1291970208981024770:qk]&quot;' value='Percent Difference' />
        </aliases>
      </column>
      <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
      </column>
      <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
      </column>
      <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[survey_name]=[operator]' />
      </column>
      <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
      <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
      <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
      <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
      <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
      <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
      <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
      <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
      <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
      <column-instance column='[survey_name]' derivation='None' name='[none:survey_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.433915' measure-ordering='alphabetic' measure-percentage='0.566085' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:survey_name:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;SF Muni&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:operator:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caltrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SF Muni&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missing&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Terminology'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Terminology</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The &quot;boarding weight&quot; is the number of passengers -- usually fractional -- that the respondent represents;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The &quot;trip weight&quot; is the boarding weight divided by the number of transfers the passenger made;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- References to &quot;trips&quot; are summaries of the &quot;trip weight&quot; in the survey;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- References to &quot;boardings&quot; are summaries of the &quot;boarding weight&quot; in the survey;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The references to boardings are often called &quot;unlinked trips&quot;;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The references to trips are often called &quot;linked trips&quot;.</run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontsize='12'>~ end/ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='632' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='chart.boardings v diff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level: Boardings versus Difference</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' />
              <lod column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' />
              <tooltip column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Difference:&#9;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Survey Boardings:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Est. Boardings:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='185' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='chart.transfer freq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
            </column>
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[intercept]' derivation='None' name='[none:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1395552990099406853]' derivation='Sum' name='[sum:Calculation_1395552990099406853:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>44020.848375000001</max>
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' />
              <size column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' />
              <tooltip column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Boardings/Trip:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Survey Boardings:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Intercept Trips:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6811602115631104' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='table.oper back-forth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[survey_name]' derivation='None' name='[none:survey_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='130' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' value='156' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]' value='144' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk] / ([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]))</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.oper seq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Operator-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1395552990096076803:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;Caltrain&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='130' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.sequence'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;Caltrain in 2014&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;MUNI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='122' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.simple seq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column-instance column='[Calculation_1395552990095491073]' derivation='Avg' name='[diff:win:avg:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' from='0' ordering-type='CellInPane' to='0' type='WindowTotal' window-options='IncludeCurrent' />
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[diff:win:avg:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;Caltrain in 2014&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;MUNI&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.transfer freq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990099406853]' derivation='Sum' name='[sum:Calculation_1395552990099406853:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='137' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='0.875' source-height='30'>
    <window class='worksheet' name='Terminology'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='table.sequence' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='227'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='250'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.simple seq' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='178'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='299'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1291970208980934657:qk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1291970208981426179:qk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='chart.boardings v diff'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.oper seq'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='256'>
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.oper back-forth'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='300'>
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.transfer freq' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='194'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' show-all='false' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='chart.transfer freq' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' show-all='false' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Terminology' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='chart.boardings v diff' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='chart.transfer freq' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='table.oper back-forth' width='192'>
      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
      RLD0/+UJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='380' name='table.oper seq' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAF8CAYAAADGl2zdAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deVhWdeL//+f8gEHFwJTUtBTJXT+OKZph4hLmhmbuYmJqUVmmmak1alpm
      pkWOlhm55L6bKW6pCCiEig4xirmEiIWiwAiBxnDz8/vHDYhwswgo2Hk9rsvrus99n/ucN3cz
      79c57+387datW7cQERHD+f/KugAiIlI2FAAiIgalABARMSgFgIiIQSkAREQMSgEgImJQCgAR
      EYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDUgCIiBiUAkBE
      xKAUACIiBqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABAR
      MSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAERE
      DEoBICJiUAoAERGDUgCIiBiUAkBExKAUACIiBqUAEBExKAWAiIhBKQBERAxKASAiYlAKABER
      g1IAiIgYlAJARMSgFAAiIgalABARMSjrsi6AiEipSLvEofXfsnxLKOdiE7kJYGNPjbZj8P3X
      AGpb/Moh1n+7nI2HTxOXnI75KzUY9MlO3n7qfha+bCgARKQEgpjhMgG/fD+3wb7GIzg16Un3
      Id3xeNKJSlbFOK6HD2Ez3PLdOyNqC+Nf/4SfEnJ9kJ5MXHwqprzfIGqNNyO++NkcFHd8JY6k
      tKKU8cGnJiARuYfSSY6LJSJgCXNfG4Bbp6HM3neJUq1fMyJZPNFC5V/QV4778LqFyt9odAcg
      IvfPzXNsfW8QwQHTWfJhDx4t0t1AwTKCN7I6JmurGk+PncU/B7aiZuatRtqNG7kqulQObNhK
      Vl7Y1OjG23PH4tG4ZubdSRppBrkDUACISClpxNgtaxhRN8dbaX8Qf+kM/n6+rNhwgrh0gHTi
      9k7jJRs7Ns1ww97isdyYERbGjCKc9bcL50jPfO0w4CPmj2hDzlyxrVQp1zcucu501jceZcgn
      HzKo2R3fwNa2CCf+C1ATkIjcO7YP4VjfhUHjfdm+cwGD69lkf5TgN5mZu5NL9XTt2ram8JuK
      eK5dznrdmidblMJtyANKASAi94VVVVfeXf0Nw+tkvZNO4PxvOJ5ReuewsTZuZV4cagISkfvH
      tgVvzhpJoNdyYgAStrLhwBhaP2eXZ9egGS5MyBwG5OETRs5BQBdXDKP/wjN5vuM3wSXviKRG
      Y9myphMBw/qT9yt+THDJO4Yp9/nM0rh6bBtLln9PwH/Ok3gToCJVazWgXf+RvDKkA4/n23R0
      kRXZ58/VVJZ2iX2ff8D8/eahqI3GbmHNHe1oZhk3ovFf+SXrdpzgdFwy6ZiHrNZt3BXPt7zo
      1bhq/nc/QTNwuf1jZo6oStMdgIjcX1ZNBzC4ZdZWOodCjlOKNwH3RnIEK8b2oefr89h6NKvy
      B7hJYmwEuxa+zQt9xrIl6i7/kuQgZvR5gfe2RmTPQ8grg8v+HzHk2QG8tySAiMzKH8xDVs8f
      Xc2HL/ZiyLyjFK1BzURi+AamD3VXAIjI/VYD9x5tsrfSj/+HvNfy5UhGFCvGvsrCwsaZJvzE
      J69/RFBRuzUyolgxdjJ+hRw2OegjXpr0AxfyywcA0rmwYRxjV0QVHqZ7/0mvl+ex69xNNQGJ
      yP1XzckZB46RBHD5GvF3+f26I9YQNsL8OmdzUH7NJwAj1oRh/krOSWYe+ITNoIApZkQunsjC
      U1m1bzWefmUq4zzbUv8hW0j7g/NB83lvemYFneDHTJ8ubJ/hRt5GrZxSCZn9euZxK9Kg37tM
      9epM/cce4o5WpOTdzJzsd3vIar3neW/GK7g3rkklqwxuXDnBpo+nZoZTOqcWTmN1p1wjsXJL
      TycdG+ybdNUdgIiUAcfq1MzeOMeFi2VYloKkHuC77EkGDnT7ZB3zX+1grvwBbB+iftdprF86
      kqy+7SS/dewp5Ko+5bAPM39IgIr/YOy6/ax7vw/Nclf+wNl13xKYlT2NvFm5ehp9mmXNV7Ci
      Us02jFi4iY86Zo2uOsPKjccLPnmj4Xy9KwD/VR8qAERE8pMatBf/rAq4pTdvdbXc0WrV9CVe
      65JVCR8j5GhqAUeNYvWXP5BQ7WneW+HLiAb59RxHss/vdvgMGDcay7va0+PVl24HUFAokQX9
      UQ2epE1184EUACIi+fjlZHj260Yd2lEj3z3taN/ZNXsr/OQvBRw1nXSaMfbr+fR3LmDYasJp
      TmbNV7DpgGvrAvZt2IFnH818ffkkp4u4LIYCQETuv9SUHCNWGlCvoDbrMpNB0vWk7K0GhRTS
      rq4zWXVw0pWr5H8P4EC3jxcyoqDKHyApicSs1871qFvg7nVxbpj1+jeuxBV86CzqBBaR+y7h
      9EmyJ+M+UYfHyrIw+fqNS9G3tyzOMcjPlavEQz4dwTVp+ITlBTDuPH0Mv2a9PrOQ/i4Li3jy
      y1wrYq+67gBE5D5L5WjIsewtmyb1KZc3ADhSvWbhe9270z+SfUdxr+gOQETuq4zI7/g2MGvL
      hm5d2hdh/Z6yYIdDFRswz7nFw+cwM9zuY0kdqlAVzHdKjcayZc2IUg9K3QGIyP2TEcXqT1dz
      e/XmfvRuXz6rf4BGTbOmLKdzyD+4gHb9e6B2Y5o7ZL4+8yMB92CorAJARO6P5Ai+8R6RY1KV
      A90mv0pBg1vKWrVnOpEVAUl+HzPPP7HQmbYZN6IJj7yLp9PkqyUdu2YnAIunL+Ncoc8pSOPq
      sQiKmhUKABG5dzJukPjbKfZ98y4v9BrFtz/ffgZXNY8PmNylCJ2hZamGB14eWZVwAn6TnufF
      6Ss4dD6eP7Ir4wxuJP7GqeCNzB/zAp3cBjDvWEopnNyKtkO9aJS5lX5qEV79vJm//RS/Jd64
      HURpfxB/PowdK6YzvEsner6+tcgBoD4AESklZ1jY34XCx6rYUOP5j1n1fn4PgylP7HCb8AEe
      P03IXLPnJud2LeTtXUUdkVNCdV/ko7H+DFt4inQgPe4Eqz8cwepSOrzuAETk/qnYgH6fbGTr
      tC5ULcdNP3ewd2PaugW82KBikXa3sW9Cu+aOpXRyK5xH+LLy3WeoYVP43lCRxzu3KnJnse4A
      ROQeqkjVWg/zWMOedB/SHY8nnTLXsXmwWFV1Zfy6/fQP+4Gd6/ewK+IcsVlrQtvYU+MRJ5p0
      7ki353rg1qx6njV9SsaWBoPns73rL/jv2Mr3u4P55WIcWatHV6xai9r1W9CpU1+6ezyJ0138
      wH+7devWrVItq4iIPBDUBCQiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABARMSgFgIiIQSkA
      REQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoA
      ERGDUgCIiBiUAkBExKAUACIiBqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJA
      RMSgFAAiIgalABARMSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiIGJR1SQ8QFhZWGuUQEZH7
      7G+3bt26VdaFEBGR+09NQCIiBqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJA
      RMSgFAAiIgalABARMSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQ
      ETEoBYCIiEEpAEREDEoBICJiUAoAERGDUgCIiBiUAkBExKAUACIiBqUAEBExKAWAiIhBKQBE
      RAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgZlXXanvsiKYf1ZeKaQ3WzsqfGIE006d6Tb
      cz1wa1Yd27s6TxwbXu7FvPA7323z3l6+7l+taCVdMYz+hRS0YtVa1K7fjh5DPRno6kQlq+If
      q2Ae+ITNwK0ERxCRQqQl8cuJ7ezdGkjQqQtcuZpEWuZHtg7Vqde0A24vDGSYW33s8qtFo3wZ
      NMiXqGIVwBnvjRvxdi7WlzOZSD0fxJqVa9kblvNvsMWhbhPad/MsywAoovRk4mIjiFsTQcCa
      hVT8xyt89cWrtLAv4vcTDhMQnvftY/sDSOjfn6JFQOFuJsZy/uhWFh7dysKK/+CVhfN4uWVV
      8skBESmPTL+x56OJfLL3PKkmy7ukJV3ll5+28MtPW1jm2Ja3FizAs2FpV6WVqVy5+N9Oi97J
      7Imz2RmdZulTki6Gs8s3/AEIgFxu/vwtr46twJplI3AuQu2aELCfY5Y+OBbC0dT+9LAr7RIC
      N3/m25eHctlnEzPcippUIlLmYnaxbOd5UrHFoXF7Br/wAm4dGvJ41WqZV/omUhPOE7FrG9+s
      2cbJ+KP4eHnx59q1jMp9te7szcYw77s6fexKL/osiKSyuyd9qhfnD7jOiQVvMXZlJGmAtV19
      3IZ54dmtPU3qOphbT9KSuHh6H8tmfcHfbt26das4pym5O5uAPHzCmGGhXSPtj3guhe9k2YLF
      /HghPfNdG7rM3s/c5wqrvVPZ/U5HpgUCPMrIletxXpq1DR0/CuTzIiTAHc02Hj6E5S5oxg0S
      L0Syf+PnLNx6jptZ79t0Yfb+uRRaTACCmOEyAT+yTmP59xCReyhqJZMWQ98Jg3GtWUhjs+ks
      vl5e+J41Ye0+h8Nz3Et2RW0KZVb3N9l2vRZeK7fzVtNiHCOr2cn6MbpP+4z3uhXQRMX18t8J
      bPuQI/U7jGD2+qWMrJP1bjqHjvxc+JdTg9ifWdnj4Ea7pna0dW2T/XHIkeNklEYhrSpRtb4L
      g95fx85lw2mUXUx/NvrFlcYZROR+cPZi7lyvwit/AOuGeE/1pBZgCg0lrISnvu63Gr/rYN3+
      FUYVp/LPKtZjffncbzOzehVU+QNUKf8BkM2qKT08nsjeTP/zz0Ir79Tgg4Rkvnbo3oXWQLVO
      7mRFQPpef4JLJQFus2/xJuMGOGRvhx89QWrpnkJEyoumTWkKkJJCSkmOY4pg2bJQTNRi0Oge
      FLv5v3o/FmyYSkfHot2LPDgBAFhZ5fijbKwL6WDN4HjIIcyNRjZ0eKql+e1qz9Ap8yXphwg5
      XsoJgBWt27a7vXnlKvGlfAYRKR9MJ04QAdCiBS1KcJyU3UvZGAvWLYYwpEUJGpIqO+J4F8Mk
      H6AASCYy4vaAqkb16ha8e0Yw/nsz+wxsutGlfVZc1KBdh6xGmiT2BVoYIlRCVtY2pX5MESln
      TGdZ9tlWrlIZd88+FKvPFoBIln0bjInK9Bg9iFqlWMTCPCABkMa5Df9kfmBmhe7QjdEvFBwA
      GcdDOJRV/3dwpXWO24W6nZ7LbqdP2uPP8VIubWrqH6V8RBEpP0yknt/J1AFe+J6Fx/p+zBT3
      4o/ZTNm/kq2xQNNRvNL+Pg7MNJ0tx8NAM26Q+N9Yovz3s/77NQScyxxbY9OMkV9MpkshoyvD
      A/eRlPnatXN77hiIU/dp3Oos5EwMkBREaOS7tC5Bp8udkgnaH5K95dCyOYXcq4hIOZeWdJWk
      y79yKGg3u3cGcvL3VEzWjrR9y4cvvJre5eTUnGLZunI/KVTG3avffbv6N8UHMuflyeUnAPwm
      uGQPgbTMhhqtBvPOzLF0ebSwCQDH8d+TVf13xN0t9zjMhnR49lG+XX4ZuMyeg5G80bQ0EiCD
      qC057lSoRvcuLQv8hoiUT/unuDBlf+53rbGr3ZznvD0ZNaILTsWv+QEwBX/LskigVj+8SnAX
      cRdnJD7wM157fzPRaQ9KE5CdC0PnLmX9wvFFqPyByFCCsur/Nq60tTAOv2nn7jya+fpyyDEu
      lqB4GTcS+e3UduZ792HYJz+RkPm+Q7fJvNpac4FF/jpMpMad4+ejAfwYHI2lebZFF8vGpbtJ
      wZr2r4yi1Boh8pMWzeZ3PPB4ZzPRabY4Dfi8/NwBFCg1jHWTvFhnY0+T3u8x+52uPF5A8kYe
      3MPlzNdt3DtZXu6haTvcHJazIQk48yMBF0cwoihtNX4TcCn4VgUAm2ZjWDy9C5oHLPJgcp8T
      lj2235SaQGLqNX49FERAgD97ju3Cd9Iuljm2ZYzPF3g1vftbAVPoMpZFmKCWJ6N73Nur/+sn
      fJk0yZcT1wHbpnh94cOYto7lJwAszXzNuJHIf2Oj+Cl4O2uX7OLczWROb32PQcGhfLpuGpZX
      WTjLoQNZ1X9LOj2T32o/renS3YEN5gTgUGgcI+rWKIW/pCIN+s3EZ3IXinKzIiL3luWmnEzO
      3mzc6E1ha65Z21Wjul01qvdvzNP9vXkvLRr/+dOZtukoC0YNJubz75javspdlOo6fqv9uI41
      LYYMoSQjPws7z+2lIaxxbDuK2bO9aZVZ1HITAJZYVaqKY/2q9K7vQu8hw1k7/jV8jiWRHvcD
      k2c9xf65z5GndefiTwTFZG2EM6+XC/OKcK7wgMMkDC7Z4nBPvDCLma93pXFV1fwif2m2TnSZ
      vIwW/5jKkKn72fbBl7jvmUq7otaokStZFmqCyr0ZPegedf2azrJ2zBh8TlwHa0c6TlzM7AFO
      d3RYPxh9AAC2DfCc4U32HC7/79mTkHe3iwE/UqzFlo/tJ8DC8fLw8CEsLMz8z98HjxyJ8WtQ
      KLHFObeI3DPuc8Ju/382978iXP3nzxrH7lN4zQW47se63UWdC5zCjm/WYh75+Qr3ZOSn6SzL
      Ro00V/5V2jN1sx+f56r84UEKAIAaj/JY9kYiSUm5d4gj9FBx19o/RsjRu1y0wd6Nad99RJes
      EEjwY9LQjwhKLmYRROQBU4VWrZwBE5cvXy3aV6LWsirYBJXd8ep3L67+UwiYMYZFkWlYO3Zn
      zuZ/0fcxyylTrpuA8khN5fYUK2uscre05Fz732EAi36cQttCWmNyrvQZuD+I1B498jYrFcDq
      0R588nUi3iO+4OebQIIfEwaCz6YZ+fRRiMhficmUz4MDLO9N8Kq1RAG1+nlxL0Z+mkLnM2vP
      dajizqz1s3AvoGviAboDSCNiybcEZm/XpLrjnXvkXPs/9+zf/OScFUzIQYKLsXKblfMwfFeM
      pVnWChAJfkwYOEN3AiIPFBN3VZcDEEtoaAxgjbNznUL3JnYt3+xIAev2vFKSJT8LKM/aRdu4
      jjXt3pxSYOUPD0IApP1B/PlDfDO+H6+uyu7dxaZLN+6c35XK0ZDbj35xfap10Z7GVbcNrlkT
      AkqwOJyV8wh8V465IwQmqzlI5AESwAyPMSzwz/9pYHe6zgmfiSyKBKp40LdTYQ0qJoK/XUYk
      UGvQaO7JyM8oP/wigcoevNi38FFJ5aYJqPCZwDnYNOPNN3KNAMq59j9tcLU0+8uipnTu/ijL
      l18G0jkUcpwMt7bFepSjbYNRLPzmJmNfXc6pdMyjlUZX4F9L36WtmoNEyj1T/FFWThrCStua
      tHy2Dz16uNGh4eNUrWaXWVmaSE34nXNH9rJ22Qr8o9PA2pFeU8cXPgIodiNLd6eAdQuGDGlR
      jMo3hR3j3JkZbMp3+GpKRIT5GcQuLrgU4YjlJgCKyqbGM0xc+Dn9c03ayrn2P23c6XQX4zmb
      tnPDYfkGkoCkfYGET2lL62KWz77FGyz8NJGhk38gLh3SL2xg3GgUAiLlXgdemzmA+K93EH7l
      CuG7fAnf5csnBXzD2rEto2bPxrtVYZfzJiLWryfCBJV7j6ZYIz9jt7Ip2HxrUqVhQ4urj169
      mtkRHTCVdi5TCz1k+W8CoiJVa9WiRaeXmbR4Mwe2z6d/nocB51z7Hxq1c7m78fwtn6JDVtNN
      0h72HS3ZMwLs3aax7lOP7DKkX9jAuLFfEaHmIJFyzBanXlNY4hdI4PqFvOfdn6cbV6e6Q87B
      k9bYVatO46eHM27heg74LcK7VREmgF33w3djLNCUUa+0L9aVd+TmzUQCVHFnysROFh8ak5Jy
      d4+lKcNnAouISJGYgpnpPo4dKVXo/tk2ZnUqnQ6EB+AOQETE2FJ2b2R3ClTpPpUppVT5gwJA
      RKSci2XrpmBMVfoya4blpp/ieuA6gUVEjMQUsZ7NkbXwXDal6GsNFZH6AEREDEpNQCIiBqUA
      EBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABARMSgFgIiIQSkA
      REQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoA
      ERGDUgCIiBiUAkBExKAUACIiBqUAEBExKAWAiIhBKQBERAzKuqQHuHHjRmmUQ0RE7jPdAYiI
      GJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDUgCIiBiUAkBExKAUACIi
      BqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABARMSgFgIiI
      QSkAREQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJi
      UAoAERGDUgCIiBiUAiCXw7PdcHMz/5t9uKxLIyJy71iXdQHukHGTi0e+Z+OmfYSeieFaSjoA
      NpUfwbFuI57rOhD3Hi2oW9GqjAv6IIph7egXWXwuc7PBa6xe6kmdMi2TSDmVlszZn3exf/th
      Qk5HE3ctmbTMj2ztH6FuY1fa936BQe2dsSu0Fk3F750ezD1W1JM7MXLFSkbWK3bp75AWF8Hu
      LSvx+/EUUYmpmABs7XmkhlN5CYAMrgR+wXsfb+fXP/N+mp5yjcunrrHi1GFWfPV/jFv1Ff1r
      3f9S3pazMm3Aa6uX4qmaVOTBZ/qd/XP/yef7o0g1Wd4lLfkaZ4/+wNmjP7CqWmtenzePgfUL
      qkovcCH6XhS2MEmEf/0u7677JTu8sqUlcy0mojwEQDInfd9l3OrTpBdl9/Q/ScvnP4yISIlc
      +pGVe6JIxRb7hu3o37s37V3rU/vhqplX+iZSE6M49aMfyzb4EZlwnIXe3txcugyv/K7YU6OJ
      vgbYefD57km0uS9/SBIHP3iRDw4mgXU1mnqMYMyALjSqY48tQFoyMWfCyzoAMohem6vyr1CL
      DkPeYnS/J6lbpSJWQMbN61yJDmGb70p+OF6GxX2g1cFzaRCeZV0MkXLNlrodX+eNN/vxVA1b
      C59bY1e1IW2HTKDtgD4s9/Zm+fnzfPfdQTxndrZcoV64QDRAvXo43cOS32bi/PK3+ehgEji0
      Y9Li2XjUzlUyW3vqtHAr2wDIiF7DR4tvV/42dfsze8GbPPXwnW38VhWrULtJT974oievxJ8h
      9m/3v6wiYgD1PPnooyLua12fkZMGstt7HVeOHuPfdLZ4dW+6coVrgJ2TE4+UYlHzdeV7fFad
      x2Rdn5FfWKj8cyjDUUBX2Tl/BVl9klTtzsyvxuWp/HP7u2MjnKrd88KJiBSucWOaAKSmkpLP
      LtHR0QDUq+d0P0rEL99v4qQJar4wgeEF9k2U5SigmP38cCL72p9nxrzJM/YlOeD/+CPqFPsO
      bmLfj78S+9/L/DerQ9mmMo/UaUQ7j+GM7N0Kx78Xq8B3jqLJdo7FL7qxOM/+uTuHC+g4/t/v
      +C+YxVf+Z7mWkk6D11az9I5e5Qxuxp0l9IAf2/eFERMXnz1CCirw8KNP0Oy5gbzq2bHAEVIx
      a0fzYuYfkPccBeyTY3TW4VO/mn9Xm8rUadGLURNfoUvtYv2gIg88U3g4JwGaN6e55T2IvnAJ
      sMPJ6X5c/x9j+/YrQGNeGNi80Aq+zAIg5vCB21f/9r3o92xJav8w5veczNaUfLqR01O49utx
      dvzrODtWdWTq4hk8V7OcDCVNPsxsr/fZk5jfDrH8MO4lPv+3heFRAPzJfy+f4vCKUxxe24QX
      /zUP7+YlStIc/sfv/l8xZ9FWfr6a67dNTyHm+AZmeB3kxMcrmdiuUimdU+QBYTrPqgU7uIYd
      nQf2zKd55xKXLgHUo57TfSjTyVCOpALNu+Jes/Ddy6gJ6Aa/nLx9KW3ftTMuJaqP/+RGfpV/
      bomBzPrnBmJKcrrSkhHN2nc/KKDyBzCRmpJf5Z9L+mlWT/mSwzdKo3AQvfRVhs7YkLfyv+Oc
      V9m+cD15boxE/rJMpEbt4cPh3iw/D7U9PmBCZ7t89o0mOhqwc+J+3ABcO32aa8DjrZ4sUn9D
      Gd0BXOVK7O2tFk0alcIxbahcpwWdez6He7s21H/MkYf+DvA//vj9JDsWzGbpT1fNHc7n1rI5
      bDAT7ip1co6iKY15ADcI/Xw8i0+nAxV4os94Jg3twBO1H8JSg0qFh5vh0qcrfVyforFTTapU
      tAIyuHn9Ij8t+Yg523/lT4DkPazf/TLP9K9+twXKIz3dXLZarZ9nkFcPujSuS5WKVmTcvMje
      2eOYE5iZXJeOcCJ2FA3KdG6GyL2TlnyN5CsXCAnex769h4mMTcVkXY3Wr3/CnKGNsTReCIAL
      0VwASPXjHTe/XB9aY1f1YWrXd6V916707NQCiwOP7kLclTgAnJyczOWOiyBg1w52HDjGr7GJ
      mXMbbLF/pC6Nn/UoqwD4jd+ibm9VrlTS5oMWeG/dzfsWG/f/zkO1W+H56TIc33+BWYfTgWRC
      T5wDl8YlPG/xpfz0JXP8EqHC//Haoi/wrJ9fO7ojPT7dy2BH85DYO1lRsYozXSYuoZa9F96r
      LwEQcTycG/2fo6S/qv0z7/LVtJ55+hWsKtal54yp/PL8BLYlA5jI0NwM+Ys5+IEbHxzM/a41
      drWa8uzIgQz37EidQitsWyrYQt6ZWGCeU3B7Utnyz+rQffKnTHKvXeyK+Vr8NQDiDy3gzW92
      ExFn6cRpJF87y9H1PmU9D6C02OPoWPg+z3R6Cg6bF/i5Eh9/z0uVv2g2+J4jvWpbJs7/lD5O
      Bd2JVOLhQv82Kxq7daTm6tVcAYiLJx5KvMxDjeb/yL9T2ao6NWsAySU8icgDxUTq1V/5z/HD
      HHCuh2fHOvlf/QPU88R3Xz6zb0ypJP73d84f8GPllt1ExMWw58PhnL/ki+/I+kleNNkAABhI
      SURBVCWqnE8f3AbYUqNFN3p27Up718bUfcQ8CcyUmkhU2A+s+nbtXyUAiqZSpcplXYRM6aTT
      hNcKrfzvQqXKPATmABCREus8M4jOM82vTamJ/PdGPBdCgjl0KJD9J/ayfNpeVlVrzSufzGFo
      42K03VjbUfWRzEllQ0YTvvBtJmw6z/nl7/Pt0xt5vQQNFE2GfcmHL1luUrK2q0rDjiP5qGO/
      sgqAx3jMGchsBkq5cQNK3GABGTcvErF7PzsOHeZU1O9c/m8RO0/vO3vcp8/D824q///Fczr4
      Rw7sO8ShMxeJv5ZStKUzRKTErO2q8ohdVR55viFtnx/JO2kxBC6axazvj/P1mJe4NHsxk9o5
      lOAMDrQc+wXvXxnCh4eusH37MV5vXPxFI2o2LEp/gkNZjQKqTs0cHYYRp8+U8HjJnFw7mcEe
      wxk3fwX7j/9ajit/gBrUr1fUoZoZXAn8jJEe/Xj1g8VsPHyKy6r8RcqWbR06vr2I9dM742D6
      Hb+Pv+FYifvBHHAfah5OmnrypLnz+C49/vjjAFwyjz0tVBndAVSicfMGcNg8eDB530HC3nyy
      2ENBYza8y7isJSUqPMFzL72C53P/x2OOuUbUHJ6N2/t7Slj2++tG6Oe8Ns2PRACb6vyj3yjG
      9HXFqWYV7miej1nL6BcXazimyH1jTTX3CYzecRCff+9h0743aNMjv+GgRdS4CY2Ba9HRRAN3
      uyL0ozVrApeI/vU8Jh4vtIIvs6Ug6jzzLA2yNpJ3svVAMXsTM8LYvCqz8rd356PNy5nq6Ypz
      7sr/gXSV3aszK38a8PLSDSx8oydNaueq/EWkjDjwj5ZOgIkrV66W/HBpf5qHc9vZUZweS7tm
      zXECTEdDCSvCHUnZrQVUx53nW9lkbqRzeNGXHC5OBvx+llNZ32vbsYTLSRRHBqb//14d+yxn
      IjJfOnfErbQ6jEWk1GRkZJTasUz/+Q+RUPyVQ+t1orMTkLqPrftSC929DBeDq06v1wbzeNZm
      4h4+eNeXiP8W/GP+L/4EJ3NO481KTICLv/N7vl/8nZCjv5akwDnYUfmhrNdRHD1eCslvyZ9/
      cjPr9aXf+C2/nybjv5w9cpK4e1MKEYMwYbrrdvwrHDt6CbCmntPjuT77N7u3xVieAmBREns2
      7SMVaNyhQzFXDq1Hj97NscZE6KKvCu2XKNNnAls1Hs3HrzUh+z7g9GreHPwys9aGEHX9Jln1
      XcbN60T9eytfvT0Ej37j2Z4zAKo63v6hzi3ln3P9ifrjf+bt//1BfFQIa2e9Qs8eQ5myrbRa
      yKvRsOnthTYiFo1h5tbTxN3MyCow13+PL/kQ+QrVcMy6o0nfw2eT13IiLvN3ybjJ9d9Ps+ur
      txnS43leXnhYQ/JFSuQQswe+zdeB+T8N7E5JhC98n29/ARy649Ehd4v7dUJ9XsTjxdnsiSks
      BpIIX/g2PsdMYNeZoX2KsJBPPmq+MAFPJyDJjw8nbOJ8vn9LUlnPA7DCyXMen157g8lbLprb
      8f/8lR8XT+HHvMtrWlatHV1a2XDiRDqQzkW/GbyUe8Z1pgoVKvDnn6UzOqhx9740WJ3Z6Zp+
      lQPzX+XA/Jx7dGd20Ps8U6KztMCta1W2bDH3AiQeXcz4gZZ/GJsKFeDPPzU6SKQEMhKOs27a
      S6yzrUGLTj3p2rU9rvVr83BVu8zK0kRqYiy/HjvAplVrCYxJA+tqdJ/0Bm3y1KZVqFbNmrSY
      Pcx+cT//cm7PoKEDebbNE9TKPF7OSVmBMWmAA50nTcDy0kKp7J7Um09CTeA0khUrR1ruJLau
      z0vTX+bo60v4JXwh3gNDGDj+dQa7OFPVzhpMqcRG7uO7uV+VdQAA2OMy7jvWtMz/mcB3qsDf
      K+Tcrk6v8eMIGv8ZR/NbVK3CE/SZMou3/r4C99IaBVRnMNPeCMb7q/9w7wacWvHkyKn0D5vM
      lov5VO021Xl69HSmuJ5kopdGAYkUnyuj3+9LwtLdRMTFEbF3ORF7l/N5Ad+wrtaa4R/MYGRL
      SzX2k7y1aRPtN83ni2WBxEQFsvzjQJbndzDbxgydN4/XW+Yzn+DKdr4PNV/OO9SvT0GrfVnX
      92LRd1WZ/qYPhxOOs27ay6yztF8Bx7iPrKjZcSLLnxnN2aDd/LB9H6FnYrLXvLep/AiOdRvx
      XNeBuPdoQd2Kub7t1IfPVjZj16ovWbszgpgU8yJmDz/RjGe6DsRzgCu1/w4cLt0yOw3+Cr9n
      /Pn2s1X45yhvhYcf5Ylm/1fgf6Ais3dh3HdreHrDEpZvCOKUeTF+Kj/SkJY9e/NSv240fNgK
      Yk6WxtlEDMyWOt0n8GX3t0iNOsH+wEMcCg7hwpVkriVnNeFkLeD2LO6DutO7lXPms4LzYV2N
      1kM/YvXAVKKCN7Ju0wFORMfdPp6tPY/UbcyzHl7071Hw5K1fvv+eXwAcOjNhXAcKG3BqXduD
      2Zs6ExW8keWr/Pj3xWuYT2uLfZ1GdBkwhr/dunXrVhF/HYtu3CiltYdFRMQyUyif9J7E7lQH
      3D9ez/QOJZxvkKlMO4FFRKRwqfu2si8VHNwn8U4pVf6gABARKeeusP37UEwOHkx/v/Cmn7tR
      TvoARETEEtPJTXz/S00GLppgYaRRyagPQETEoNQEJCJiUAoAERGDUgCIiBiUAkBExKAUACIi
      BqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABARMSgFgIiI
      QSkAREQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJi
      UAoAERGDUgCIiBiUAkBExKAUACIiBvW3W7du3SrrQoiIyP2nOwAREYNSAIiIGJQCQETEoBQA
      IiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDUgCIiBiUAkBExKAUACIiBqUAEBExKAWA
      iIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABARMSgFgIiIQSkAREQMSgEg
      ImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDsi7r
      AgBk3IgmZNNa1u0O5peLcSSnm9+vWLUWDz/WkJ7dh+De4/+o/5BtPke4yIph/Vl45m7O6oFP
      2Azcirp70AxcJvjletOBwd8c4N3WRTxG6m7e6TiNwFxvNxq7hTUj6ha1JGUuaIYLt3+Ku/wd
      Re4ZE6m/nyRw5252Bx3i7KVEElJN5o+s7ahWuwEt3LozbHBvWtbMry4xS9n2Jp1mhRb5zM7e
      G9no7VzIXmlE+69g0bItHDmfQKoJsHWgbpP2PD9qDINda1JwqUoijeids5k4eyfRtb3ZuNEb
      Z8o8AJKJWDGd9xYfJi4976c3E2O5mRjLkogAlsy1wb5Jb2Z89j5uNe5/SS1LIig0kndbNy3S
      3qnBBwm5xyUSMaLrJ3yZPn0FIVfSLO9gSiXhYjgHV4VzcNUXOA2Yy5Ip7amSz/GioqJKt4Bp
      kfi+8gq+kbnKl5bExfBdLHjrR9a2fYsFCzxpWKq1son4o8v48EPLv00ZBkAGkYtH8+qSC1io
      +y1IJ/n0VvzPlKcAgMsHDnH2jaY0LHTPDI6HHCri3yoidyNsoy8hV8DarjbNewxgWHc3mtWr
      SXWHzGvqtCQung5m79plrPCPJnrzOAakfMa2WZ2onOdoKURFXQUq0/fLAKa2K2HhTGfxHTkK
      37MmsHWi19tT8e7RnNp21phSf+fomo/5cNlR4o/6MGZqdTbPcc83mO5GWrQ/38ydy9qj8ZgA
      W0dHbOLjScmxT5kFQMZxH97OUflX+8eLvDFhAJ3rP4a5pSeNP+KvEXMmhH1r1rHl6CVuFvHY
      Hj5hzLiXbRIePqx8ZB5eyy9DTBA/XXyVhoW24IRz5JD5r3105Eq+rPwx/e+uzarccJsRRtiM
      si6FyG3Wjs0ZMHMqY7vVx85SrWbrQN2WPfFu2ZNB+6cwYMp+ru9ZxNpRncjbchOF+QbAGefC
      WnWKIGrlDJadNUGV9kz97nP6Pna7gNZ2tXH1XoRfJ1+8vHw5u38qU7e58GXfEkRAWjQ7Z09k
      9s5o0gDbmq6Mmj6dUY5b8Rzke0cAlFEncCoHNmwlIXPLodtcNi0dT59mWZU/gC0POT5Gs/aD
      GL/oewKCNvNJvyaW/+OWgabt3HAA4AyhYQmF7A0c92dPEoADbu2K1mQkIkXTaeJ3TOmVT+Wf
      SxX3qYxrbw1EERp6Ne8OplhirwKVnXGuXsKCmYJZtfIsJirTaeLMOyr/nKwbevPZWy2wxkTo
      spVEluCU+z8YwAc7o8lwbM6AmZvx91uAd1tHi1f7ZRQAFzl3Ouva/1H6DeuCfSHfsKrkRNf3
      V/Gu670uWxG17EhXcwJwbH8AhUVAZGgQ5vq/Kx1b3uOyiUgBKtOsWR0AUlJS8n4cFYX5BsCZ
      kt4ApOzeyO4UoOkoJnQv+Kq+1qDxDKoFxG5la9H7n/OydaLXzPUc8PuOKb2cCuxYLqMAuE5i
      fNmcudRYtca1g4359bEQjqYWtPNFjoVcBsCmgyutrYpygousGOaCi4sLLi7DWHGxoF1XMMwl
      c99hK7C0a9CMrGO5MCMo8820q5zavpiJo3rR5enMzzs8x6jpGwhPzMj/fEEzso/lkn0wkQfF
      dU6ciAIq06JF3ireFBVFDFDZ2ZmS3gCEHTmCCWjq7k6twna2boF7p+pACiEhEcU+p/vMzcws
      4t1QGQVAXZyze00vs31jEMllU5ASsKK1awfMERDCkeMFVJgXA/jxDIANHVxbU6T6/14yJRK+
      YTpD3Xsy4sMlBETcHnrLzUQids3j5ee92VBQ6Ig8oK7vn8PiMMDZE08LHbwxMTEAOJe4A+As
      kZEmoA7t2hVa/QPQwtWVysDVkyex0DhV6sooAGrTxrVO9laC32SGjl/Bsav5DOEqp+zad8bc
      IpXOXv9g8ouAhLBQzN29rnRub3efSpe/vf/sxcvzdnGuoF71mz8z/6sfKfDGRuRBknaFEF9v
      cwdwlVZMmDXKYhOPeQhoZZxL3AEQgzlL7qIzOavZKasZ6h4rsy7VhkPH47F1An4JAOnEHV7I
      6z0XY9+kPYN6Fzbxq5ywc8O9IwQGQvqhI4TjRt45YakcDTlmftnRHbeyr/9JT08HG3uadB2B
      1+BnaZc58irt6jGWvPsWy0+ZbwfSDx3hZ56jvHS7iNwVUyoJifFcOhVE4Na9bD/xC0lpYOs0
      gM8XT6Sjo6XqL2sEUArb3nRhW65Pre2qUfXxhnRw60GPPs8WPKHs6lXzVXz1WtQqak1bvbq5
      2SklBQu9E6Wu7MbU2Lsx7ev3SHj9E37K7kFNJ/l0AEtOZ078cnqSPl5v4dWrMVXLvN3EEjva
      uraBwGOQFERo5LvkmROWGszBzNlfbVzbUg7qfxoN/5ovXmtD9Vz/27Wt3oY35o7n373mEQ6Q
      noGpLAooUlxRvgwa5Jv36tnWgcathvP6q8Po29zyiJgsFSrYApZbI0ypCVz95Se2/PITW3w/
      xqnXNOZP647FwT1ZlXjlyhbmGpQPZTqo0sq5Pwu3t2Xf15+waMtRLt3RJJFOcvRRVn/4Iqvn
      NaDfTB8md3m0SO3nfhNcyL1oQx4ePoSVwmSBas90oiXHCOcyew5G8kbTOxMg43gI5uH/Len0
      TLUSn680NHgyb+WfrcajPAbmABD5q0hL4kLkMQIP1KZxzb40t3j1D+CM18pgvCx+ZiI1IZFL
      Z/eybekGdoRfIXrnVAaci2HlSu9SnsF7gxs3gEqlecy8yn4xONvH6Tp+Ed8HBLH5i7H0a+uE
      vU2ufW6eY+ukfoz6KqL8dRbXaEeHRuaXl0OO5RmBE34kc/Zvow60K0czmEX+kpy92RgWRlhY
      GGFhwRzYtYstS+YxbnhnmlS8wE+r5vBS944MmBNI/F3f3lpjV606jZ8ezpQlfuz0NS/bYDrr
      y8RFJRm5b0klKt3jyh/KQwBksaqEU4cRvL9oM/4BB1n/xVj6tarB7SxI59Tyt/EJKm/dknV5
      2i2zQ/vMIULjcn52HH/z7C/quD3Ng7Pcm8hfgS0O1atTt2Vnho+bxxK/QPZ8N46OjhlEb36H
      IWPWcrYEbZxVWk1g0QzzUhKxW7eSZ+h+VtPPfWrPL47yEwA52T5E/Q4jeN93JwHr3uXp7JaT
      JPxW+hFX0HcxLwURFlbIv1JcK6Jhh2d5FIBwAg7nmBIWGUpQEsCjPNuh8NWCRORessax+XA+
      /2EZoxpac/3EAuZsjC3REat096JPdSAlgojcHQ9ZHbpXY4ktatDExBCT87v3WPkMgBxsGwxm
      /kcDMpddAMIjOFXAkPsy0bQz3c0JwLGQo9lDJy8eC+EywKPd6azVH0TKB9umeE/sR3VMRKzf
      XKJlF6Ap5m6/rNFDOWUN/7T0WT5iY4kFqFmTmiUqV9GU+wAAsGrrSofsrWgu/VaGhbGoKe3c
      MiMq5AjmOWFxhB4yj/53cGuH6n+R8sO6VStawO0Kt9j+5M8/ASpTOc9QH2datKgMxBAaWrSz
      RISEkAJUb978r3wHkEzy3fTmJlzL0exTk+qOpV+ikmrZsav5LiV9L/7BGZBwmIBwAAe6avEf
      kfLFZCqdIc6mn/n5JOQ32culXTusgcj9+wsPGlME+wPMy1C7urYojdIVqowCIByfXi/w7opj
      FD75N5mghb4cy9ps1IKm5WEwfS5WrV0xLw2UzqEj4aQeDTGX2aYDrkVb/KcAUVy4mF+7VxpX
      o38rf6OjRO4Tk+nuq3LTkSOEQZ4F38J2bCb6LhYkuO63LnOxt050snDJbt2pNz0qA5HL8Nlz
      vcBjxW6cz8ZYoFY/+pX0GQRFVHZNQDcvcXDh6/Ts1IXhExezMew88Yk3bi+nkPYHv53azvzR
      A5ngl9WxakPHF18on6NpciwOlxS0n8WZs7+KvvhbbnWp1yDrdTp+H7/H9ujM3yfjBom/nWLf
      iukM79KJnu98b+5rEDGgmGWjGPDBZsLzexpYLqbftvHOBztIwZoWfT3uCIDrwXMY0MW8nHJh
      R7t+wocxc0IxURl3r36WF3uzbs8r3i2wJoWAzz5g22+Ww8p01peJCyLMx3pr1H1rMi771fXT
      kzkdsITTAUuYW8iu1Tw+5YMehS0cXVbsaN/ZFfwD4fIm1mXWyK6d2xd79m+zVk9j4/eTeR5B
      gj8fDvDnw1Iqrchfx59E75zDyzs/w65+G/r16kdHt2bUq1mdrAeCkZbE1QuR7N32DWu2nSTe
      BLZNxzDV885qu4qjI9Zp0ez8YAB759bHbZgXnt2eokHtaubVNU2pJJw/wpZli1jhbw6JKu5T
      meKe/1zfWp5T8fbzZNHZYGYNHsK/83simKmwY6WwY5w7M4NN5vkOmc/1LYkyCoCWDJvej1/n
      7+B0chEekmhTg2de+4QPR7Qo9LkBZcnOzZ2OBOZ46HtH3Euw+E+1Xm/z2pYwFp7K7zeqSIN+
      0/mk7yX+6bWIB/P5YiIlU6ffRN4678PSoPOknv+JVf/6iVX/KugbtreXcMj1ictEP/zc1jJ3
      7jf4R5/H33c6/r75H6ep10IWvNWqkEc4OjNq5UoqjBmDz4lods55mZ1zcu9jjWPHKSyZVcDj
      IGO3sinYfAdRpWFDy53E+6fgMmV/gaUhypdBLr6ZZy0T9jTo8z6r+rzD1VNhBBzaTUBABBev
      XiMuKxAqVqVW7fq06zEUz4GuOFUql4sB3cmuLVlLAwHQxpW2JemvsHJmxLKtNFziw7+2hHI+
      8SZgg32NJrTq3ZeXB/WicVUruLiiFAov8mCydmyL19z1eKVdITxkH4G7Agk6dYn4xARSs1pc
      bB2oXrMeLt360a/ARdyscWzrxdzNnqSeD2LNyrXsDbvAlatJmU1CtjhUr0fTbn0ZPbh3wYvB
      3XHYhnj67sTVfwWLlm3hyPnMstk6ULdJe573fgvPfJ7alSVyc+aQ1SruTJlo6VnGd+9vt27d
      ulUKxxERkXvFFMxM93HsSKlC98+2MatT6Swv90DMAxARMbKsR0tW6T6VKaVU+YMCQESknItl
      66ZgTFX6MmtG6TT9ZCn7UUAiIpIvU8R6NkfWwnPZFNqVco2tPgAREYNSE5CIiEEpAEREDEoB
      ICJiUAoAERGDUgCIiBiUAkBExKAUACIiBqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IA
      iIgYlAJARMSgFAAiIgalABARMSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQA
      IiIG9f8AqaPqea4lOfoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='table.sequence' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='table.simple seq' width='384'>
      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
      TU3hcnsBFZ/HxYzNgapGiqXH6yUU9EdeV1XcTjt2Z2SgO/WJ4XgAAB30SURBVJ/HPbfsUNBP
      ICjuLxe+GlNiGs8+/wNe+MmP6L5yDrf/9rM6wx2XyVy5jhdeeIGNayIj4f7t/Q848J3v8/ju
      Kt7/4Cj5xZW8+OKLvPjiixRmJ5O/bFm0VmXRjHRcZjSQGPnOGmuYdN7fseeriukCAFBYUsLN
      3h4A+nv6KSkr/sL3rKteT0vzVRZ6FLxVFZXEGfQ4ZqaIS0gCnZF4o46xkSFaOwYpK5mfVlZR
      UUxHZz8AHX2jrC6JbPhe+yRHjtVwc7CPj44cI6xAw9mTnDlfz+BgH6fO1uF1O3E6nIyMjGBz
      upka6uHMhUZ62luov3IdVQ5x5uRRak7XYrU76W27QkPzdVqvXKSl6ybW4W5auocBaG2sxxEQ
      D9gJX016ZiZ26ySXG+oxpy/HbLx9WGm61o5jcpijx0/hD6mguFEM6WQkmknLK0XyWflky5P9
      DgZmVVZmJ0ZnRRZRe2cPO7ZvRqvTs726jI7+sai0I+YLgN6cguq3E1YUrJ7wXMwcEp+ZCKY3
      JZFplhm71XNYKKqq0HK5jpbeCfbs3IIE+DwORkfH8ARCSJ8qOebUfHyzI6hqmICqx6SLtLej
      5To79z/Gxk1bWLM8icEpF+jM7N67h40btxCnkUnNzCUnN4fq6mqW52bS0tZNVVUlRSVlzExE
      DuxOt59HHn2UwvxMugbGWFNRRllFJSMDPeSVVDI52ImqhJn1Q0ZCdMPGhdgyPtjNoUOHuNFz
      E1AY7OtlcGgEjVbDneMLezwuEjJyWbeqiLfffDPyIJvu9mUsjSTNzV9Xc4JtD++fFzf5oAqF
      wxj0kfRCg8FAKBSdHnhMPQl8bxIrspLp6urCnJqDROSL1OkNyHO/F6gEAgraO8rd6qpqas43
      LWgvoOXSeXTpRexdmY8kSaiqSnJGLpszclGVIMdOnGPZY/vmtT3Noqe3u4P05aXg7otMlUC5
      dXlGURQ0d+4QEvdMj1PCQUZHRtFKsLygCICM7OxbwTAKIb+X0ZERAIpWrkSjNZCXZKC9s4O0
      vJVRCqQTYlVadj47EtKIM1tQVS3bdu9lG3D6gz8yOOOhOCOSjZGVlkbBslxSEszkZSQQxILi
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='table.transfer freq' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
