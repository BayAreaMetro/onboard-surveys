<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.1008.1759                               -->
<workbook original-version='10.5' source-build='10.5.9 (10500.18.1008.1759)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='12' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='route_level_analysis' inline='true' name='federated.1hcs22b0sjelfs17e15x6081mi6k' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='route_level_analysis' name='textscan.1eomjis1i6i5bm10z8ipe0rk3npv'>
            <connection class='textscan' directory='C:/Users/USDO225024/Documents/GitHub/onboard-surveys/decomposition' filename='route_level_analysis.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1eomjis1i6i5bm10z8ipe0rk3npv' name='route_level_analysis.csv' table='[route_level_analysis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='route' ordinal='1' />
            <column datatype='string' name='survey_name' ordinal='2' />
            <column datatype='integer' name='survey_year' ordinal='3' />
            <column datatype='string' name='weekpart' ordinal='4' />
            <column datatype='real' name='first_after' ordinal='5' />
            <column datatype='real' name='first_before' ordinal='6' />
            <column datatype='real' name='intercept' ordinal='7' />
            <column datatype='real' name='second_after' ordinal='8' />
            <column datatype='real' name='second_before' ordinal='9' />
            <column datatype='integer' name='third_after' ordinal='10' />
            <column datatype='real' name='third_before' ordinal='11' />
            <column datatype='real' name='survey_boardings' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[survey_name]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[survey_year]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_after</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>first_after</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>first_before</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intercept</remote-name>
            <remote-type>5</remote-type>
            <local-name>[intercept]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>intercept</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_after</remote-name>
            <remote-type>5</remote-type>
            <local-name>[second_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>second_after</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[second_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>second_before</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>third_after</remote-name>
            <remote-type>20</remote-type>
            <local-name>[third_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>third_after</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>third_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[third_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>third_before</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[survey_boardings]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_boardings</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
      </column>
      <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
      </column>
      <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
      </column>
      <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[survey_name]=[operator]' />
      </column>
      <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
      <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
      <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
      <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
      <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
      <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
      <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
      <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
      <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
      <column-instance column='[survey_name]' derivation='None' name='[none:survey_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.421702' measure-ordering='alphabetic' measure-percentage='0.578298' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:survey_name:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;SF Muni&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:operator:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caltrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SF Muni&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missing&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Terminology'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Terminology</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The &quot;boarding weight&quot; is the number of passengers -- usually fractional -- that the respondent represents;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The &quot;trip weight&quot; is the boarding weight divided by the number of transfers the passenger made;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- References to &quot;trips&quot; are summaries of the &quot;trip weight&quot; in the survey;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- References to &quot;boardings&quot; are summaries of the &quot;boarding weight&quot; in the survey;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The references to boardings are often called &quot;unlinked trips&quot;;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The references to trips are often called &quot;linked trips&quot;.</run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontsize='12'>~ end/ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='632' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='chart.boardings v diff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level: Boardings versus Difference</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' />
              <size column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' />
              <lod column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' />
              <tooltip column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Difference:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Pct Difference:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Survey Boardings:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Est. Boardings:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='185' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='chart.transfer freq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
            </column>
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[intercept]' derivation='None' name='[none:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1395552990099406853]' derivation='Sum' name='[sum:Calculation_1395552990099406853:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>44020.848375000001</max>
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' />
              <size column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' />
              <tooltip column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Boardings/Trip:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Survey Boardings:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Intercept Trips:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6811602115631104' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='table.oper back-forth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[survey_name]' derivation='None' name='[none:survey_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='130' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' value='156' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]' value='144' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk] / ([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]))</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.oper seq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Operator-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1395552990096076803:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;Caltrain&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='130' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.sequence'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;Caltrain in 2014&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='122' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.simple seq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;Caltrain in 2014&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='122' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.transfer freq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990099406853]' derivation='Sum' name='[sum:Calculation_1395552990099406853:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='137' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='0.875' source-height='30'>
    <window class='worksheet' name='Terminology'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='table.sequence' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='227'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='250'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.simple seq' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='178'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='299'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='chart.boardings v diff'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.oper seq'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='256'>
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.oper back-forth'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='300'>
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.transfer freq' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='194'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' show-all='false' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='chart.transfer freq' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' show-all='false' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Terminology' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='chart.boardings v diff' width='384'>
      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
      L1072ylOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='chart.transfer freq' width='384'>
      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
      AEcRAADgqP8PM1NHXHHI2I8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='288' name='table.oper back-forth' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAEgCAYAAAC926RRAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3de1hU1QL38e95J46Cr1pYId7liJqWlwRUElS8pZKW10yNLpZleY5ZadbR
      SCuPWuSJc9TMLhRmWpKaaV4ixCQFNNO8paloiZhQYkA2Z17fP2AGUBiGi4Ct3+d5eJ7ZM3v2
      bGb2rN/aa6+15i8XL168iIiIGOf/VPUOiIhI1VAAiIgYSgEgImIoBYCIiKEUACIihlIAiIgY
      SgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEU
      ACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEg
      ImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIi
      hlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIo
      BYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIA
      iIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCI
      iKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgY
      SgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEU
      ACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEg
      ImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIihlIAiIgYSgEgImIoBYCIiKEUACIi
      hlIAiIgYSgEgImKoa8q7geTk5IrYDxERqWR/uXjx4sWq3gkREal8agISETGUAkBExFAKABER
      QykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGU
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='380' name='table.oper seq' width='384'>
      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
      UAoAERFD/X8r1BycZJpPGwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='table.sequence' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='table.simple seq' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3gUV57o/W9n5ZyRhCSEBAghIZFFjjIgDDY4jz3GNjjN7uzM7O7c3Z37
      et/77u7MnbAzHoMHsI1xwsY2USLnJCHUSKBEK6OEcupW5/D+ISwsi7WxDZLbOp/n4YGuc6rq
      nKK7ftWnqn9H4nA4HAiCIAgjjnS4GyAIgiAMDxEABEEQRigRAARBEEYoEQAEwYlotdrhboLw
      IyICgCAIwgglAoAgCMIIJR/uBgiCIPwQVWmK6dQZUbl6Mn7cWGRSyXA36Z4T3wAEQRDu4K0/
      /RdnLqk5sv9jXvrH/xf7fdrPxpdfvk9b/mYiAAiCINyRgifWb+CXv/7feHVW0maG7OP7eOXl
      l/jztp3YHHD08x3kXCnkX/7x13SY4VTmJ7zy0kts3rEHh83M9k1/4KWXX+XI+SsA/PH3/8V7
      W1/npZdf5UJBOQd2bkNTWsrGjRs5cObKkPdQBABBEIQ7slGYr+bkkf002jxw1Vbz1u5z/P6/
      X8e9s5BT6kqaG26w87MD/OzX/4K5JpddpzT8/i9/Ze0DaWQf3kW7Kpq//OE/2bt9Ez1WKLte
      yqz0dfzLi2vJOnqKjMdfIH78eLZs2ULGvJQh76G4ByAIgnBHdgrz1QT6+PDnP/9feuqvYDQZ
      +GDHdnrsbpgMPQCsfeIZQv29uHylhskz03BTynELCuJUbR1tzTLe/aCdgCA/urQWUHkQGxlK
      l71xmPvWRwQAQRCEO+obAgpx6XtlVY5DYTMQNyERjN34hwTQAUilMgDGJ09h0z/9jvGjPHDY
      pUxKTuL8XjXJkycT7OeHt7vijnvxdBg4cvoCkxImEBroO0R96yN77bXXXhvSPQqC8J2ZzWZU
      KtVd12/SXOGX//oamVlZVNS2kjBxIiqFjG1//Hc8Yqbgr7Lwq5+9xO4jl1n2wAJef+1XbPvw
      c6YvzMBDeR87coter6eqqor29vb+PwaDAW9v7/u/87sQEz8O5a2BcqnSnemTx6POy8OEC8lJ
      ibiqFASHR+HtrkTp7svUSbHk5ubhExzB1JmzCfGwk3+tBP9RMcSPiUQqgfi4OADkLp7ERIYx
      KXE86stqAsKjCfT1HNL+SUQ2UEFwHlqtFk/Puz9J1KhP8N6FRv7tlcc4vuc9Mq928fr/+SW1
      VRqCIuMpu7iX1/fk8dLTj+LraeY3//Y3fvGPL5KQlIrD0Mn1ihvET5iIm0pOTUUZYdGxVFdU
      Eh8/lu72ZqrqW0mYOAGlTIqmrIzRYUGUVtSSkDgRpUyK1dRLUUkZ4dFjCfDxGLROXV0du3bt
      GtDm8PBwHn300Xt96IQ7EENAgjACSGUKlq59ll2fP4nWDh+/9Sce+actaDRldLTcRJ1fxJgw
      0PX2oFarCQ4O4H//5t9JTZ3EX7d8wN82/4H33vhvvGPjwS0UL6mWf/ndNiYnRPPOJwf463/+
      L/70H//K6PFTsOtaOHJpGr94YgEv/+xXTJo6A1VRJatmxAxax9/fn5UrVwLg5uZGRETEMB+p
      kUUEAEEYMaS4yKVYvvRAe0bGSi7cdGHD+seBLj7fU8iGDRs4tfstYlPmMGPmJJoqNlNc1w2Y
      SJqzivlJMXz4xv/HjAXLmTIujOt/+RPNRsA9kH/59T/TVaPm/+5Sc+X8cWZkPMPzDy8CuOM6
      5vZ2MjMzAXHlPxxEABCEEaKx/Ard7mH43sWnXqVywXDrKZcHn3qR0X4qQMW4+BgAXFQqWg16
      AJ595e/wvMM23d3daavrAMDhcNx5nVvfACIiInBzc/vefRS+HfE7AEH4kbtw5DM2bniB1/77
      Pf7tX/+Ju0loMG3hCiz113jzb1vZvn0HeptsQPnS1Y9SnnuELVu28u4H++94KTkxLR1J3SWe
      e34Dv9v8/h3Xab/1DaC9vf3edPYbWbmqVqNWq6lvautf2tpYS2NrJwCN1aW8ve0t6tt0dLc2
      8N72tymtuTlE7btfbve7sOQ6VnvfrV9xE1gQnMi3vQksfFUXax9Yz9LVy9AU5hE0aTH/vOFR
      StQXMLiGkjohhr/b8DRrf/oKk5KSefPff8G4JY+RlppEkJ/XcDf+e7jV7zXp9LQ3UN6hZMvv
      /1UMAQmCMLJ4BUWyYeNGcDzPrzY8zfVVKzDqOtBJAvh8xxsUVzZg2vEOmilTOJlbQkX3B/j5
      B1FbdJ4dHx9gdMIMfv7yM1w+9jkWr2hO79/JM7/6D8rPfcruw+eZPHc5zz+eQebObTSblFy7
      fImUhQ/y04eXUXrlAm/t2IkyIJb/85ufc3rfhwPWuZ/p5ryCItmwYQNWYzfPvfprQAwBCYIw
      UklkTJo4lurqBjrbbtLWqePhZ14lLj6OLVu28MILLzA1fjx/3LKFtLGebPrgCP/1p78QbLvB
      oQvFdDQ38MHOz/jJz36NR3cxu89V89+vv05n4VHUlW3crKvGOzyBP/zxt5w+tBu7sZPfvf4u
      //zvv+WXG5+gszp/0Dr3U2t1IRs3bOCRJ9bz9Ia/A6tWBABBEEaupuZmAgIDvrFed3M9epOR
      j957l1ajHItRB8DKtU8QHepPY10dJkMXO7Zvx+7mh6Gn735CTGwsShcv3JRg7GjAJyaRIB8P
      AoKCaPof1rlfAqMT2bJ1K1s3/YmPNv8FfU+LGAISBGFkMfV2o87Lo6I4lwp9IL8Y48+Zq1+/
      jm9EHB6YGDMuAYW1F8/QIBpvgkzadw0dMy4Bm+EQExKTMHaHEhLgR+lXtuEWEovlxh84dOIM
      cruDaUmD17mfTL3dqNVq9D1t9BhMyHwjRCoIQXAm3zYVhDCYvquD2ps38Qkdw6svrkcl6xt5
      9w0M7U/FEHcrXQNATHwcCrkLM6cmciUvD71NzuSkSbi5KPEPDsff2x2lux+Tx0eSl3cFXLxJ
      SpyASiEjNDIGT5e+6+y4+ATmzJnBNfVlrApPklOmkHKHde53v7t6zbzw0osEenmJp4AEwZmI
      p4CEe0ncAxAEQRihRAAQBEEYoQbdBNZqtcPRDkEQ7oJerx/uJgg/IoMCgBhfFIQfNvEZFe4V
      MQQkCIIwQokAIAiCMEKJACAIgjBCiQAgCIIwQn1tALCZdPztz7/lxRdf5L/+8Fd0Zsg++jkb
      N25k48aN/Psft/XX1Vw5w8aNG6lq7XtKwdLTyCsbN3I0u/CuG7Nz2x+5omn6Vh3obGumrKwc
      ncHUv6yjtYmKyur+nNcdrU1oNBoqKqsxW+2DtmGzmKisKKehqZV7/as4XXcHGo2GsvIK9Cbz
      t1q3qWnwsaisrLxXTROEe8Zq0nOtIJ+yqtpBnyGb1UTxtQJKyqq4/bNTBxXXi6htbOmvZzZo
      Kbhyhaa2rqFq9nfkoL6+fuASu5X6hsFzBtSUl6K+lYdfrVbTa7Jh0vdwrVjTf5x6OlrQGq1D
      0O7BvjYAnNz7AbagSWzevIk1S6ZjtUNHcwNLH9nAli1b+H9++UJ/XV1nGx5enpw+nwtAfvZZ
      fIOCaO7owdzbTU1938msqb6G7l4zna2NtHZ0U369iMaWvlmD5i1bw9jR35yY6QstdZVcu16N
      3W4l6/OPadGaKbx0msvFVZgNPez8+HNsQF52Dlb63mCf7PwEk+32Nnra6vnks30YzFZu3iij
      pKL2rvd/N6pL8mjWWrFbzRz47BNaekzfvNLXqKyqukctE4R7Z+/nu9AZzdQUX+Ktj/YPKDu4
      93M6dEaaaop5462PAPh8x98ovtHCuayPOaUuo732Olt27MJotbHvwy0UVLbcaTfDrqVWwxtv
      bGLLe7cnsq8qzmPT5q189PmBr113/57dWJHw7ttv09lcyacHTgMOsg4exVU1PGnZvnavoyJH
      s2PbAWJDvJg7eyauyq/fWFxKGhX52bBmPtn5FaSlxtEGdNwo4r3jVfzvv/sJx3a/R8ziDRhL
      M/nwWDEpiWM5cfwSH+15n8yP3yL1kX8iNcrnrhofFDGGoIgxgIP2ukpsdjvNHVpmLXwAT5Wc
      2ooarABSBWPj41EClu4GmrrNjPbr68yFi5d5aN06XORfzsTt4PL5UzR16PAfFcOs1IlUlORT
      UlGP1WZl1vylhHjYyC6owdzVQODosbQ0tTF/7gxwWLhw8QppadP7txYZPZYofyX+KguVtU14
      hrty9Ew2EhyExUxgSmIcZ48fQm9x0Ks3MG3OIiKCfKiuqiYkJASDtp1jJ88hUyjp6h2eKwVB
      +Dprn/gpAD1tYdQeyhlQlrH2CQAMPW2U1R4CTDTpFLyybCE45rFp8zbmvbSBn704DoBAaRea
      lg6SxwQNZRfuiqtvGK+88irbtm3tXxYYGc+rr05h69atg+pHjR1PFKBrrSIyYSbeql7cfKKY
      t3A577//Phr1OZLmpiO/nxMBfI2vDQATZj7AfwZEkJmZxfa33+LPb24B4MMtf+ToLk/ipszn
      ly883l9fovTCV6qjU69D53DHSwFfl+F6xbqneXhRKo3XSviu18UFuefIUxcwasIsQr1d8E2b
      wY5338bPyxXfqGRUAHYL5RoNmAyU1ht5eObtSGaVKHCRS6irLKGgsBT/qETGB9jpVYWRsWoc
      F45n0W4YT8y4JGInTMZu6eHgscusXJxI9rlzPPnsMwT7enCj9Bq9VgfamiKU/uED2lhbXY6x
      Ba5dLWVJxsOoXGWsevBBJMD+/fsgMY5OrZGM1WuQ2E3szTxGxIMr6Wjv+2Z0+tRZFqVn4K6S
      c/TYse94pATh/ulsrOLDT/dQWFbPf/z2twPKDJ2NbP/wUwoKy/jNf/wWjB0oPG6d3CUy5HIJ
      0ltZNdXnDpOj6WDDc0uGugt35U6/wbib32Xs33+YVY++AMgxdN/gzMmDqDz9qe2yUnl+B4fN
      NlY9tZHYUO/70Or/2dcGgI72dsJjJ/LyP0zE5Y+/oaisAYAnN/6Shxel3nGdOdMT2Pnue0Qn
      zwR7ef9yu90+4O97JXnaHJKnzaH40kkKq1toLLnEM8+9gItcysXjWbTqJgB9Y3QXcvJ46qfP
      ovjywJfdhh2IGDOBiGBfDqgbabX3UlPRyoGmcoy9PYzSGqhSX6KxoxepxI7R1jd5ddzEFIJ9
      PQCYOXUil69cx9bZzNylk7/SSgeXLl5g6UNP4euuoKW2jLN5JagUMqob+0KkXKFAKgFkKlyV
      X8kIqHTFfZi+IgrC3fANi+HVv/8lRm0HW97bwd+/sqG/zNU3jJdf/XssRi2vb3mPX/7sGeym
      nv7yL84Je97fgkvUFF55Pn3I238/Gbsa6JEFEeihAOCn659DU3MTu7mMuEhfdLLFrJ4ZzAd7
      coh9bNmQtu1r7wFU5J/luWefZcOGFyjudGFWUvQ3bjAlbS57du1hblpK/zK/8BjKLx7g57/4
      JWcul3z/Vt9SV11Ba2cPDocNo8EIgMNmprW9C5vFSEtHN3K5FKQK4sYn8PRjq8ncuxe9+fZN
      gEljR3HwRDYWm52enr43ZVjEaHz9Alm+YgVzZ8/C201JQ2s3K1asYGJ8DJI7fF3zCRtLT2Mh
      DqUniq+UR0bH8ZOnn+bisUxau/VUllUya9FS5s6ahquy78Rus5ixWG0015ZhVwy8opBa9DR1
      aunpbKVLa7hnx08Q7glDJ2cuFWCx2jEYerHZHYCD6uoawMD5M5cwWawYDQasNjtIPZAYm6hv
      66Y09xje4Qk0lV3CHJDEA3PufGHpbKq+dK/uwN4DrHxwZf9rpZsnoR5WzO6jCAwMoK2xlsaq
      KrxDQoa8nU6dDrq3p5P8/Hy6tAai4yeSMHY0douRSzk5dOhMTJ4yjbBAXyrLyoiKi0MG6Hva
      qGzoJnH8mP7tNNSUc7VYg5uXHykpKXi5u9BQraGguJyA0EhSJyfScbOGywWlxE5IQGKxEjcm
      lLKaduLGRPRvJ+/0IQImziUqwL1/WXNdJSr/KHzcZNjMevKLK0kaH83Zs+dx8Q7Cx9udhHHx
      7P7kA9y9/HDzCWLm9FTkUgllmjLi4uOwGns5d/48Co8AAgN8iI8dgzAy/SDTQTvsqHPOUlBU
      jptPIMuXP4ChPp+sazqeW7eIInUOuQVFKN18SF++nABvd8z6bvbs2YvKL5JV6Qu4WVVE1omL
      /ZucPi+dpPjIYezUnanPH0ddcvvknr76carUxymra+1ftu4nG1BfOM7ixYsBBzk5ucyYMX3A
      dq5eucLEySnIJHDt0hlKG3t5ePXyIb8X4NQB4Iek4NJZajttrEpf8J3Wz8rMZMXKld9cURjR
      fpAB4A7KSkuJGTd+2G5uCndHBABBcCLOEgAE5yB+CSwIgjBCiQAgCIIwQokAIAiCMEI53cPl
      FotluJsgCMPGarWKz4Bwz4gAIAhORAQA4V4SQ0CCIAgjlAgAgiAII5QIAIIgCCOUCACCIAgj
      lAgAgiAII5TTPQX0ZT3tN7mQW4BEAnIXbxbMm4XEauTkiZOYrHbGJU9jTPjtSSUK1dk0tHZj
      s9lJmTGbUH8XKiuaGBN7d0mnmiuu0kQISbHB/csqKyoYExt7z/smCM6kOO88F/NLsdtspC3J
      YOKYUf1lFkMPu3Z9hskGo+OTWJSWOqh+QlQAn3/8MT0mG3IXbx577GGUP9DL09L8i5wtrGfj
      048AfQni8jU3wG4jLnkWc6dO7K9raK3mjQ8yCfDxQO4RwE/WZZBz8iBXy+tYtHItsaP8uXT2
      BPFT5+HjOvSnY6cOACp3X5alpyOVSCi9fIrqZh1dZTnETZlDpL87+/buJzp8NVLAqmuiQacg
      PT0dh8OOwWimsa6K3NzrODAzKjIaV4WUxvpaZK5eBAf4AmCzGLlR20Bg6MBJXtpaW5FJIffy
      ZRyAj38QAb5edLW30NVrYXTEKCQS6OjoQCWX0NKhY/ToiL6c/4LwI2NTevH8Cy8gcVh4c8sO
      Jo55vr9sz6efsOjBJwnxcevP/f/V+orJEfjEp7F2Siyl2Yc4X1DFwpSY4erO/6i6NJ9WiwcK
      a2//svjkGaTOXgzA5s2bBwSAuuoy0pY9zKwJYbeWmKho1LFxw3o+/Gg3ERnzaTEpmT4MJ39w
      8iEglYsLrTfrKbiSR6NOzuggD9oNViIDPEEiJdzPhfZb6fPlrj5oG8vILyzFagc3V5dB2zt9
      LIumTh1VJWouF1ViM+vYszcLs9U2IL93V1M1heX1g07mVcVqcosq6O1qJvPoKQCOH9zH1dIK
      dO21nM8rvW/HQhCG06RJk5AA1/Oz8Q8fmK68tbMH9ZlDvP/hx7R09d6xfkRcItXXsslT53G5
      tJGEMWGDd/IDED1+MnOnTRqwzMNVQYE6j8x9uxkzIWVAWV1dAzmnD/Hhx5/S0NI5aHvZuVcJ
      84LP9h/BOgxpOZ06AHxBKpVgMekxmKxfWQ52+62jKnNh7WOP4a2yc2D3p1Q1thMWEY6/XyCx
      sbG4Ki2Y7B6kTEpg5tzFdDZWUV9eQsKMhYyLjyNp4ngAmuqruVBQxbyZk/H2C8Tfz4/Y2FgC
      fL0or29jybxZJExKwUdiweAA78BRzJo+lcTUJGw63VAfGkEYEg6bmc8+fIfyDjnrVg5Mia43
      GJg+bxkPrVzMju3b71jfZDTi7t43j4a7uysG43edJHaYSCRIJBI6Owee5Bc9vJ5fvPwcq5cv
      4uPtb6G3qRgb7sXWbduJigzFO8Cfohta0uK9OXK+cMib7dQBwOFwEBwWwaTkVKYnRFJcUYer
      1EGPqW/Gr5ZuC75ukv66SKTExCWwZk061wtLAQnwRdiVYXfc+oWlw4bNDiqVCoNh4AxcDhzY
      LCYstsFTW0rtdmy3Nme22ZCJ4R5hhNi98z0mzc0gY/Esvvq29/L0xcfbA3fvAPy93e5YP+/8
      GWYtW8WU1ClkLJzKmYv5Q96H78ohVZKcksqKVWugrR7tl8q++NW2u5cfY0f5oDXD9PnpbHj+
      p7R16hjjp8AvNIKQqGh6WlqGvO1OfQ+goqSAshs3kUmlmEwWFix9AMVoDw5m7sVFpcB/VCzK
      W+9Gi66NgyezUamU2CwWkmfMBdywmW5y+PARZs5bTHiQO5lZWVhNJpJmziMkxJuiQwc5VKnE
      KyCUWF8IDY8hPkTBsSPHWJq+lGAfV/ZnHiQhKZXUyePZv3cvKqUcn+BIlF/bekH4sTCTe7mA
      HouMC4BPSBSr5ifz0b6z/OSxB1m+eCZv/HUT7i5ygqMT7lh/8YLFvLNjE56eHuh0Btb9ZP0w
      9+nO8rNPUXC9hoKCfLZvh8Ur15J96CN6zHIkEgdy7xA8gXfeeYf169eTc/oQpTXNSHGg8h1F
      sGvfds4cziQlbRlevgpasrawOd/OA48+O+T9cboJYfR6/XA3QRCGTW9vb/9QyQ9ZzolMAibM
      JjbUZ7ibInwNEQAEwYk4SwAQnINT3wMQBEEQvjsRAARBEEYoEQAEQRBGKBEABEEQRiinewzU
      zc1tuJsgCMPGZrOJz4Bwz4hvAIIgCCOUCACCIAgjlAgAgiAII5QIAIIgCCOUCACCIAgj1I8i
      ALS2tg5a1tXWTFtXX16+jtYmNBoNFZXVmK32QfWa276cwtVGZZkGkw0sRl3/Nr5JU1PTt263
      UdeNRqOhrKwcrf7bpb+90/4qKyu/dRsE4V6xGLQ0t3UPWt7T0YJarUatVlNeUz+gTFN8FcOt
      JLxmg5b8/AJ0RstQNPceclBdXjqob1/oaGnkypUCek19/TLpe7hWrOnPQ9zT0YLWaL3juveb
      UwcAi6GHgwf2sWPXvgHLbSYtp44dIvtqGQB52TlY6XuDfbLzE25liwbganYOJy5e7H/dUavh
      s9176BiYBfq+aKouobpZi8Nu5fiBz7jR0vO9tldVWfXNlQThPsg5mcXm1//EkezBOe3PHdpH
      5x3O6WV5J/nb37ZyUwd2Uze//8PrGE16/vz736MzO0+Ksl3b/0ZxTROavNPsPHB6QFnu6YNk
      nczBatHzx9/9EaPdwbtvv01ncyWfHjgNOMg6eBRX1fA8ke90vwMYQKpgyfIMbIcPDVh87sxZ
      FixayLnS1v56Y+PjUQKW7gaaus2M9vsiWbOcCH8XmrRmQjyVXLt+g6lJYwGw9nZS3w7+niqO
      HDqE2S4hKCKWGcnxnDpyCJ3ZjndQBHNnTKa6upqQkBB6u1o4fvoiDoeD5BlziQr15+jBvdhR
      otPrmbt4OUE+t5/jHhUZTXyUP5H+Ks5X1jLaJ4p9h44jlUjwCopk3ozJXDx/Gn2vgR6dnoTU
      WcRHhVJdXUVISAgWg5ajx07ikClo6+pFEIZDwtS5JI2L4lP14FmvmgwSnp2ROuBq02bs5mRB
      A8vnJgFQlHOKuaufYWZiOKEqI2fyrrNi1vghav3302GS8MiSvklwNm3aBMzvL5syN51p0r6e
      l+VfwWDT4eYTxbyFy3n//ffRqM+RNDcd+TDNHeLUAUChch20rKmqGLfQcfi4KW4vtFso12jA
      ZKC03sjDMwdm6p+YPIkr+UWEpCVhRomnrC/jqM2sp1sLhvY6DMpAHlwyE4fdjsPQTpNBySMP
      LgFH35BSR3s7AGfOXmDpigdxlTv4bPd+oh5eQ5fOxNp1D2Lvrufk9SqWzrg9Z2hDbTUKYwsl
      164yc0kGyF3JWPUgUomEI/v2Y2Qy7R3dpK9YhULqYPeefcRHraGjo29/Z0+fYuaidPzcVRw7
      euyeHl9BuFuenp4Y/ofR0jHh/ry1dQtGvY4xyfNYMX8Kez//nDWPPEnhkR0AtLS0EJ3YN5F8
      cHAwZ/Lahqrp35vK1svhk2fxkFvRlNVihv65QKRSKQ6ric92vo9P3FR8FR4Yum9w5uRBVJ7+
      1HZZqTy/g8NmG6ue2khsqPeQtt2pA8BgNvbsP0T4mHgOlOkou6mlMqZvMneH3cqFnDye+umz
      KL4y8KVwD8Smz6e9tpSAqAmYai4OKHcLiiEhrJt9e/fgGRDO4jnTmJkQxoF9e1F4BrBi8Zz+
      unapEtdbO3B3d8UBuLm7I5VIkMrlcIfs2wWXLjJ16UOE+rqj62jk0IlsXFyU3KioIw1AJkch
      kwASXN0GBj0LSvzcVd/3wAnCfTM/fU3/NfGmTZtojpBy9GIh7b07qCpW49v4DlNiveju7gY/
      H3Q6nVOlvH725X9AU1IEKi/Gj48eMBGU1dDNX9/YwsrHnmVsRCAAP13/HJqam9jNZcRF+qKT
      LWb1zGA+2JND7GPLhrTtTn0PYDAZL/38V2RkZJCxbD5xiamMiQgGqYK48Qk8/dhqMvfuRW+2
      DVoz3MeFo1dqmRgbOqhM19GKW+BoVmWspKftJmZdB3a3QFatysDQM/BKxV1u40ZTB73dbWj1
      1kHT433VqMhoHv3J05RcPEZ9azeN1WWMmzqPhfNm4+l268Rut2I0W+lqa8BgHrhFV6mFG02d
      6Hs67/qGtSDcfw6qq2sAOJy5D63BTGt9BRapG8FjUtiy6b/ZsGEDi2ensu7p9aTNSuP4/k8x
      W0x8nnWaWVMShrf530LTzZvExE8EbR0q3wgAqqr67scd+GwXDz/3av/JH0Dp5kmohxWz+ygC
      AwNoa6ylsaoK75CQIW+77LXXXnttyPd6jzTXVXLq7AVwOCgrKwOVJwE+nrcryJT9r/38/VGq
      3IiJCKLyRjPBgX791XwC/AkK8MVokRIZ1vcf5eUXiEoGMqUbAX5elBdf5Wqxhmmz5uDt5Uld
      eTHqq8VMnjYLH8++MX1/f3+ioqMpvXqZirpWFi1agFIu6y/7ok1+3h79+3bx8MLD1YW4+LGU
      XS9jYnIq5VcvUd/aTXxcHIHBgVReL6KpoZ6mDgMLFs5FIZPe2mYAkVGjKVJfor5NS2xMNIEB
      t/sl/PiYzWZUqh/eN75P39vKpZI6rLpWrmpqCVV2czS/iZSEGDxc5GRl7qe2pZfHHluLUj7w
      utM3MAxPT2/C/RTs2X+YWctWMybMed7H7TdvsGffAUzKANZlLEYiAbVaTUxMDN0dLVw4f77/
      KaiYCam4KqC8so4Z01NQuHqj0DdxpVrLg+lzkA7xvQCnmxFsJDqQlUXGihXD3UvYYVMAACAA
      SURBVAzhB0Cr1eLp6fnNFYdZWWkpMePGD9vNTeHuiAAgCE7EWQKA4Bx+ZPcABEEQhLslAoAg
      CMIIJQKAIAjCCOV0vwOwWJwtT4gg3DtWq1V8BoR7RgQAQXAiIgAI95IYAhIEQRihRAAQBEEY
      oUQAEARBGKFEABAEQRihRAAQBEEYoZzuKaAvs1uMnD59GrMNlB5+zJ89rT+iZZ89RrfeBg4H
      Lt6BzJs15Rszc97J5VNHiE1bhq/ym+sKwkhlt5o4tOcTXCJTWTR9YCbP04f3UNnQic1qYdq8
      ZSSPi6Ig+yR5JdU4JEqeePIJ3FUyTh38nMrGTvzD41iTPneYevLtNWjUfHY8Dy83JT4hUax5
      YEF/WU9bPbt2H0QilRAxLoWls1PJOXmQq+V1LFq5lthR/lw6e4L4qfPwcR3607FTB4CyqzmE
      J8wiLsyLksunqLypZWxoX56UHqOd9PR0AC6dyKTdAP4udhrr67CiIDI8DIOuC5QeuKnk2C1G
      ug02vN2V1NbW4urpR3CALwA2q5nq+jqCwiJwd1GCw059XS0qD18C/bz715XbjVilLvh6utFY
      X4vC3YdAv6Gd4EEQhsPZE8eIjR3DlabB05pOmb2E+R4e4LCx+W9vkRixmhxNBy8+9xxdTeV8
      uvcwq2aEU2/24/nnH+bop9spaUhiwijn+OxUXr9OxuPrifFTDCrbtzeTR595AU+VjHc3b6Z3
      9kQqGnVs3LCeDz/aTUTGfFpMSqYPw8kfnHwIaFT0WKpLrlBWpqGu3UyY/+1JJOwWIxUVFRRe
      K0An9cHXBZpqq2jt6kXb3sDxc7lIrL2cy8kHoPxaHp1GO2eOH6XXZKWusgStCcBGzoWLmC1W
      jh49AcCJwwdo69ajuZpD/vUbWHUtHDl2gksFpQBcOHWEpk4dpeoLlNW3D/VhEYQhN3/ZSiJD
      7pzCWSVzoM7LZe/uz5g0dQ4OqxmJrO9k6RMyFqv2JqVFRUydMROAmTNSKSrWDFnbv6+6m60c
      3/cBn3y2l/Zu/YCy1KQJHDl6jEsXz+HwCcbtK+tm514lzAs+238E6zCk5XTqAGAxW3Bx6Zsh
      S6VSYLFYB9WRyWTYLEbMVjv+QSHou1qpb2qntbUZV99ROHpbsDqgtsNAdJAnPj6eVFVUoPIO
      xUMFICNt3nzi4+Px9XQBqxarIoDkxAnMXrCU1tq+iedlbr4snj8bXy8XbrZ24+WmIiwqmsqS
      oiE8IoLwAyWRIkFCZ2c7cu8IJoZK2frW23zwwQfc7DRgs1qRy/uCgkwqw2a3D3OD796TL/6c
      Dc8+y7J503jrrbcHlJmsdtxUSiRSKSopWOwqxoZ7sXXbdqIiQ/EO8Kfohpa0eG+OnC8c8rY7
      9RBQ0bVSUhen4yGTEOwORRV1pCWNAUCqcCE2NhYAF5uWG809NBRdIGXWfHy93Dl89CgAyXGj
      UOdfxcU7BAkwefpcku02Ci+dpqTGa/BOpXLsVjPQN82kzdF3ZyEg4NaEL0iAW6FcomDy5MT7
      1X1BcAIO5C6epKZOITV1Ctu2bQPmkLY4gzTA0NnAx4fyiIr2pVCjITZgAuUVFURGTBnuht81
      i8WCQqHAJzCMIC8XrNw+seYVlfPCCy8AYGp9n6oWI9PnpzN9rpl9mcdZMNqH+tAIQqKC6Cka
      +otFpw4ASSmJHNu/F1cXF4xmG4tujfkD2PTdHD58GBwOdEYrGQneGOrduXj+LCqVkq7evpN4
      yJhEDm/5G6t/+iIAuedO0t5rxmQ0MnuiJ9XVX9mp1JVQXzmZWQexmoykzl4IfHncU8q42Eiu
      a8qQyySERcUTEug8sxsJwnexZ+d2Wltbud5kxKpr44mVs/lo31l+8thStm/ejsNFhcNhJyA8
      DoBDe3Zys9NAr97Ek88+h5+blNNb3+St0osYHS68NG/UMPfo7h0/8Cn17XocdivB0QnIgXfe
      eYf169czK2ksf930N9xUcqxyD54PdgHgzOFMUtKW4eWroCVrC5vz7Tzw6LND3nanmxBGr9d/
      c6W75sBqMnDqQh5LFjrPUwfCyNXb2+sUE6bnnMgkYMJsYkN9hrspwtcY4QHAzOlj50lJm42X
      m3jOU/jhc5YAIDiHER4ABMG5iAAg3EtO/RSQIAiC8N2JACAIgjBCiQAgCIIwQjndY6Bubl/9
      LZ0gjBw2m018BoR7RnwDEARBGKFEABAEQRihRAAQBEEYoUQAEARBGKFEABAEQRihfhQBwKDr
      pqGpdcCyrrZm2rq0g+p2tDZRUVWD1X77B9DGXi1lZWV09fQC0FijQWu+N20rK3OevOaC8H1Y
      DFqa27rvWFZTcZ3K2sa+FzYT+Wo16lt/CkvLATAbtOTnF6AzWoaqyfeIgxuVGgqLNdjvkFeh
      4UYlxZrKL3IEY9L3cK1Y0/+6p6MFrXFwKvuh8CMIAHZOnjjJxZzs/iU2k5ZTxw6RfbVsQM3L
      Z4+iLqnC1NvFxzs/wWCxo22tZf+RM9jtdq7knKG918rNG2Xo7lEAKC8v++ZKguDkck5msfn1
      P3Eke3BO+6Of7yCn+AbXzmWx75R6QJnDrGVv1gnspm5+/4fXMZr0/Pn3v0dndp4MNXs+eIsr
      mlq6Wmr54xtvDSg7tucDLhSU01RdyJb3PgccvPv223Q2V/LpgdOAg6yDR3FVDc8T+U73O4Cv
      KlVfJDZlDuXXcvqXnTtzlgWLFnKu9EvfCmx66jsdrHlwFgBhPkouXS0nxrWLUbEJjBsXzbhx
      4wCoAdQXT4NJi4f/KObPSqEkP4eK+hZsVgfzl6bjYmxB0w7JcRFUFV/GO2YqPtJejh47jhUZ
      yN3ISF+IzaTn5NHD9Oh6iUueyYSYQA7uPQBKFXq9icXLM/BW2Tlx9Bi9ZitxiVMZHzOKnLPH
      ae02oPDwI31BGnkXTtHYoUPm4s0D81M4l1vKvLSpYDNxIbeQtJnOkz9d+PFJmDqXpHFRfKru
      HFRW3qTjlVeWAQ42bdoMC1KZnJoKwMm9H7DmkUcoyjnF3NXPMDMxnFCVkTN511kxa/wQ9+K7
      adOaefrxxahkcK3kzQFllc06XnzxKQDq39yEzqbDzSeKeQuX8/7776NRnyNpbjry7zJh+T3g
      1AHApG2jtlvKstQAyq/1LWuqKsYtdBw+bgPn57T0tOEaENr/2ndUOLprBUQuT6P25DF2fpxL
      zLhJTE/ue9PFT5rC2BAPDh8+BMC4pGlMmCzF0tPAscuFzI33pPvWCFNvTyeuNrhw/jQpc5YQ
      7O1GVtYBABxImLVgCS4KCYcPH2VCzEJ0Jlj34Aq660u4XtWIa3cFMalziQny5MCBTMbFBFHb
      2MnqtQ8hk/Rtpbq+iVUPPYJcClKZDG1LLSb7VJqvF+AZEnNfj7MgfBNPT08Mg0dcASMKhcet
      f0uQy2+fchxWPUUNBv5utR/HL7UQndg3B0BwcDBn8true5vvlYxlc/i3//Wv+LjC1OVPDSgL
      8ZCyO+sYYb4uVFSU0qbzwNB9gzMnD6Ly9Ke2y0rl+R0cNttY9dRGYkOHdh5kpw4AB/ftweoe
      zIEDBygrLyM0cgy5Jw4RPiaeA2U6ym5qqYwJZ0xEMAp3L0w9t2d3MXV1IvfyAomM2YvSAQdX
      zhziWnUAAB4efW9amUwGwMVTR+jotSKxG7C5RdyxPTorBHsP/JWmXOWKi0J2a1t9I27u7h5I
      JCCXy3A4HLS0dVLdcYZioKtTjwkFc2alcOTgAcy4snrVMubNnsmxQwcw2BSsWb2CGZPjyLtW
      ib6pk4XpgffysArCPaTEbjf1v7J/aarH7KMHmLEkAwAvLy+6u7vBzwedTudUGU/3HTnPf/32
      P5BLYfubm9FPnYDbrcH11U+9QHX5dXqtMsbGJeDvIeGn659DU3MTu7mMuEhfdLLFrJ4ZzAd7
      coh9bNmQtt2p7wGseeoF1q1ZRUZGBvHx8aQmjueln/+KjIwMMpbNJy4xlTERwX2VlT4ojM3U
      NLZhNek5eOwCqcnjaWmoofZmK3a7A5vdgfLWyfqrWrv1rFixnPiYcCSAXKFEq9ViNugor7oB
      wJgQH7KOn+NagZq65q677kdUZCgh0RNYsWI5M6enoLAZ6DbJWbFyFe42HQabmU6tneUrV+En
      N6A1Q0BUAm2VuUjdfLlziwVhODmorq4BpLhLjJTVt3GjNBeFd3hfsd1MbkU70+JCAJg0LY3j
      +z/FbDHxedZpZk1JGLaWf1tmfQ/N7d0YtF20dPYik0BVVRUAbc1NhIwei5/KTCceeMpA6eZJ
      qIcVs/soAgMDaGuspbGqCu+QkCFvu+y11157bcj3ep/4+/sPXCBTEuDj2f8yNm4sZUVXKNJU
      M23OAoJ93FGplJSXFlJwrZiQ2EmMj+r7T/D0CUB168zq5+eHl4uM8zmXCYmIwc/Hh+DwSHRN
      lZRWNxIXF4d/YBBh4ZH4ucuRufpg0LYTFxd/q10B/W3w8/MDpPj7+91qohvRsWPpaawgV30N
      z8AQgvwD6Gis4lLeFWImTSHMz4euljqyc9VEjp9MZJAPIKGj8QZxKWl4ujj1FznhWzCbzahU
      quFuxiCfvreVSyV1WHWtXNXUEqrs5mh+EykJMUyclMi5o5nUd8FjDy9HJpGgbWvAP3I8QX59
      827LXb0J91OwZ/9hZi1bzZgw55lGNWlSAiePZHGluJKHHnscX3cX1Go1MTEx6Lpb2bdnL81a
      ePLRh5BL+wb7yyvrmDE9BYWrNwp9E1eqtTyYPgfpEN8LcLoJYX7IasuLuXq9CpvVgndwFAtm
      pdy3fakvnqJJL2fF4jn3bR/CD49Wq8XT0/ObKw6zstJSYsaNH7abm8LdEQFAEJyIswQAwTk4
      9T0AQRAE4bsTAUAQBGGEEgFAEARhhHK6x0csFmfLEyII947VahWfAeGeEQFAEJyICADCvSSG
      gARBEEYoEQAEQRBGKBEABEEQRigRAARBEEYoEQC+wm4x0nlrZrAfis6uwTnWBUEQvi+newpo
      AIeZ997eQVB4X3rm2QvTaSq9QG5FO37uCvQGM0uXr8TjVla3iqtflCnx8Ath9rTkQZu06loo
      qNCxYOoELudeZuq0qd+6Wc0VVzmcW0Gwnzt6vYH5S5fj53F3Cbw0hUVEJ05E+aVlBQUFLJi/
      4Fu3QxCGSnNdBXs/24XXuAU8/sDMAWUa9VkOXixCZjUwL+NxkmLDaKi4xp4jF3BzVRI3aQaz
      U8eTc/oIuz47wW82/QHfYerHd3Hl3FFySmpQSBx4hcbwaMaS22UXTnCltBoJDkwyT1569jH2
      fvQOLT0GEqYtZnZKPAc+28mcFevwcR3607FTBwBLTysRk2axYNrA1LHTZi8kNtiDzrpSCstu
      MDMxZlAZADYDFbUdxEaPQtfRhEHmzRfTMVRrCsnNzaW9o53YCcmMCQ/gyuVLdBnsTJ8+HQ9X
      JeXlGozabpq7DMyaPRs35e3EzMnTZpMUG4y5s44zhWUsmT6egitqmtu7iB2fxJjIEKorKjAa
      tdQ3dzFl2gx8PV2RubneOvk70BTlU9PYTqdWf1+PoyB8X60dOp54ZA2Z1wanQT+VW8zPf/Yy
      EruZN7e+R1Ls8xw8kc1LL790a8IjsOja8AifyJwpTUPc8u9Pff0GL2/cAMC2bdsGlKWkLSIl
      re/f72/dipFeDPix8cXV7PxoJ23+dnxiUobl5A9OPgTUqzfRVl/BoUMHOXNRzZez2jnsVq6X
      1xAc+DVpZW1GKmv6Jqru7WimtdvYXxQdn8jY2LGkp6cTGxlCztmT+EXEM2tKIseOHQcg71I2
      gZFxzEgczaX80kGbdzjslF4vJyQ4ELATHDGGJUsWo1FnY7RDTVkJLgERzJ2ZyskTfdusqKwE
      QHPlIlqpL0sWL8Lb/YeX/lcQvmxiUjLyO55NzChVnkgApEqUCgmgpbbiBh++t4PNmzdRoKlF
      4RHAxLF3nmjph25x2mT+9Oe/sOmvfyF64uARg90fvc3vfvtbRqek4YoLRn0Hvd0t2GWuFJQ3
      0lOdx9Zt79BlGPrfdzj1NwCf0BjWPdR3dX897zTXaztQALnnT5J5o5zla58iJsRnwDq5509S
      4a7ELySSaRNC77DVO9OaYGZYX15/fzcVZsA3KIyQAB8wO8DaPaB+Qe55zmbeYM7ytSTGhGC3
      GCm9puaqzUFTczMGKyBzYVRIAEogwMONL//313XoWbw4GgAXFxEABGclBWxfWSYhMm4iTz/z
      BDisvP7GVpLjXx6Oxt0TeflFrHv8J/i7wke79mOdmTzgxLrm8WdpbrjB53uySEmaQPrCGew5
      eIbYUf74B/lxzeHFMwsD2H8yl3Ur0oa07U79DaCzvRWLre+63+Hom2IR+oZ5Njz3NCUFeZis
      9gHrTJu9kPT0dKYlTwCJBIetr7xXP3iYxe64/caVYaHXZAOHna5ePYpBtQdKnjabDRueo6ak
      gF6TlVrNVULHTev/RvFlDruVboNxwDZVEjvdBgvgEL/8FJyYHLtJi95ix6Rrw4wL4IHN1Ire
      3Pf5Uiic+jqU1k4dYUF+uHn5ITfrMHwp3nV1dSGRSAkJjyY6QEWbzkpYzAQeWbWQVr2UUb6u
      MIwJ+Z36yMuwceLoIUCCu18Is8O8adR7gUKGm3cgS+ZO5WJOHvNnT0MCuLr3lfVTeOPmaOfI
      0aMoJXaiQ+RI5C74ePYFhXExYRzIOkji5Kmkpc3i1PHD2HGQOGUGEsDP99atKokcH6/bc5gq
      XN1xR4HKzZsHlszl3MUc5kxP5PjJs9SVuuBwqPomyrAZOHH0KHaLhZTpfZH/i21OnzGdo8cP
      oXJxxSoR3wCEH7Y9O7fT3t1Lm87K+7o2Hlowka2fXeQfXnySh9es5P23t+KQyFn7+JMAPLZu
      NR+++zYOYEH6Klrrysk8fp7Wmzdp3b6dxOQZzJw8fng7dZdWLp3LW1u3IJNKiZ++AE8ZvPPO
      O6xfv57SKxcpqmpEJpEQOHo8Ub59l3l5uVeYv3ARbkoJrrqdvLe7mEeeeOob9nTvOd2EMPo7
      XKk7q1NHjpK2bOmAJ34E4ev09vY6xYTpBTnniUqaMWw3N4W7IwLAMOrs6MDbz8+5x+GEIeUs
      AUBwDiI8DyNfP+eZ+FoQhB8fcfEpCIIwQokAIAiCMEI53RCQVCpiljBySaVS8RkQ7hmnCwAu
      Li7D3QRBGDYWi0V8BoR7RlxKCIIgjFAiAAiCIIxQIgAIgiCMUCIACIIgjFAiAAiCIIxQTvcU
      0EAOrl9TU1HbzNiEZOKjR9HWWEO2uhCQEBgWybSUSdRVlOA9aiw+bgocNhPFZbVMHD8WgOa6
      SnILSkAiIXhUNFOTE5BIvn1L2uvKaMefuAj/790rs7aNI6ezAfDyDWT69Gm4KPpitU3fxcET
      5/rrps6cT1iA5/fepyDcLz3tN8nMOoxbwGgyHliITAJlhXlcyC3Axcuf5StW4O2m7K8ncfVl
      1apVuKt+mNenvd1tZOdfZ/H82QOWnzq0m7CE2cRHBvUvs1v0ZB3IpNMIDz64Gm93JXXlhRzP
      LuShtevwdlNQVXIV3+gEfIchb9IP8wjfperCbJrMnixfnk590UXq2g2037xB3JQFrFy5ggBZ
      DxevVREaFsqxo8dwABdOHsMn8HY65pb6ShJnLWPlihV4WJrI09R/p7aY9Vq0evM96ZdZ145X
      WBwZGSuZOCaA46cu9pfZDF2oAqLIyMggIyNDnPyFHzaHhbfe/oDlDz3OhFA57392BACt0c4T
      T/+UpWlJbH/3AxxmLVu3f8Lyhx4nfd40fqgpyqqK8/hk3zEKCgoGLL9RdBFNRS1lta0Dln+4
      /W3GTVvAqiUz2brtbcBG1vGLrHtwEXv27MdhNZBTVDUsJ39w8m8ALm7uSIxWcDiQylUoFVK+
      SBVnt1po7+olcIwXSndfUsf4cSAzCw//CMLvcNK0Wc109BgJi/DA1NPKoZMXkUocSFx9WbEg
      ld2ZZ1m7Zjk2YxeHzlwlOcaP7GsVKOUSEqek4QpcyTlDU4UH7V1GnnxyLc1VxZxTa1DJHYRE
      JzAjeRyZB/agQIJ3eBzRfjLOXi5GLrExNmkWE2NHDWiT3W6nrbUd/8DArz0O549lEpk8F2vz
      dTqkQXgabnC5qgtvpQMjrqx9cBnHMrMIDPOjpkHLyvTZZO7LQqZUovQIIH1hGscP7kFvk2OT
      ubJm+WLOHT9Ip96G3SbjgTXLEQmphe/E3ImLXxQ+Hi74TJ7LiZw3AUidOg2rxUSZRkNUbBzX
      886SumAFN8pLCBwVha+L7Bs2PDxiEqYQkzCFrVu39i9zWPQcvKhh1cIpXOkcWF9rlTE2vO/z
      O9oD2ixG3Nz98fAORmrrJefcGaZPn0J5dR1jo4d+RjSnDgB+IaPpyD9GZmM5DoU7fu5KuoDs
      00fQuMlwSJXE+fad7KPGJ7Fr7+954RdLBm3n3ImDeCkdSBSuTPJxR+WqYOG8NJpa2rmYl49U
      4YG/i4Uuo42GggImpk6lpyoPz4AQJieMIzjAl5uaWlJmzCM1PpSLR45iANRFlTyy7iEkwP79
      +yF5HE31dax95kV83JRkHcjk4YcfQipxcOjQkQEBoFCdTXeDBrvdQerMuAHtLSnIxdRWA8DM
      +ctIW7iUzz75BBf/CDKWRaFR32Dq7EXEh3pw9fxR6rvMYO1F5jWJNSkRaNSnSUhLJy7Uk4sn
      DtFthu4eHWMTpxI3NhaAru4ewscmEh83Vpz8he9OFUSQsp03Nr2Jm5sLlQ3tAHQ2VvHx3oNo
      9SaWr3mM9pIT5DdeIm1yHJk7tzFx0WPMmjh6mBt/dzJ3f0rGw48gacofVDZtQhR/+svreHl4
      UF1SzHSDO+6STt544y+MjU/EolCxf+9+xgS50tK7mLSJkUPadqcOANlnz7N49Vo85RI660rI
      KawkiL6TYnyoB3ZzOwdP5LHygTTOnzjO4+uf49Sx4zy8ejlfHuafs2g5Uf5KrLqbHMkuICFY
      QvFNPbERwf11pk9P4XxuAQ6DiWUB7hAwj6DmBkqv5VDmGUms1+3tSW7dRJBIpP37kcnlOICQ
      yBh83PpmANB1NpGVeQAAN5/b+wJITJ3JvNR4cNjZn3mQiIyV/WUTkqexdGbi7coOOy4KkMoH
      zywgV8iw2ewgd2dcbN8VhtFgoPD8STQufSOADpuNNWsfpbKinN27PmbluidYuWYtNZUVZO3e
      xbyV6wj2EmFA+G7WPv1i3z8cFja9+Q4AvmExvPTyq+Cw88amN1k6dQwTQ2KZPjWWaRNC2bL3
      mnMEAGMn6pJqbnZ/iLallkajCwkxYcSE9U3sNGX+cqbM76v61iYDIZ7w8E9eAGD/3j1MGTOa
      buaTMSOI93fliQDwbURHhXH8yHHGjwmn5GoB0xavoremgfqaCuhxpbasiJDYqbTVaTC5j2L0
      qFFY225wqbCKGYkx/duprS7H1CajqvQaEYmzMXZW4Orugbarg25d36CSm18EltbTeEWmAFBW
      dIUeixwPD0+6bdY7ti8yyIPjZ7Pxd3Vgl3vy1XvL4+PH0mpSEebvTluPaUBZ8816NBroaK7F
      xWfgFJKtTQ1oNH0n+7CIKCoLzhM/czmGugJKapqRARXXi7G0KCis7eXR6S6UfWn92An/P3t3
      Hh7FmSd4/puXMlNSSkql7vuWkASIW9w3xmDZ+ICqcpVdbVfbdUzv9m737DPz7Myz436efbZ3
      dnZmu6rc1S5s47JdQPkowIgbgbgFQgKB7vtOnZk6MlNKZSoz9g8JgQCXsQsk0vl+/lJGvBnx
      i5AifhFvhN7ffKq7iklNTaW7sw2FXOJ84TkiYuPQ+CiRJLh0vhBDRCy+Gh/cT2l/rOAZrpwv
      QOkbyO1rF1i6cReMmHhvbz4587Kwmo2oAsJJXbSWr/6f/47WuZm6m5fJ3frj2Q77oYxtTXT1
      DWA0GiktLSUlI5t3/umdiXmVlygd0JMUpaegoIBNmzZRe7uEPpuLgc4G/GLnoJ48CVQXnyUy
      Ywn6KH8a8vdyuENL8rxNM749HlcQ5n7WITPGHhPRcfH4aXwYsQzSbuwBZBjCIgjRB2Dq7SEw
      NHyiDCMS3T29RISHT32/s7sPkBESHokhSAdIdLa1oPQNQiFzE2KYeLPnYsFx5q9+hgC1HCQ3
      ne1tuBQaYqMjcIxYcOCDzlfNkNmMf3AwCqC/x4jVAfGxUcgAk8mEwXD3TaH+HiOD1jHiE+JR
      KSbf9BkboaGlHQD/QAPRESFT7d1OO/VNrVOfo2ITGLUOERYWBrjp7TUx0F6FSRlJeICahPg4
      FHIZZpOJIINh6qm/3WahrbOL8KhYAv21jI1aaevoIjwyhgB/Lc6xUVrbOggOjyQ4wP9J/OqE
      78BisaDTedaD/xHLADX1zcQlpRESNPG3NGodpLauCd+gUFKTYpEBbpeDyvJKwmKTCDcEzm7Q
      X+NOArgjJSObQL+Ju+Mx2xCWcSUhgX40NTWRlJSEa3yM6spq/IIjSIy9eyFnNBqJiooCYNjc
      Q8+wk9SEmJndGL4HCWCmlF4pxKkNJ3dB5myH8o3a68rAkE6sQTvboQiPmScmAOHpJRKAIHgQ
      kQCEx8mj/w9AEARB+O5EAhAEQfBSIgEIgiB4KY97DdRut892CIIwaxwOhzgGhMfG4xKA2+2e
      7RAEYda43W5xDAiPjegCEgRB8FIiAQiCIHgpkQAEQRC8lEgAgiAIXkokgKfI8IAZp3i+JwjC
      DFG8884778x2EN+G0+l8YNrlwpMU3aojOyMVW08jnx48TW9XB82dfSQn3C2ykH/kMOlp6QDc
      unwCWXAK/g+OoExbQxVog6fKMD5SXKNDHDt+kubmFqqrKgmLTWF8oI3mPgchQX6PtIzbVy/g
      H5OCdqoWhpPrxbeJjo585DiE7zen04mPz0P+aJ9iZ49+yalzl7lRco1eK6QmTNS9GOyq5x/+
      /n8lc82L6CeHrTp9cB8fHy5k/aplsxjxt3Pj4ikOnjhD2Y0SGowDZKcnS03wpgAAIABJREFU
      T81zjVn56IP3KbtdQUVDB/Oz0jm4bw8XLl/BLg8kLjKE/C/3E54451udbx4Xj3sN9H597bUo
      DckEORsB6O3tZc2mbaRGPtp4KebuNgbt0NJQS0RCOpkpcSgUPvj4TJyFG6rKaOrsZ/7CpYQb
      AmhobEDpHqOu2UjOkuWE6SdGN+xorCZp/iqy4idG+pQkB8fzL9Lt8KGlPoLNm9cy1NNB6a0q
      ohLTyEpNACTqq27R3NnPvIVLpmKS3E5q6loYGzZSfL0ak7mHRcvXEqh2ce1qMTJNILlLF6KU
      7FTXtTNk7sYh92NV7iLk36GesSA8SY3GAX7+9sQY+O+//z6sWwKSi4NHzvP89nVT7UwdNQz6
      RJMQOvY1S3o6lda08qufvw1Mbt89zh0/zNoXXycl/M75yMYowfz8FzvYv28//QY3QUkLCZql
      kpAe3QUkucYore5g6byUqWlOt4yam5c5dvQoZdVN37gMc087dW19rF63gabacgCMLY3YXdBe
      U0L3mC8b163m2vkCRsYl6spv4FAFsWHdKkqvX5taTmxqFg2lZzlxuhDToAWZzIflyxcxd9Fy
      tm5eC/ZBCq+Ws27DRsb7Gqls6aW54jp9Tl82rl+Dj+Lumfvq+bPow6PIWbqc1JR0tm7dSmig
      ljOnC8hevJw58QbOnC8Cl52i4jLm5CwhwsdGQ9fwY9y7gvB4LJ2bxL/85l1+8+t/IWfFBgCK
      CvJZsvkF1HeuWCQn+SeL2LFt7SxG+t1sWrmA//Evv+Zff/trErOXTJvX1NHFtVMH+fD93Xye
      fwbQYB8xYxvqxa3QUlZvZLi5hN3v72Fw9MHejSfNoxNAUeEpgkIjaGxowGwy091nJm1+Lnnb
      trJt+3b6Gm5huWefKuQPrzOakp6OSqnAz3d6V01jq5klC9JQqNTMTY3CaLKh8A0kLSEapY8W
      jc/d3adU63jhpZ2sXjafq4XHae+3TluWqbON5MwFqJQK5i9bTFdzK/Wdg+TOT0Oh9CE4KABw
      UZD/OcqwDCL093cbOVH46ND7azFEJqAYnyhUEx2XSKCflsDAQMbHXd95XwrCk+HiVlUzP/np
      G7z+6k7Kb5Rg7W+j8GYLzoEOmtu7qKm4xalDf0ITHkdF2U26u7uob26f7cAfWcnNCnb+6DXe
      +OlrtFSWcW95KLk6gB/95HV+9tbbBNiaqOsdY+uGXA4eO09yZADxMQbsAWn89JX1nD5bPOOx
      e3QCSJoznxDd9FKFfX293BnfWiZXTOsSGXc4cLolQMLYbyfQ9y8vPyTQh86eiavqjq5+ggO+
      fnx9m3WYcbeEX0AwOZnJ9A9YUCgVOCafWQQaQujp6piIsb0d3+BgwnQqOkwW4M5/OCtYu2kr
      3U0VjDpdgBy3+04GU+JwjOCWwOWwYX94ETJBeMqMMTwiwxDoR1BIJCND/chUfjy7efqVfvK8
      XNKjg2cpxr9O34CVqLBgfAOCUTqsjN5zHZYWqaOk3giAJFPgo1AQlZTJruc30DciJ1qvhVkc
      kN+jnwFERN+tn2keMBMRGkxncy3Hr5cAErEp8/C7ZwtXL1/MyWNHkcsgPnMhGjlo/QJANXFn
      EBQUBIAuSI9SBllLVnDu7FlqnS7C4zII1irQ6/VTy7vTHmDcbuXc+YsoFArUfkGsWRWJQgph
      pOwkJ83dPLN+JTG6No4dO45Kq2PDumzk7ljOFRZSNS6RkDYXXZAerW8Az2xcxbWSm6xavpiw
      IDXHT5xk2ar15C6ay/GjR5FkclasXQ8yJ/qgib5FldYPX5VH/zqF7yVfNixPZ/fu95EjsXrz
      c/gFGliwYLIqnrWbiJz53PvIrru7m9TE2Icv7in03JY1fLD79yjkctKXrUengD179vDmm2+y
      6tmX+PNnf6LiooOw+DkkGCYuWEuKb7Buw0Z8fWRorfv55EAlu179yYzH7nEFYUZGRmY7BEGY
      NTabDT+/R3urTBC+iUd3AQmCIAjfnUgAgiAIXkokAEEQBC8lEoAgCIKX8rjXRuRykbME7yWX
      y8UxIDw2HpcANBrNbIcgCLPG6XSKY0B4bMSlhCAIgpcSCUAQBMFLiQQgCILgpUQCEARB8FIi
      AQiCIHgpj3sLaDqJypvXaekaYPHyFYTrdfQbWygqLUcmk5OYnk1Wavzd1i4HxVeL6B8aIS1z
      3lRlokdVW15KXYsRmVxBypy5ZCQ95gGrXCMcO3YGF6APjWLZ0oWoHrHCS3tjFdqwFEJ0d6tF
      1ZVdJyJrCQGqxxumIDw6J/v2fIR1cvRalS6MN360A6Rxzp44SpNxgDWbtpIWH0Fd+XUuXi0j
      OnUuz6zLxZNqG5Vfv8jVshqyF69i+YI5U9PPHT9IXXvf1OcXX30Te1c1BUXlvPTKTgJ9VTRV
      3UKfmIV+NorCSB7s9pWzUkl1i+Sw26TP9u2TRsfdUk3JOanGaJHcrnHpyqmvpMrWvqn2hSfz
      pbZuszTusEtV1bXfen2HjxyRJEmSXONO6diBfVKPdfyxbYskSZI01i/ln7wiSZJb6mqplvJP
      XfyrFldy7qTUP/Z4QhOeDsPDw7Mdwnc2PmKW/nX3p5IkSdKBT3dLJdXNktMxKnV29Up9LZXS
      4dOXJMe4S7qU/6l06nrDLEf76MrOH5G+OHlFcrnGpfb2jq9p5ZZ+99vfSA73uPRvv3tPsgx2
      Sx/98UvJ7RyR9n52YEbjvZdH3wG091vYtCwelRyWZsdT12riTnUAmVxBWmoiNQPDEBcCgAKJ
      PrOZ6DA9czLSALhVfJHW7gFGrVZWbH4O/XgXHx+9RkKkgX7TILt+/ON7avROGBu1MY4aX5Wc
      0vP5OP3j6WxrZMv2zVw4Wcr2vLWYWsppGQshCiNHrzUQafDDNGjnxz9+hZ6mSi6W1qJWSkQk
      ZpGbk3HflsmIiEvBfXuizOXFM8cYGHFhtdh47qWddFVe4nrTIIE+Ena0vPLCM9w4n0/UojzC
      NXYOHzqMXK2lr72dhOVbnuBvQBAe3an8r9iU9xLgpG9EwQKlnZqGdjIzUpHLQsmbvFl3ucHf
      z3P+16G4ppMdeXO5dbuSzKzsh7Yx1l4jNHUZKpkdXz8D/oHhyF02rl48z7Jli6lvbp+VIbA9
      rij8vYJ1Ko4cO01rawud7e34hsSiGR+gqLSc9pZGGrsGWbNyKarJcotxSSn0t9Zx4eIlTCMS
      8dHhhEVEoVGrCdEpqem0kmBQ4fKPYfPa5ShsXcgNKdzpVamruEFdQzN19fVo9RGkJsfR01qH
      TRXOto2rUCsc1Nd1kZaewOhgL4MuX3RY8I/JZu3yRdi6OjCkJHPl4lVefGkHc+ZkcqP4Cunp
      E4XqcY1y/NgZ+vq6qSyvJGf5WoL8tURFx6BW+aB0DmGVB6Ma6yc6ayUrFs9jvL8JZ0Astp5G
      dFHpGMsvEZ69mhWL5iGNDBAUm4zvwwuhCR7I4XCgVqu/ueFTRnJYOH6pkm3rc4Fh9n74Zwyx
      cdhMbeQXlpK7aB5u5wh7//A+sohsNi6Z843LfFqc+uozxpQB+DDGx3sPsGrNigceru7705/Z
      9YOXUcp9aLh9mbMXLxGXkIpc7cu5wvO4BtrolxmICwuc0dg9+g7AEJXEj36YBMDNiycJjgjB
      3tzE8nVbGKy9jCYyE63q7q9CJlMwb/Fy5i1ezokDB7Atzub0n78gKTMHtUyOW3JPX4Hsvl5I
      tY687dsBaK0oorJ5om8vIyP9keKVTS5PJpNP9W8qlEokmPqcnJnDwpQAbjQNEh+hxz02zBcH
      TpCTMw+5XD5ZOewupUqBy3V3mtU2Smyg/yPFIwgz5dyxr1i7/YXJTzqSslLZtG41APXvvQdu
      B//6m3fJ+8lbJITrv35BT6Gg8Hi2b9uCAuhtqKV/DCLuydH9LWX4xc5HM3kh9vJrbwFw+NBB
      FifHM8Q68nLD+PTzElZmxz24gifIo98CsvQbKbl5m7LSazQOyogPvlOyUcaydc8wYqzgRnXL
      VPvSK+coLi2jquIWgy4FGjk4XRIqBXQau755heNj1NbWUlNdxZWbdUSF3p+t1QwNtFNVWc6F
      opKvXUxcmD8FF4q4ef0KbqXugYddUUlZLEgM5PCJ80jucSS5ElwOunruPkxqqKmk4tYNbrfZ
      iDPcvV1Oz8rizNF8qqsqqKhp/OZtEoQnTHKNcqvdxvz4ySpgKEmN8GX/gWMUnsxHqYugvqQQ
      DEmYOpooLS2lu39oVmP+NjbmZvHu7z/h6uXz1A5KhKmhoKBgav6ho+fZ8ez0EpjVxWeJzFiC
      PiqJhtJzHP4yn+R5WTMduudVBJtGcmPsaMOBD/GxUciAEcsg+OjwVSsAic6OTqJiYpABkuTG
      2N6G3SUjIT4OhVyG3TZMe1c/8bFRDI860WsVWBwQpPPFOmRG5R+MejJz9/cYMQ1akMnkRMXG
      4a9VYxnsx0cXMtXGOmSmx2whJsKAQ1LhgwMHPuh81QyZzfgHB6OYXJbVwVTcALidmAZHMARP
      JBZzbxeawFDGRwbpHxolKjQIp8wHY/VVTMpIwgPUU9txbxzWQRM9AzZCgvzxDQxG5dFpXriX
      xWJBp9N9c8OniHNkGPOoRLhh+gVTZ0sDQw45c9KSsJh7pxWCj45PISJkZrtD/hoDfV20Gk1k
      zc1CJZfR1NREUlISINHRYSQmZvobh0ajkaioKACGzT30DDtJTYiZ8bg9OwF4qfa6MjCkE2v4
      +iL1wveTJyYA4eklEoAgeBCRAITHSXQOCIIgeCmRAARBELyUSACCIAheyuP+D8But892CIIw
      axwOhzgGhMfG4xLA/f8IJQjexO12i2NAeGxEF5AgCIKXEglAEATBS4kEIAiC4KVEAhAEQfBS
      IgEIgiB4KY97C+heFnMX5y+XoFCpGLGNsuW55xlqr+ZGTRtyyUlEfCaL56VONJZcnD15AgcK
      XOPjzMlZRlJM6OMJxGmhuKKTpQvuL+wiCIKps4H9B0/i66slNm0em1ct5ss/vs+QQ8H4mI3E
      uatZlxPD7z/8I366AIaHbbz+1i8I9vOMWqY1V09w4EoTkXotQREJvPjs+ql5Qy1l/NdPTpEa
      G4rSP4TXduZxcN8eeodHyVq6iVUL08n/cj+rt+8kaBZKQnp0AlCqA9j2XB5yGXRUl9BiNNNR
      107ec9uQAcePHGF8XipKYNzSg8M/iq2rFgAgSRJWczdW/IkI9qezuZnQxET6mhsYVyipq6kj
      JTOHxJgwulobuF3TSFhMIguy0nCMWrh6rRh1YARLF2Rx/cpFrld3Y+5pYfnazQTeX0JMELzY
      4WNneOuXv0KtuDvw+Ss/mRgTX3KN8cEf/kSjooucDS+zem4szTcLuVHdyqbFKbMV8rfS1t7L
      3/ziF0T5Ptih0trWxis/+VsWJgVPTrExSjA//8UO9u/bT7/BTVDSwlk5+YOHJwCtnx8Ag32d
      XK/rZttzi+iqdNA/aEXvp0LmGGZgFEK1oNRFoLaWcvhIF/MXLiE+KhSbuYceZEQE+2NsaSEw
      MRFjSx0uQwobNm7gxInTJMZspeRWJdufy6O3d2I8/rNnzrJiw1aGO6u4Xt7M0uXLGXA38Mz6
      JbO5OwThqWRsa+CzvZ8wYrUxf8VGluekM9DVzJf5JzENjfL6z94iwl/Gxfc/oLbYl1Gngr/9
      2brZDvuRSSofjn/2MeMOB4tXbWJRVvLUvDGXnJIzX1Fa4CBlXi7rc7Oxj5ixDfXiVmgpqzcy
      NtTN7tLL7PrJawRpZ/aux6MTAED1zWt0DLnIy9uOUi5jw+bNFF8rxu6WMzauRH1nf8rkrN+a
      h3NshNKiC/SY04l/aNlRBekZaSgU4OerAWTERxo4evQogaExhEcE09XZyZULhYCE3WWC9EUz
      tr2C4GnC4tJ4/fWfAhK/+c27LM9JRx+ZyM/e/BkVN69x+vRZVs8JISIjl+3rF3HtdD6369tZ
      ljmz1bG+q2d2/HDiB8nNb3/zLjlZ/zN3+gCWrH+OJZM9Qp/8268xL5jP1g25HDx2npRoA4aw
      YG5LAfx0QwiHzxazc/vKGY3dox8CD3Y10jWqYfO6FSjlE7eXCh8tK9asY93KJbg1/gRMprjx
      sRFGxpyo1L4sXLKIwd5eZDIZbrcLkBgZGfmatbhIzV5KXl4ealsX5jElEbEJPLN1K1u3PsvW
      jatArsDtdMzINguCp1G6xhgYmTg+VCoVOEcZtNqRK1XMW7yckYFuOlqaiU9JRSFXkpYSR3NL
      xyxH/eja2tqmflYoldMq/LW3tXFnvH2ZXIlCDlFJmex6fgN9I3Ki9VqYxQH5PfoOwGQyYTH3
      c+LERDnHuYuWI1m6qKhrwe2GNevW3W0sublUeBqXTI5c4cPK1avRyh1cP1FAX4svLrcKBaAL
      0qOc/A0GBQUBEiVXzmFzulHrQghWy1iQncaxo8dQKGQkpc8nLTGKIPUIJ06eZNX6Z/D3meEd
      IQhPsV0/3Mlne/+AS4Lc9VsBiSN/3sfYuAxJcrN2y3OkxwTy+Z8+o3RcQqEOYNeuV2Y77Edm
      6mjg5MlTSG4XKzZuRw7s2bOHN998E/tQDx+8fxIZEmkL1xI42SNRUnyDdRs24usjQ2vdzycH
      Ktn16k9mPHaPKwjz9VfqgvD9Z7PZ8Jt89iUIfy2P7gISBEEQvjuRAARBELyUSACCIAheSiQA
      QRAEL+VxbwHJ5SJnCd5LLpeLY0B4bDwuAWg0D/3vLUHwCk6nUxwDwmMjLiUEQRC8lEgAgiAI
      XkokAEEQBC8lEoAgCIKXEglAEATBS3ncW0DTSZw/dZThsYnhjNY9k4duciC22vIS0EWRnhA1
      1frKuVOYLGMALFq+jqgQ3QNLLCq6wvLlKzCbTAQZDCJDCsJfTaLo7AkqmozkrtnE3LR46spL
      uFxchibAwLbt2zE1l1NwuXTqG4tWbWJRZtIsxvz1bEP9FN2sYdO6VVPTBnraKW/qY83yhfe1
      lrhccJQ64zB5L+wgJNCX9vpyCorKeemVnQT6qmiquoU+MQv9LBSF8ejzm+QYxEoweXl55OXd
      PflbTR20tRmpa+2a1t5kc061fdjJH8BsNgFQUnSV8ScavSB4h9MH9+IITOTNv3mdYH81ABa7
      m1df/xu2rJzPR3/4I0lZi3j77bd5++23SQrR4hsY/A1LnR1NlSV89tVpysrKpqbdulrI0XMl
      lN0seaB9acEB+pTR7Hx+Ex988CHg4mjBFXa+sJGDBw8jjY9ytaJpVk7+4OF3AEM9XYw6x6hv
      bCIuLh61SgGSmwtXbrJ57RJO3DT+xe8bGyu5XFaHQnKSuWQtGfHhAPQbW6iqrWVEchMVm8z8
      5HC+OlaARqNGptXz3Ja1HDnwJxSaAFwOO+rgGLasWToTmywIHqe5b4TtC5RU1DSQnTlRN3vR
      kqWMO8eoq60lISVtqq00bqO6e4xN0UGzFe5flJS1mKSsxezevXtq2vzc9czPZdq0O0rqe3nr
      ly8jBzIMSrpG7Pj6GfAPDEfusnH14nmWLVtMfXM7qYmxM7glEzz6DsA3JJa5KVE47Ta+2P9H
      zDYnlSWXSV+0CtVDtsxkbCE/P5/8/Hz6LQ5uVDXzyssv8tIrr9BcdTejh0QlkJmezra8PJbm
      ZFJ69Rob8l7m+Rd2EK0ZpWPQAWodz27bRt6Ol5DsgzO41YLgWVpqyihv6GCwp5X/9pv3ARgw
      NvH+++9zsbSKlOTEqbaXjn/Fyq3Pz1aoj51MoZg6yfr7KRix++InG+Ddd39NeGQMTpWOw4cO
      U331NJcr2v7isp4Ej74D8NHqSE9PB0CvctLY1kVzTSPa7kGqHFbquiw0JsWQHDtxZW+ISiBv
      +/ap7w/1d3IkPx8AnSHqwRVMGnO60agnirz5+qoZc0x0Dt2p/COTyb7mm4IgRCdlsXXTOgCq
      698DQB+VxC9/9XcguXn3X/+N7L/7d+Ae40bLMH+fFzaL0T5eSrcLuxs0cug2O1msk/Hya28B
      cPjQQRYnxzPEOvJyw/j08xJWZs9sGUyPTgDNNWU09diIDgvi5o1qtr/8Q5bM+ZuJmdYu8kuN
      Uyf/h8lIS8GCjrBADeYR17R54UE+FBXfJDE6kvk5GRw7fIzstFhu1pv5wSJfqp/gdgnC98nC
      1Aj27D9AaoQfTqUORky8tzefnHlZWM1GVAETx+j1gnwWbdj+DUubXca2Jrr6BjAajZSWlpKS
      kc2AsQnT8MjUtMx5i7h8voBNmzaxee0ifvfeRyxKj2BAoSdosiJYdfFZIjOWoI/ypyF/L4c7
      tCTP2zTj2+NxFcHuN2Tuo8c0RFx8Ahqfe/KZa4x+i4OQoLsPe/tNJkIMhmnf7+vuYHhknPiE
      eJRyGSZTPwZDCEgS7a1NaAJCCQ0OwDY8gLF3gITEBFQK+bRlmc1mgoOfzodWwveLxWJBp3v4
      CwxPs57OFnqHHGTNSUMug1HrILV1TfgGhZKaFIsM6OjoIDomhqf5fvpOArjj3gRwR+a8RXS1
      N5GUNPEWk6mnk85+K9mZ6UyWLsdoNBIVNdHrMGzuoWfYSWpCzMxtyCSPTwCC4E08NQEITyeP
      fggsCIIgfHciAQiCIHgpkQAEQRC8lEgAgiAIXsrjXgO12+2zHYIgzBqHwyGOAeGx8bgE4Ha7
      ZzsEQZg1brdbHAPCYyO6gARBELyUSACCIAheSiQAQRAELyUSgCAIgpfy6gRgtw1jszsfmN7b
      1UFPv3kWIhIEQZg5infeeeed2Q7i23A6756wJcnF7ZIiPj9ayLJFOdPa2YdNHDl2kpbWVlq7
      TCTFPzjQkrHhNn1Of0IDfSivqCE8LJS26utUdtgINQSh8/P91vFVVZQTHBbu3ZlVeGKcTic+
      Pj6zHca3YupsYM8n+6moqKDf5iI5LorSCyf489ECrlw4T2jCHIJ1Gv75v/xHGlo6KCsrIyIh
      A51WNduhPzLXmIX/6z//b9j8EkiNDZ0+Uxpn9//7Drd7YcGcRA7u28OFy1ewywOJiwwh/8v9
      hCfOQfOwIiZPmMe9Bnovu2WQkIRM0gZsD8y7cOkKW557Ad+pneqmquwG7T0m4lLmMCf53nG3
      FfhqfbCauym8dA3/8BR6+oMIC/Kj+NpVHDINublLUSslGhva0CgcDDh8CFC4QQ211Y2kz11E
      XKQBH60WBWAd7Kf05i3GUbE0Nxed1rMOWkF4XA4fO8Nbv/wVasWdcT5dFFe28j/96he4HRZ2
      f3KIlNe2EpWxlp/+aNusxvpdHT10kG0v7KDnIfMunfiKlVvyKG6yAjZGCebnv9jB/n376Te4
      CUpaSNAslYT06AtVbYCB6FD9Q+e5Fap7Tv4TgsNj2bx5M921pZjt09+lbmxswD84gpzMFFZt
      2EpOZgrnzpwmKXsxC+bEc/rMecDF5XMFdA65yExLoL2hij4bbNi4nvIb1yeX0zixfmQsyl3F
      iiXZXLhw6fFvvCB4CGNbA5/t/YT3fvc7ispqwWFCrYsGQO6jQyVzMDJkodtYz54PP+SPn32F
      04PGKDbW30ARnkVkkPaBeZa+VjrGdGTFhUxO0WAfMWMb6sWt0FJWb2S4uYTd7+9hcPTB7ugn
      zaMTwF8iuaX7Pruor77NqVOn6OjuwTr6zSXfxxU+hOv9CTBEolFMtA8Oj2NpTiZymQxQk56R
      jEKhws9XPe27Y7ZhLhSe5fylYoasD96hCIK3CItL4/XXf8ovfvVLrl84BXIluKYff75hSfyH
      f/x73vzZz1iSoKHgqoeUXBq384fPjhMZKKeqrpHWxjoGLKOTM9189NEfSYgJ5WZFDV3tzfSY
      rGzdkMvBY+dJjgwgPsaAPSCNn76yntNni2c8/O9tAvBTujGaLAC4XC7MbbVoIjPYunUrmSmP
      VnbN7XDgdEtILgcj9ok/2Eftf71RXsuzzz7Llk0b8JssJykI3kjpGmNgxAGASqUCZTBjlnac
      bglrfytogunv6cQ2NnGMud1uz3nOIUk8u33b1xSxkdj4zDbuP/yjkjLZ9fwG+kbkROu1MIt3
      Ox79DKCvs5nS8lrMAwOcOHGClMwcUuIiAFi1biPnzp3jtgs0uhDWLM3CdOoMp9qrkUkSsUoZ
      +OpwayZ2gV4/UdHLLyAY1eQvbEXuIk4dPwqSjKUr1gIy9PqgqfUHBOu587sNCgqaXM5El1RG
      UjTHjh9H6+uPPnh6FTJB8Ca7friTz/b+AZcEueu3AvDic5v5cPfvkSk1/OjHP4aRPr744x9w
      y2SoA8L54cvJsxv0o1JpWbBgAQCmYB/8rf7odVr27NnDm2++Sdb8iXlYuugmgnBDIAAlxTdY
      t2Ejvj4ytNb9fHKgkl2v/mTGw/e4imAjIyPf3EgQvqdsNht+fn6zHYbwPfG97QISBEEQ/jKR
      AARBELyUSACCIAheSiQAQRAEL+VxbwHJ5SJnCd5LLpeLY0B4bDwuAWg0mtkOQRBmjdPpFMeA
      8NiISwlBEAQvJRKAIAiClxIJQBAEwUuJBCAIguClRAIQBEHwUh6eACSaa8s5cuQIt6onxuGX
      3OOUXS/iyNFjtHT2Tmt95dwp8vPzyc/Px9hvoae9EWO/BRil6EoZAEVFRTO9EYLgBSTyP/8U
      48DoPZOcfP7pHu5MOvLFp+zevZvdu3dPb+chCo8foLat96HzSi6dprSyCYD2+nI++mQfQyMT
      4/83Vd1i4BGGp38SPDoB9LQ1MODU8Oy2bYx2VFBnHKKmvIyAiCS2bd1M6fkCRlx325tsTvLy
      8sjLyyMqREd4bDJRITrAhdk0NNHGbJqdjRGE77HSwnyaO7voGrBPTSvM/zOdXUYG7IBkp2tQ
      4u233+btt98mSv9gcZWnWWvFFWob2qhr63tg3qCxnqrqOkqrmgAXRwuusPOFjRw8eBhpfJSr
      FU3oZ6kimMf9H8C9wuNSCZ/82S2To/FREjd/MTBRL1ihVCF/+EDdANSWnoeoRaRHPjiv6NQh
      jA41SqeV4VGJ4EA/+vr6efnV13H0N1NwsRS1Wok+IpG1uTkcOZKZ0k2HAAAgAElEQVSPvwpk
      gTEsTA3n+JnLqH0URCRksiwn4/FvvCB4iLHhHm52OFg5N3Fq2nBPEx2OQOYmhk206Wulx+rg
      xs0yUtPnoLuvwNLTTHKOcOxKLc9vWMyNgftnuvjy8Blee2UrHxc2A3Z8/Qz4B4Yjd9m4evE8
      y5Ytpr65ndTE2BmP3aPvAADGx0Y4fvgAvtHZxIVMDJNrGejhwJd/ZuHaTWju2UKTsWWqC6jf
      4viGJStZt+VZXnhxJ8GBWrZv387yuQmYLE6ulVbw8q6d7NjxIqO9bTgAc3cHmcs2sjZ3AdeK
      b5D30iu8sOMlzF3NT2zbBcETfPnlV+zc+eI9U1x8+dVpdr64dWqKQhfFs2sWMO4Y5b3/77/S
      0DU084F+R0cOfEHey7seWhTmyqmvWLz5xXvqIfvhJxvg3Xd/TXhkDE6VjsOHDlN99TSXK9pm
      MmzAw+8A3OOjHDiYz+btz6PXTdwyWk1GTpy/wfMvvoJaOT2/GaISyNu+ferzd+3scctk3Pl9
      qhVKxiUIjogjLMgXgBHbEAXHj0w20H3HtQiC57P2NFLX3sdnn3yIsakS9EbUz6ykvW+QTz58
      n6bKUvTGPfzqV2+yaNEiAFJDfTh5u5aUyKWzHP0jsA9QWtVM19BeLL1tGO0aspKiSIrSA+MU
      Xb+FrrWf4tEBSpsGuDUvjZdfewuAw4cOsjg5niHWkZcbxqefl7Ay+9GqFT4uHp0A6m5eJSAq
      iV5jG71ARHQ8RRcukpqRQ0tjPQAJKekPlGT7a2XEhXGs4AKxBi1mtxLf+1L//KwMbrdbSI0N
      o6PH/HhXLggexD88mX/6L/8JgNKCLyBpE9lJerJzJrpqC77YTdKmN+mtvcaB221kpsRx4WwB
      O9/6X2Yz7Een0fPOP70DgLHyEqUDepKi9BQUFLBp0yb+8T//00S7gSZ2FzQxP33iBF9dfJbI
      jCXoo/xpyN/L4Q4tyfM2zXj4HlcR7F7DA/109d69jo+IjmfM0s/A8N0i7PcmgH6TiRDD3fKM
      I5ZB8NHhqwZTvwVDSBAmkwmDwcCQ2YRvkAGVHEymfgyGEEYsg8g1AWhUcgb6exiwOkiIj0Uu
      Y+p7dwyZ++gxDRMXH4/Gx6PzrPAUsVgs6HSeeVdpGegFjR6dVjU1baDXiEYfhVYFg/3dNLV1
      kZw+h0A/zxvvaMw2hGVcSUigH01NTSQlJd2d6RzFOGAnKmyiZKzRaCQqKgqAYXMPPcNOUhNi
      Zjxmj04AguBtPDkBCE8fj38ILAiCIHw3IgEIgiB4KZEABEEQvJRIAIIgCF7K415Psdvt39xI
      EL6nHA6HOAaEx8bjEoDb7Z7tEARh1rjdbnEMCI+N6AISBEHwUiIBCIIgeCmRAARBELyUSACC
      IAheSiQAQRAEL6V455133pntIL4Np9P5wLTLhScpulVHdkYqHQ0VnLtSQn1tFcNjCqLCJwZo
      G+io4WbzELERwQBcKjhOYHQyGuVfqBhznxP5X9LSYyEpfmLQpvwjh0lPS//O21J1vZA/n7vF
      4nkTBWMkp5Xf/Pf/RkDsXEK1LsobOgkP0X/jchqqKtAGh6ES6fx7z+l04uPjM9thfGujg138
      x3/4e8Iy1xCp19LT3sDePe9RP6hkbmosDms/v/u33VRWVXH+/CXS5i5E6/OYh/F9Qs6fPETB
      +cvcKC2hsrmH+ZmpU/Pqbl3l80NHKb9VxqWSSpYsms+hfXu4cPkKdnkgcZEh5H+5n/DEOWhm
      4QD2uNdA79fXXovSkEyQc6ImcHldO3nPbUMGHD9yhPF5qSgBfXQqg7cLYH4y4MbilBGoltPd
      3kRFdT3awFByly7EZTPT3D1IX2cLPoERLM3JvLsydQA6LJisDgz+dw9C25CJa9dvEBKTxLyM
      ZByjFoqKriEptSxeuhStfJyioiIckpKFi5cS5H93pMOksAA6BuzE6DU0V1eQkTMxJjoKBdrJ
      A725tpy6FiPxKZlkJMfS0VxLZV0LkfEpzMtIRuGjxUcBSG7Kb1yne3CUJcuWEeSvpaG+nnG7
      hbaeQXJXrCLA1/NOHoKnkzhw8Ag7nr9bi6PPbOXVXS9y5PYgAI3l18nZ8DKr58bSfLOQG9Wt
      bFqcMlsBfytrn9nB2smfd+/ePW1eeMIcfjk/F4CvPv4Ak8PGKMH8/Bc72L9vP/0GN0FJCwma
      pZKQHn3NKLnGKK3uYOm8u38oCreD/kEr484xZI7hqYLTyBT4Kd3YxiWsvS34hyZMtFf7sXbj
      ZpKC5Vy93YjDZqbkdh0Lc1fj7m+i/77a1IuXLaPk2rV7prg4W3iR5WvWoxjuoLbDzNVLl5m7
      bDVLF2ThHndx6+ol4uYuY+XSBUju6cWf07Ln0lBVAUBr/whJ4ZMjPbrsNLYYwTnM7YZ+Nm/e
      TJC/GnBy43YDmzdvJizIH4CWxkZcwK2rF5AHx7J2xWLOnj6NG7hVcg2/0DjW5s7l2rWbj2W/
      C8K3UVFUQNKSzfir755usufncG+9pvRFa6i+cIAPPnyfI9eaWTk/eRYi/Y6cFj7+8AP+73/+
      Z5at3TptVmBgIADVNy7RpzQQ6qPBPmLGNtSLW6GlrN7IcHMJu9/fw+Dog70bT5pHJ4CiwlME
      hUbQ2NCA2WSmu8/Mhs2bqb9dwoXL1xgbV6K+O/Q4czPiqahto6KqkbnZE7dppu52Ck6d4lZ1
      IxarFYCE5BR81SoCAv1wuaavU6HWEeHnxjgwMjFhxERb7yDnzxbQ3muiubmV7LmZXD57irMX
      ipDkctKy53L78llOnb3AuDR9l8s1gbjHhnE7LMjVAQ+WlVP5E+4/ztGjR+noGQBUxIT7c/To
      URo7eqY17bGMkZUYhY/WnwSDL0MO0OnDiI0IQe0fiIrx+5cuCE+Uw9rPocKbaJwDNDS301BT
      gW3M9UC7lppbRGTk8sYbb7AoUc/t+vZZiPY7Uul4/Y03eXXXC1w4c5ppWye5OLhvD02DKn72
      4xcBBVs35HLw2HmSIwOIjzFgD0jjp6+s5/TZ4hkP3aMTQNKc+YTophePVvhoWbFmHetWLsGt
      8Sfgnjur4Ng0BtrrGHZIBGkUgIsWo5lnn93K2uULH3m98xYv49b1qxMf1DoS4+LZunUrW597
      kXVL5qANDCUvL48tq3MoLq1EoQ3kubw8tm9ZTWlx6QPLSwjxo/BSCcmZ2Q/Mczud5KzYQF5e
      HqaORlxuJ3NyVpCXl4fb1IHlnr82XwWYbWOARM+gDT/VA4sThBklyVRsf3bzN7braGkmPiUV
      hVxJWkoczS0dMxDd4zE4OIhMLicuOZMAmYN7B+q4euoQEQs2s33DsqmLu6ikTHY9v4G+ETnR
      ei3MYkUWj34GEBF9t36mecBMRGgwHU01VNS14HbDmnXrpn9BpiQ0UIE8IGFygoKQAB9OnDxJ
      oJ+a4MAYFCotARO15fHVBaG65zlUsF4/uRgNKVFBNPVrQKFlToKBo8eOI5fJyF64lPHBTmqa
      OpAkGctWr8Pc3cqtmiaQJBYsWz21PF9dEBqljNDMudw8cp4YvYZOUwBKjRJkoA/SgeTiYmEh
      LgmCIuJQIHHtYiF2l4RvUAQ6BQTp9ciAZStXUlhYwLgbkuYuxkcG+uA7D5FlBAUFPM7dLwjf
      SO0XyIIFCwDwxwoROfipFRzc/xGmIRv91nE+tfbz6gs7+PxPn1E6LqFQB7Br1yuzHPmjK75w
      grZeGzKZRPKCFfgBe/bs4c0336Rn0IrJWEDN5PXijh++gV4LJcU3WLdhI74+MrTW/XxyoJJd
      r/5kxmP3uIpgIyMjsx2CIMwam82Gn5/fbIchfE94dBeQIAiC8N2JBCAIguClRAIQBEHwUiIB
      CIIgeCmPewtILhc5S/BecrlcHAPCY+NxCUCj0XxzI0H4nnI6neIYEB4bcSkhCILgpUQCEARB
      8FIiAQiCIHgpkQAEQRC8lEgAgiAIXsrjKoJNJ9FcW8Hlq9cZdSmICA1GcjkoLrrE7cpa/PWh
      6Hw109rXV5Yx7hOIv2ZiqMymmttcuVaKWqcnSOeL22lnwGpHq5konHKlqIjY2NiHr97t4PTJ
      QuKSk1A8emExQfjOHA4HarX6mxs+RVrqyjl8+Ai3axqJiUvEV6MCaZyzJ/I5c+Eq/oYIDEH+
      3C6+wOFjpxhx+xAfHT7bYT8yx8gQXx08wLXSciJiE/DX3v39jFv6+ODjvZSWlnKrto0Fc+fQ
      Xl/OgaNnSErNQKNS0FR1C/xD0M5CRTCPvgPoaWtgwKnh2W3bGO2ooM44xPnTJwhNzGLLxjWc
      P3Ecxz3tC0/mU1dbS+/gRJWXjtoSmgZkbH1mE7cvn6bf6mR8uJuSquap75jM5q9df3djJXbn
      KFXNfU9qEwXB4w1a7Lzy6us8v2Ulez76AwAH935EYOJ8/ub1H+KvVtBWfpHiFjtv/uxNhusu
      c7Wma3aD/hY+3vMhi9ZuZdeOrXz04QfT5nU0lJOwYANvv/02b776IuDiaMEVdr6wkYMHDyON
      j3K1ogm9qAj27YXHpbIwOxWFXI5bJkfjo8Tf3w+X240kSWh8tdM2cP0zz5OVGj/12djRTdbc
      TBRKH9atWEh5TSMXL12kqqyY/PxjjLjAZGzl2LGjfLH/j5Q3Tf+jrGruY+u2LRjrywGoKDpL
      U+9EUZnLZ44zYHdx7cJpvjp8mM8+/xLrmIva0vN88tkhjh7JZ++XhwE4ejR/apmnT58CJApP
      HOZw/mG+OHAEp/vJ7D9BmAk5i5agUUBjXS2xCSmAk74RBQalnZqGdiLCQ9H66VDI3CBJSAof
      /LWeU7o0MECHyyXhdrvQ6aYPud7S0oJtqJ/yqlpcbgmw4+tnwD8wHLnLxtWL51m2bDH1zbNT
      AMfj/hHsfuNjI5w+eYLI1AXEhfjhl5zCmYvnqFDKCYpM/osbOHfRUg7lf46/vw6VNIpbn8qm
      Vatx1VnYsnwuAIaoeLZt2w5jJk5ebWFuUuTEl91juBUaVAo1GrkLpwRzFi7i5MWbJG1aybBD
      jl5ho3fEhxee38xofwtXb9cRJYdlazaSHqnj5KlTD41rtL8VV2Aizy+fi7G2hKrmXuYnhz3m
      PScIM2N0wMjHfzrEsGWEDdteBKzUlFWSlJaKzG6m4GIx/+61PMa6C9m9uwmnW8XaiKDZDvuR
      5eTM4+C+j1DI5WQsWTNt3twVW2jp6GGgu5X/89BR/tP//g/4yQZ4991fk5o+F6dKzeFDh0kO
      09Jr28TK7LivWcuT4dEJwD0+yoGD+Wze/jx6nRaAopLb7Ny1Cxlw8+IJ2gcdxAY9/GpCGxTG
      j370IwDaq67RpwoHxh6+MhnTyjV2NVTQZTKTn5+Pw2qisrGHnJRw5GPD9LfXEBybAeNjNNRW
      k+8cBiA5MwcGe7mzJJns4Q8OHPZRaituMNrfAsDcxYnfZrcIwlNFq4/iF7/8FSDx7rv/yuLs
      X5CUlcqmdRPFkerfe49z+V+w+cd/R3KwCntPDfuPXuCNl9bPbuCP6OyVm/zjv//3AOzb/R5D
      KxYTOFlIyhAegyE8BoDhzia6rPDya28BcPjQQRYnxzPEOvJyw/j08xKRAL6NuptXCYhKotfY
      Ri8QER1PaIAPhRevEqH3paptkJeWT9ZFdI1R29BCT2c3I74qAlROovVqrlc0EaCRc7vGyM6d
      y1A4h+luvEZ1gA8pWelfu+6Kxl5+uHMHKhngHuPIiQvkpGwmMzGEz07d4m/f+BHIJVJigoiJ
      T8JtH/7aMVx8JCe3KqoY6utiaMRFYGQiof5lJCanYB3oE2O/CB5shD3v7SUjZx4Oq5lxVQCg
      JDXCl/0HjhHh50KpiyAjO5I/7f0D63Lnc+PKeZZs+/FsB/7IAhQODp84Q7BGotXiwl8BBQUF
      bNq0idOHP8PuYyBYK6O81802/4nvVBefJTJjCfoofxry93K4Q0vyvE0zHrvHVQS71/BAP129
      pqnPEdHxBPpr6O8xMmgdIz4hHpVi8uQ5mQDu0PgHEh8dTm9XJxa7i8SEOOSTV+SWgX56B0ZI
      TIrDbDIRYjCA24l52E5wkA4Ak8mEwWCYWl5/fz8hISHgdtLeZSI2OgIAyT1Oa0sLKt9AoiNC
      GbEMgo8OX7UCs9lMcHAw7nEHTS2tRETH4Ri1ERwcjMs5RktrK/76MMINnnM7LDxZFosFnU43
      22F8K45RK9W1dfj4BpGRmsSdG9/OlgaGHHLmpCUhAyyD/dQ3tZGQnE5woCdVPZNorq/B4pCT
      lZmGQiajqamJpKQkQKK1sY7BUTfZmRko5BMbbzQaiYqKAmDY3EPPsJPUhJgZj9yjE4AgeBtP
      TADC00v0LQiCIHgpkQAEQRC8lEgAgiAIXkokAEEQBC/lca+B2u322Q5BEGaNw+EQx4Dw2Hhc
      AnC7xbgIgvdyu93iGBAeG9EFJAiC4KVEAhAEQfBSIgEIgiB4KZEABEEQvNT3IgHYbcMYe/on
      PkgSPcYOmppbcbqmPyzrbGtmZGx86vOodYi2zu7HGstAfw8O12NdpCB4NNf4GNUV5dTUN3P/
      wDP11eWMOid+tg72c+t2OXanZx5Ana2NmIZsD5kj0dlpnPrkGLFQUV3PnV1hGejDah9/yPee
      vO9BAnBz4fxFrpdcB6Ch6hYdvQM47Va+/PIQ9/4pXb18lpKy6qnPpcXXuHi5aIbjFQTvcurI
      VwzY7PS01fD7jz+fmt5w8zwf7vmIbit0N5Txh8+P4Ri18Ntfv4vdw3KAta+VTz/6kOKqtmnT
      +9rr2f373ezZd2ByisQfP/mYwd5mDh6/CEicOHkGjXp2Xsj0uNdA71d3q5jE+bk0VZYAkJKV
      A0yMwtnY0MK9Fxx+hlic1t6JD5ILu1tJwGRt4JrbJTQb+3CNS6xavwl/xRgFZy4gyeXEpWaR
      lRLLzasX6R6wodGFsG7VEhrLi2kfcOIYseAXHMmqpfPpaGojZWk4bqedwrOFON2QnLWA1LiI
      mdwtgvDUeHbHLgBGLSYaOiaKILnsw5y/beSZFROFl65dLuUHb/yMUBXoFTau3Gpiw8KkWYv5
      25E4mH+aXS8/R611+hxtUARvvf1zPvroo8kpVrSB8axau4X9+/dTX3aFuSs3o5ylmuIenQDG
      rGY6hmVsmG+gqfLu9EtnjlFZ18zKLTse2MCIAB96LA58hpowxGXQUXMDgLTshWTMk+Mc7uLc
      zSqywtz4R6ezcn4KbreLQWM9FmUYzz6bQUvFNW439sCwmfiM1SSF+VFQcBqAYfMALqDkyiUy
      l64hUu8n3tsWvNroQBd//Pwgt6sa+Q//xz8BcOSrQ+S9+AMqz+wDYN7COXz+yT5yc9JpKq/F
      HRUIeEYCuHHhOJmrnkXrantgnv8DI7f6Yx9u49L5U6j9DXQMuWi6spcCp5ttP3iDpIjAmQl6
      kkcngNPH8nH5hXHixAkaGxsJj0kmJzOFVRu3sWqDmzPH84mJjiRIc7enKyM7i0tllaicQyxa
      dTcBFF86w4DNhcxtx+0bTVTqQsxlpRw9cpiwuDQMMjOR0RNXK7GxMTTXmQgG/Hwnxi1XKKfv
      yoExF0v1E/NEQRfBm2n1kbz1818xbrfyuz37+eHWJZy5VoV5ZB/N1TcJ6lLy1luv8WpEIq3G
      fjLnpNGlNHzzgp8G9kE++uI4Cxf2cLmvnW67hoyECBIj9V/zBRk/ef116lp7cDsbSI0JxCpf
      z3NLw/jTkRKSXt44o+F7dAJ4btdPp34+eeokOZkpNNbVEB6biFYlw+F0PvAdhTYYt/0G4wot
      6nvOy/1Ddp7dvo3m6lLqesHU10tE4hzSM7M5VXiZebnZnCwqITFsDcUlZSTOXcNQ/YMZ/47E
      UB2lNa3kpEQybBtDHyjGcBe80ShFlytYuHQBTvsoLpeLsKQcfvM/JrpqCw9CwrrX0DiHMSv8
      yEjW8vv3C/jZ322e5bgfkSaI3/72twB0VRdRNhhEYqSe5uZmEhMfXspVpdUR4d9Jl28UhpBg
      TKW36W6xERA283W/Fe+88847M77Wv4LzISf1O4KDg8HloOzmDeqb25m7eDlhgb4PtNHIXQRF
      JhDgpwEgJMSATiPn6vWbhMUkoA8IJDwkiKrbN6lt6iB3xQr8A/TotXC1uITo1PkkR4cA4B8Y
      jM9k/U990ETWDwwOJiwyBktXIzcr6giLjMZPq34Ce0PwNk6nEx+fh9e4fjopsZo7OX3mDI3t
      fbz00kv4Tj53uyMoJBK13MG50ye4WdnICzt/QLCfZx4vPr4BGAL9KCsrIzExkZtFhZwoOIdM
      BmVlZYTEpBDop6axqYOli+ej0gSgHP3/27vTuKjuc4Hjv4GBmQEGGfZFQRAl4IZBUDQaV0IE
      E2Oa2ti0n7a3MbdJej/33e2r3vTlfXHvrfnk2oY0Nc1SjcYtgBsiGhdwQcV92Pd92GaYfbkv
      sCrRJM0GTub5vpv/+Z//POfonOds/J8errSYKFyzBL8JfhbgdRXBzGbzZIcgxKQZHR0lONib
      yiWKR5ncnBZCCB8lCUAIIXyUJAAhhPBRkgCEEMJHed1roAEBAV/dSYgfKKVSKb8B8Z2RBCCE
      F5EEIL5LcgtICCF8lCQAIYTwUZIAhBDCR0kCEEIIHyUJQAghfJTXvQV0v+H+Dk6erUahAKU6
      jLw1y/FXQLP+GlcaetmwbvzUqsV7dkBgCB63i/gZs1k4Z+ZDRrVTWnKCgsI8SotLKVhfMDEb
      I8QPVHnJburaB3A5HSxeVUBWRjIlu9+nfcCC0+FgVcHzZCTHYehq4Z2iHbz2n7/D6+bO9bh4
      983/In3VZpbMnX632dLbwP9sP0CULgRlSBS/2vwcZ8qKuaxvIW/DT5g1NZKzFUdJX7wKnWbi
      D8denQBUweEUrl+Pn0LB9coy6ruMhDq6GHRpULqtD66gDmV9wdgBff/+fSycMxOXw0ZLayvq
      EB3xMZEPrNLf04HFFcC0+LGpWp02M02tHcRNTSJEE4jH46azrRWry4/k6YkTPpufEI+6nCfz
      Wa3VgsfF1je3kZXxW57Mfw6tVovHZePNbduZ+YuNHKu8RnxkGJNTHffbqTy6n6jE1AdqArc0
      6FlesIllcxLutNiobTfy+muv8N77H5O0YQ291kCWTMLBH7z8FpBao6G3s5XqC1V0GP1JidUS
      lzSLBRmpD+1vNg6h1+u5eL6K8JhpANTeuo7Z5qTxaiUXbo2f3390qIem9j7a9Jc4ce46LusI
      u/Z8isPp5NCBTzCY7PS0N9LZP8zoUDelZZ9979sshLdRK+HCuSp279pJZu4KAJQ4OVd1ll07
      d5K7Io8AbTSbNhaiCfC+Q5J5oAP9oJKFs+IfWNba2saZY8W898HfaesZeGD5qcpLJITBzr2l
      OCdhXmbv29sP4afww24zY7Z9ca2A+/n7+2OxWPAA8QkJdLU1MzhqobOtY1y/4LAYsrMyWbIy
      H7Ohldba68xbmkdGejrr1+Ry5WY9EVFx2IwGWtp76O3t+R62TogfAIUCPxQMGAz3NSlAocBg
      6JvEwL4tD7v3FvPC8888dGneplf43b//Ky888xQfFv0Js0tFWmIob20rIiUpAV1UJDVNRpal
      6yg9WTPBsXt5AvB4PMQmJLFgYQ5L503nmr7lS/sHacNIS0tjQVY2/sZBLMDxis9YumIN69et
      xv+Lvsdtx+FSoFIFYrFYgLG6BIGBKirKy0mbn8369euJCQv6ghGE8FUelGot2TmLeH7TZrqa
      boLHg1qrI2dRLps2/5ymm9WTHeQ3Zx3G7vbjo+3vsGPfYU4c3kdj5+DdxXa7HYDgKRGkTdUx
      YoMlqwt5/Tcv0zdgZGZkIBHxicSnpDDS3T3h4Xv1M4Daa9XcauzA398Pq81OXsGz6K9VU9vc
      SW1tHR6Pm5xlq+8emA2dzRQXF+N2OUGtIwjQBCo4VnYElZ8TlzJm3PguyxAlJSWMmkzkrswn
      PiqYS/v3caBWjdXu5tkNz3LL2srpExWo1Sr6RyyTsBeEeJRZKdr6Nh61Go/HTVRiGlgH2Pr2
      B6jVGjxuB4lpC+lt1bP/8EluVFfTWVREVtZSnsiaPdnBfzV1GC9v2QJA543TVA/qSInXUVRU
      xJYtWzhbXsKNxm4UuFFHTCP2zjliecl+Fi4vIDRcSc/+t/hjtYdnNr884eF7XUUwIXyZ0WhE
      q/W6d2TEI8qrbwEJIYT45iQBCCGEj5IEIIQQPkoSgBBC+ChJAEII4aO87jVQs9k82SEIMWms
      Viv+/l/0FytCfD1yBSCEED5KEoAQQvgoSQBCCOGjJAEIIYSPkgQghBA+yuveAvq8tuYGbHcm
      0k5MTiXAY6OhuQ0AhVLFjOnTxvW3mIZxK4MIVgeMNXg8dLa34lFqiI+L5vP1XOobGkidMeOh
      3z080Ef/kImEqdNQB3r9rhTie+Fy2qi9XYtCFUJaajIKBThtFm7X1qIKCSc1eRoKwG4xcbu2
      kRlp6fd+n48kDx0dXSQkxN/93FxfiysghBlJCeN6tjToGRi59+birIx5BLjM1LZ0Mzt9JgrA
      ONiHQqMjRD3xxxDvvgJwjXL+4vVxTcNdjdS2Pnx+8YtnT3Bg7ye09JrutLg5duhTeoZMGLpb
      GTDasA+2UnHh5t116hsaHjpWbc05Lt1qwuWwcupMFQAXKo4waP/mm3Pk6JFvvrIQj6ijJQcY
      HLXS03qbt/+2C4CSA3sYtTpovV3N33YdxG0bYeubf8Jqs/B/W7dicjyac1T2tdVR9HYRf/37
      3rttez98l9utPdRdPs3uQ6e+cN1DJcW4FAo+fP9vDPU2se/QKcDD4SPlqFWTcwLp1aetloFe
      YlIzSE29VwGsqbeP2fMXkRSheqD/7AWLiA4L5h+H/5GuBoIS5rBg7r0z/JMHK9F327EZOnhy
      7VrMwwbKy44yaraQs2w1seEhAHT2GJiXu5IIrYZZaWAa6Oaavp4Os4eY2AQyk8Op67XS11rL
      zHmL8Lf0UnOrCf/AIFatWo6/y8aJEyew2l2kzc8m2D1Cfc0fwKEAAAtWSURBVF09HreHhOQ0
      5qYlf6/7ToiJ8vSGHwNgMRqobz8KwIYfvwSA0RBH+9Hz3LrwGUvX/5ScjHhiVFZOV9eSvzht
      0mL+IpqwWF7e8grbt2+/2zZoU7Bx1XIAioqKgGV3lyXNSCMJGO1v5tpj2YQGjqKZksQTT+ax
      Y8cO6q6cZe7StSgnqZSsVycAl78GU/cVDh2qw2L3UFCwjpDwGK5dqOCGy4WfJoz8VUvv9tdo
      NOPW7+vto715mCPddYwMj7B09dPk5ubirjexMjsDAL8ANSvWrEVh6aficgOxS+cDsGTZMo4f
      L8Pi8JCZvYTkhFjmpqWSuvQpdIFg6qmnsqqazZueQ6vxo7T0AusKnma4s5aL1xpRGVt4LHs5
      8WEaDh8+Sn7+U6TObOCpvKcmbgcKMQEsg118uGsfV2828B+//wMAg11N7NpXws2GTn7/hz9w
      rewjkmbHARAdHc2Zy4YvG3LShDxkKm6V28yxk2cIVjqpq2/HDgR+rs/Bg2Wse/4XgBLrSCun
      Tx5FFRJB+7CLxrMfcczhZt2mX5ISO2UCtuIer04AIeGx5OfnA9Chr+ZWcw+ZqWkkJI+dOVQd
      K2XABuEPXgwAoFareGxuFvNSonHbBzly4jqrs8ffw1MHBeOvUIBSOe5+WaBGS37BM3jcTor3
      7iX6zlnO/eZkZqHVBIJjkPa2Do4cPgy4CI2cTt/QEL1Vn3EVGDLacX0H+0OIR5FGF8fLr7yK
      02pi21938G+vvowuLplXXv0tVtMgf93xETnJWoZHRkA3hVGTiaAg76mu99KvX6Pu9k08qlDS
      0pIeOPjbhjsZ8Y8iMnjsucZLP/85tS09uB31zJw6BZPfSgpzotlZcpGU51dPaOxe/QygrUFP
      W3c/bpeD2w1txESGcet6DQPDJuzWUTqH7Wg//69xn7jkNPSXzmKxO2mtq0MXG4NSpWFkYACX
      04n7S767qV7PkNGM2+VC4R+AnwI0mgAMhmGcTudYp39c1gVMISE2nGUrVrF86VISp0aTFBdD
      3IzZ5OWtZeHjs/EHAjxOhs22e+sL4fUsVJ65gM3hxGq14HK5wDLImQtXcTjdWC1mXC4PcxYu
      5kTpPuwOOweOnGbR4xmTHfg/rae7m+kzM1AY21GFTQWgqanp7vJDJYd4uiD/7ucAjZbYECf2
      oHgiIiMwdLXR3dxEaHT0hMfu/8Ybb7wx4d/6LTgc9wq/a0NDaa69ydWbembOy2Za1BRCQ4K5
      XnOJuqYOcp9YToj6Tgawmzhcdpy+YQvDfR30DVtInDaNxLhwzlVV4g6OIXveTPwCgvGz9nPl
      RiNJKUn4A+Hh4WNjKJTopow9A1D6KbhWc4m6xlaycp8gLFhFZEwct66cZ9DiJi4qAv9ADVNC
      NICChPhoLlRV0tk/QvL06SQkTmegrZbLV28SFhVPRFgocbHRnK88izsghIgwqfokHuRwOAgM
      /JKzmkeOEtNAB2Xl5TS09bFx40aCgkMY6KinvLyCtr4RNm7cQIg2nASdkuKDZSxaU0hKrG6y
      A3+oy5UVHD52AoUCrly5QuTUVFzGHopLD2EPiOC5dSvvLktOTgY8GK1uHpuROG6chsZ2chbO
      J0AditLSw5UWE4VrluA3wc8CvK4kpEwGJ3zZ6OgowcHBkx2G+IHw6ltAQgghvjlJAEII4aMk
      AQghhI+SBCCEED7K6/4OICDgUZ4jRIjvl1KplN+A+M5IAhDCi0gCEN8luQUkhBA+ShKAEEL4
      KEkAQgjhoyQBCCGEj5IEIIQQPsrr3gK6n2Okmx3FJ9CFjs2NkpW7gvjIsUnUzp48imHEBkBQ
      WAyrl+V86VglJaUUFhZ8b7GWlR1l7dq87218IR5V5SW7qWsfwOV0sHhVAVkZyVw9f5LTF2/g
      drlYnv8cc1Oi2PnBB4zYXCg1YfzspU0EPqKnpzcunqKipo3X/2UzAB6XjV1//4ghs52IhFn8
      qHDVA+vs//BP+E/NYf2KLM6UFXNZ30Lehp8wa2okZyuOkr54FTrNxB+OvToBeBxWYlNmk5c7
      94FlBpOD9evXj2vrNxjwc9sZdfiREBNOc1Mz0QlJhGjGZlfs7WrHoVCREBsFjNX87ekfJCEx
      mWB1AAMGA2Hh4XS0tpGQlIjLZqa5tYO4qYmEaALp6+5k0GQlOTmZAP+x/709nW1YXH78Y8o9
      l8NKU3MbcdOmE6wOYKjfgDYynK6WNuKSEnFbR2lu6yQhcTpBKnndT3i/nCfzWa3VgsfF1je3
      kZXxW9yBU/jNq6+i8Dh48613CMhKIjzjSV7MmcmN08WcqK4nLzv1qwefYI03LtLr0BLgMt1t
      O7xnJ3OefIbZiZG43Q9OIl936QSqsHja+gYBG7XtRl5/7RXee/9jkjasodcayJJJOPjDD+AW
      UF93B3q9Hr1ej9l2X1kVp+1ue0tHNwCl+z6mtrmLa5XH+aS0HKvdwcFDY3V4R/o7ae0y0Hj9
      HGcu6cFppuZaLW63i32f7MEJXKyspKL8ED1DozjNQ+za8ykOp5O6+kbMgz3UNnfiso2yZ38p
      AJXHD6Jv6WF0qA+zHTwuK3v27MfudFJ6YB9mp4eayirKK47QaTDiGB1g175SnE4HxXt3M2SR
      ugDC+6mVcOFcFbt37SQzdwUAmZmZKICbF08TMW0WSY/Np+HyKc6fP0fVjQ7mzpw6qTF/kZTZ
      C1mZm8n9szY3dRtov3qKv7y7nabO/nH9XbYRjl9uI3/pgyepAKcqL5EQBjv3luKchHmZvT4B
      fB3hcUkszn6cjFnTSZ+XTUZGBroQNQChkfEsfHw+y9YUMNTdAEoN0To19fX1GPt7GLYDTguP
      Pb6chfPTabx5meyVhWSkp7Ngbjqa0AjU2KhvbKGnrxdwM2hVsDx3IbPnZhKsAkNrLQFh8fj7
      +TE1QkNtcy9gI3XOEnIen03zrRpyVq4jPT2Dp5c/znV98yTuLSG+QwoFfigYMIyVevS47Ox8
      78/oB5Rs3rAGm9VKcMhYrY2Q4CCsVttkRvu1mM2jzM5ezs9efJ5d29/BfN9FwIFPPmHDj164
      L2GoSEsM5a1tRaQkJaCLiqSmyciydB2lJ2smPHavvgUEEBWbQFraQ4pHK1UPb/8KHqcNp9uf
      9tsX6XFOoaCgkKqy0jtjBhF1pyi8Wq1m2GIBxj5fPFXBlJkLKFwcRWlpCaB44HJQqVTerfYV
      MW0WsbFTuHJLRXRUKAAqlQrjnTHNZjOBgVFfO34hHi0elGot2TmLyM5ZxLZt24AVfPz+u2Su
      ep7HksaqYJ07eZxl635Fik5J5vQw3j95gV+/sGZyQ/8nhWlDmaLToQr0Y0ZcOGYXBPkBOLHZ
      nRz4+H2wDFLdOEjNvFksWV3IkpV29uw/TGayjlZjIvEpMYzU1ADzJzR2r08AN6+cx9bfDIx/
      CIzNSHFxMfDPPQS2mwYoKSlm1DTKE2sLCHUP0napkoNd9XQ1tzBrxfj+SelZlHx6gJYbasJj
      E0mMjaKy8jT1QWpauvoBBQkRQXyyZx8hIcFYnRA2NQ3tpVvc1ptQACER8ePGnJ6Rxaf79tN8
      TYPVCRueXfDtd5AQk8pK0da38ajVeDxuohLTADtV5y4x4vDnM0AXl0L+mnz+/Jf/JTRUi8lk
      5ie/fGWyA3+o6tPHqL7ZSHV1NUVFReRveJGNzxXy5z/+N1ptEKrwaUQGQFFREVu2bOHFX24Z
      W3GwkaJjjcxPG6sMVl6yn4XLCwgNV9Kz/y3+WO3hmc0vT/j2eF1FMCF8mdFoRKuVcqHiu+FT
      zwCEEELcIwlACCF8lCQAIYTwUZIAhBDCR0kCEEIIH+V1r4GazebJDkGISWO1WvH395/sMMQP
      hFwBCCGEj5IEIIQQPkoSgBBC+ChJAEII4aP+H9s29JLN9s0TAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='table.transfer freq' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
