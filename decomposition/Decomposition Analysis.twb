<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.1008.1759                               -->
<workbook original-version='10.5' source-build='10.5.9 (10500.18.1008.1759)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='12' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='route_level_analysis' inline='true' name='federated.1hcs22b0sjelfs17e15x6081mi6k' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='route_level_analysis' name='textscan.1eomjis1i6i5bm10z8ipe0rk3npv'>
            <connection class='textscan' directory='C:/Users/USDO225024/Documents/GitHub/onboard-surveys/decomposition' filename='route_level_analysis.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1eomjis1i6i5bm10z8ipe0rk3npv' name='route_level_analysis.csv' table='[route_level_analysis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='route' ordinal='1' />
            <column datatype='string' name='survey_name' ordinal='2' />
            <column datatype='integer' name='survey_year' ordinal='3' />
            <column datatype='string' name='weekpart' ordinal='4' />
            <column datatype='real' name='first_after' ordinal='5' />
            <column datatype='real' name='first_before' ordinal='6' />
            <column datatype='real' name='intercept' ordinal='7' />
            <column datatype='real' name='second_after' ordinal='8' />
            <column datatype='real' name='second_before' ordinal='9' />
            <column datatype='integer' name='third_after' ordinal='10' />
            <column datatype='real' name='third_before' ordinal='11' />
            <column datatype='real' name='survey_boardings' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[survey_name]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[survey_year]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_after</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>first_after</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>first_before</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intercept</remote-name>
            <remote-type>5</remote-type>
            <local-name>[intercept]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>intercept</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_after</remote-name>
            <remote-type>5</remote-type>
            <local-name>[second_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>second_after</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[second_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>second_before</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>third_after</remote-name>
            <remote-type>20</remote-type>
            <local-name>[third_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>third_after</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>third_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[third_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>third_before</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[survey_boardings]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_boardings</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
      </column>
      <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
      </column>
      <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
      </column>
      <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[survey_name]=[operator]' />
      </column>
      <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
      <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
      <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
      <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
      <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
      <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
      <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
      <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
      <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
      <column-instance column='[survey_name]' derivation='None' name='[none:survey_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.421702' measure-ordering='alphabetic' measure-percentage='0.578298' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:survey_name:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;SF Muni&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:operator:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SF Muni&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Terminology'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Terminology</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- References to &quot;trips&quot; act on the &quot;trip weight&quot; in the survey;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- References to &quot;boardings&quot; act on the &quot;boarding weight&quot; in the survey;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The &quot;boarding weight&quot; is the number of passengers -- usually fractional -- that the respondent represents;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The &quot;trip weight&quot; is the boarding weight divided by the number of transfers the passenger made;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The references to boardings are often called &quot;unlinked trips&quot;;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The references to trips are often called &quot;linked trips&quot;.</run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontsize='12'>~ end/ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='632' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='chart.boardings v diff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level: Boardings versus Difference</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' />
              <size column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' />
              <lod column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' />
              <tooltip column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Difference:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Pct Difference:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Survey Boardings:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Est. Boardings:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='185' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='chart.transfer freq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
            </column>
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[intercept]' derivation='None' name='[none:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1395552990099406853]' derivation='Sum' name='[sum:Calculation_1395552990099406853:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>44020.848375000001</max>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' />
              <size column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' />
              <tooltip column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Boardings/Trip:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Survey Boardings:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Intercept Trips:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6811602115631104' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='table.oper back-forth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[survey_name]' derivation='None' name='[none:survey_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;Caltrain in 2014&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;Caltrain&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='130' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' value='156' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]' value='144' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk] / ([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]))</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.oper seq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Operator-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='130' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.sequence'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_1395552990096076803:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='122' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.simple seq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_1395552990096076803:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='122' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.transfer freq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Percent Difference' datatype='real' name='[Calculation_1395552990095634434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([survey_boardings]-[Calculation_1395552990095360000])/[survey_boardings]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095634434]' derivation='Sum' name='[sum:Calculation_1395552990095634434:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990099406853]' derivation='Sum' name='[sum:Calculation_1395552990099406853:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='37' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='137' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='384' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='0.875' source-height='30'>
    <window class='worksheet' name='Terminology'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='table.sequence' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='227'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='250'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.simple seq' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='178'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='299'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='chart.boardings v diff'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.oper seq'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='256'>
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.oper back-forth'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='300'>
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.transfer freq' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='266'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='chart.transfer freq' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='286'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Terminology' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='chart.boardings v diff' width='192'>
      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
    </thumbnail>
    <thumbnail height='384' name='chart.transfer freq' width='384'>
      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
    </thumbnail>
    <thumbnail height='192' name='table.oper back-forth' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='144' name='table.oper seq' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACQCAYAAABeUmTwAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAPLElEQVR4nO3de1SV1b7G8W9nSagoVHRUTimK23s5NBakCGsreMvtLtOUE24hNNFSPEpe
      Em+YhrcktqipKQhespB2bi/hJRBEUlmWx8yEPCqkgQaZF1ByrfGeP1giV0FAzebvMwZjwHzn
      nO/LGPNZa873ZTEf0zRNQwhF/cfDvgAhHiYJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkS
      AKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJ
      AITSJABCaRIAoTQJgKgzmdHD0ev1hCSXLDXza2o4I/t6oNfr0etDuH3Y/Gsq4SP74qHXV9Du
      waj34E8pHiWZ0cMZEpFeoqQBT/3leQaMms5bfZpjXVUHeTuZ885GfhsUwZ7J3XlKV3yAL2ZM
      YONvQ4nYM5nudw48UBIAUQ3tCIzbhJ8jUHiN08nhTJ/9Kl8eDCM2xICtpZaj3yaMfmWaXr/M
      r7egc/eSgx8gnZPHgH7dH9rgB5kCiXtl3Zi/9JnFluXesGMa0+IuFh8qmgINJzqz6OfkED36
      IRGkAzuC9MVToOjo4ej1E9h2C9gRZCm/MwUyZycQentq1N2TEaEJZJspc56iqdTV46sZ69kd
      ffH8yUx2QmjxlKu75whCE7Ip0bzouoZH8+NPeyUAomZ0zr6M7HKLtM/jyaykjiHEiDEukHbA
      wDAjRqMRozEEP79NGI1hDAQYGGYpNxJiAC7GMX7wDNLdw9l92MjhnTNpnTSVN0JTyS97gotx
      TBvzMcart0oUjWfwjHTcw3dz2HiYnTNbkzT1DUJTy7TO+oIP425IAERNNeX5rg6QfpyT5UZm
      zR2NWUmawxvMGNmRhjrQPeXJlHc8ubptA/F5JWteZtviDzijD+SjXQcxhhiAo8SsTMPhjRmM
      7NgQHTqe8pzCO55X2bYhnlLNWwxi2sSXJQCi5mwa2QI5XMqtqx4zOXHsCnTuQNuS52nXCSfS
      +O77knUPcqLxImIj/HBpYlmKZ56gqHmp1rTr5ARp31GquYUsgkWN5V+/CrSlydN11WMhN29Q
      tC7YUf5om1I/9WParDsL8KLmNylqrqd88zblSkACIGrsIt99mw3tXqOjTV31aU39BhStC0IM
      VdS1ol7Zm0fW9SlqbllPVINMgUSNmE9u5dNjVrgM7o9jnfX6LB2et4MDqRwxV127fPMOFDU/
      QnWbSwDEvTEXcG5vKP8YE0X+wEUsGtK0DjvX4fr6SDoVbGXW9H9zrqBoGBdeO83e8AAiUqtq
      7srrIztRsHUW0/99jqLmhVw7vZfwgAgqai5TIFEN6UQM0RMBFD8Jnv2v6j0JvleOw1nzWROW
      zlnCCMN73MAK26YdcB/mz2jn6jRfw2dNljJnyQgM790AK1uadnBnmP9oKmr+mOwSKVQmUyCh
      NAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE
      0iQAQmkSAKG0Kj8SaTQaH8R1CPFQyEcihdJkCiSUJgEQSpMACKVJAITSJABCaRIAoTQJgFCa
      BEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKK1Wm+RlRg9nSER66ULLpmS+Eyfj
      3dm2XJuTK/6Ob1Q24IB/zHbGdSxTITkEfVDpbY6tbJvSwd2XiZO9ud1lcoieoAo2Uy5Wrb1m
      xR+OKZcjkbOZHWnL5EML6V36ILknvmBt+Cck/niBvHwT1LPhmede4q2QyfR/9m7D2UTukUje
      W/QpRzOvUIg1du17gFYL59b7aM7OPtr6c3fKTPlntW1T+mrO3cZqW3PKtvheWz7QWfNZv0tb
      PtBZG7j8+/KdJs3RnJ2dtTlJxT1q+Wf3aO+91k1z7rtYM5qqdx3iUXNTO7tjtjbE0E/zWzBN
      83Wepu0tV+f/tOgpU7TVX/2g5V6/ZWmWrX0bM0Hz8pqhJV6rvPdriTM0L6/R2uqD2dpNTdO0
      W9e18weXanU+BdI1bMnLY71pfSuN78q8OXAykfhsB9xcXqKbwY7srw6QUXWPNGzZh+Apr2CX
      9ymfJ9VkB2Xxh3fmU1YeeZ6QuB2sf7c3DhVWcsJ38WICPNtjb2N5tbduRpcR7zO+/T723eXj
      64fi42k/PowAt2ZFW7vWs+EZt6D7swYw514iFztsbEqXn0yMJ9vOQLeO0OVFD6yydpNYdQIA
      0DV1oBlw7qfzdX694g/AyZfFc1/juadrMCv/LYWUU53pXHY6XUKjRo0qLK/bABRe43xaNBNn
      baP+K3MYU2pn4gwOfJWNlceLdAF0zm54WGWxu5oJMF/MJgcr2rR6tk4vWTy6Cq9kcmzXMt72
      W8/TcxczrEnldbuNn0mjtW+zLDWHQgBTPqd3zqyLneJL7iIO2LSi37h1bBnSkcYlq2UksjvL
      in4Te6ADsOlBLzdISP6azDFtcay0/0IupW1h3qytFHQKxLeHrvaXLB5pZ9YMY9iaMwA0bDOY
      4LB19G5tc/dGT/Rm4aZ6hPoNo8f5AgDsXcfXRQDaERi3CT9HgEKunT/O54sm0TfanUWfzMJg
      uWuTkbibLNwY7Xx7ANvg6uYCC/awP9PP0v6OHUF6im/yNGiO65DFfB7oiYOMf+U5BXyGMQBM
      +Xlc+PEw25Z6s7zBm6xaNIjKbgSZMiIJmH2GIQu38057O6xN+Vw4sqmu1wDWNH7WBb/waXhe
      3MaSDSct5Rkk7s4Ckpj1Vz16fdFXvwVpQDp79meW62lgmBHj4e3M87QHky2dPPUy+EUp9Wzs
      cewygAkrNzL+seUs+fJ6JTVPsnLyfnqGzedv7e1KLIID7u+DsIKCG0XfZH5NcpYVA8MOYzQa
      S3wlMe+vkL5nP+UjAOgceGnBR0zqeIaoMYGsOH71fl6ueGQ9gZOTLdnZlyo5fpWrlQydOg+A
      uSCHtFXRJGBPf88uAGTu30M6brzoXPYl3DINSj/AoYuVdKhzYviaaALbZkgIVHcmhqlT17Dr
      WCZXCi1lhVc4tXMmUzfVp39vJ0vhz8T46ovXCaBnmI+J1ZNDSTh1pWgRTCFXTm29D4tgy5Pg
      iWs/5LUuOiCT/XvSwWUwrhWsU+z13WhHBHv3X8Tbu2nFp9A54bcmBnOALyvHBMLqCMZV8JRZ
      PLr2vavn3X1lyvR6y3e9WWhcSO8WA/B13cTqDwJYdDqPfBNgbYdjhz6M3hTF31paqv+8j30Z
      nRm08HYg6tE2IIpNz3zI/GkvE3whHxPW2Dk6y/8GFX8+Z9b4MLPefDaPdKqyrvwxnPiTOcmO
      o3re9a168IP8d2ihOHkHEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkA
      hNIkAEJpEgChNAmAUFqVnwgrKCh4ENchxEMh7wBCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAil
      SQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAKpMSisFgYNTmrId9JeI+quUWSb9z
      IWEZ81ckkPHLdW5Rnydbd8K9z+uM8HalmQ4ghVBDMPEVtG4zdiPrfFqUK08JNRAcD2DLoLBt
      BOnL7C1mTiG0bzDxt4A2Y9m4zofyvYhHkimPoxvmM3+DLRMS5tKrXIVCspIiifh4J8eyrlKI
      NbZtuzFq8kxebW9dSadnifL1I+pc+SO1CICZc5sDGbUOvJfE8M8XnuZx8w0uZiSydWUcSe6u
      eJcclf1DSQ52r373TkP57//6gl0HjxOk71r6zF8n85X9UIa2jyX2Qs1/g7tyDyY5Ofg+dS7K
      KyQrfinB/0yjUZ/ONDFVVOcX9kwP4KPLHoyZvZn5bW2xNuVzZt9SZgROwrRhJUObVdSuFf4x
      yfiXKzfVZgqUxmfrfqDBy2MJeOFpHgfQNaBphwGMi1hUevDXhM4ez54vcvVgGqfKHDp+NBX7
      3n3oWr90edbmURgMoyg1a8nazCiDgdCU4gI2jzJgCE3i8vE45o8egJfBgNeA0awwltiB0jIF
      utNO3Fdn4/j4m44Eb4xlVVBPKhzH3KSB1wK2rAqif1vb4v1+nfoHM8r1BCd+uMdz5sTWfg1w
      IzeP+/Wp4YbuPXHP2UdyqQR8S/Je6OHSvnadp2xk1QkHRizbzleJMfg5pPPp4i3lwiYekFY+
      zAseREf7u01KmuPRuz3lJzr5XL9ug02jezmhiUNRm2sTABeGjeoASYsZ90ECmTfMNe+qMg2d
      6fZCDkmpP94pO5XGQfpg6Fp5s2px92O6jxuODXSga0lPrzaQk0tuLbsVD5gpj5TFY4l+Yipj
      XO6hXU4skaketQmAjpY+EcSEvMITxoWM6PcSr/hPYsWuDC5XlIX4YAwGQ6mvqqcX9vTwfIGf
      DqZxe1bzY2oSBZ496FzzCxd/EoWnPmHS0H8Q03gya2f1wq7aLYte/ev5+tb2LtDjPOM5jg89
      x/H7tTMYt2/m4/A3+TxyIHMjp+Jeci/re10EW9h386DzB4mkXfKhRZMs0g7m4ObflbJ7zguF
      mPJIWfY/vH/gP/Fd8AWvV3r3pxKWV//RU5rV3XOAxxs74eYzk7Vr3qTlpR1s+PLnuum4iQtu
      bY5z4FAeXEoj9ZwXhu4y/NV1hcR5b7LCNJaNsR/e++Av8ervUq9WD8LMmCuY6uiaO+IImMwV
      3seqgRa4e7Xhm0NHyTp0gB/cXHmhkvFv06hxHZ1T/FHlxE5nGRNYNdWdu66XK++AyFQP/F8t
      us9UiwB8zVLvQFbs+oEL134HwHwjk4Sla0my6kBf97p7NNXC3Ys2KdtZsvcbXvRwo2El9eyb
      t8KWi5w+fRkzZm5kprI58kvO1dmViIfrBLFbTAx7q6r5fg6fBBjwjTpbprz0qz/U6kGYK8OD
      sojaEMLb4dlcvgnUf5LWnfoyI2Y0ns/UvOdyWrjQo/kq1v+vOzMXVTb8ga7+hHifYPb7r9Br
      4ZN0Mvjy1uA+tExYW4cXI+6HxDkG5iSWKTMkMgeAXsxNnksvfiH3l1PEDjPwUQV9tPSPJsa/
      FeQkknj6Of7+XqvSFUrM/W97TNM07W4XJv8bVDxqzkaNZJ5uFpG+raqsK38MJ/5kThF/rCtB
      PlUPfpB3AKE4eQcQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0v4f
      XNlvg0l1Kx0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='table.sequence' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='table.simple seq' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='table.transfer freq' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO292Zsb15mn+QIR2Pc1kch9JZOiJGuh5N3tqnK1q1xV3VXT/czcze38GTXP
      XM5lX/flXNSF+5mZrnG7XG23q2xrJcUtmXsmkAAS+74EYkPEXFCiJFqZTJsMksqM90YCE/jO
      iQC+OCe+OL/zc5imaWJjc0lxvugO2Ni8SOwEuIAMBoMX3YWvDXYC2Dyi1WpRq9W4THNi8UV3
      wMZiRg3+0//1/5EKefnBD77H4VGe66+9yuHuFuH0AqP6AfiSyP0O+XKdTCJKq16h2xvyyuuv
      8eD+A2LJFMNWldTcGouzEd77l5t4Y3FSQZGTtkQ64qfUaPL9b3/b0kNRRg3+35+9x7XXruOY
      KIR9IrrDxXGhQDg2xVTYhYZA8aTGVDJCJjtLpdZmfWX+1Jh2AlwKTByCi5s3b/On3/sGv/zg
      DsmQi09ufcSoU+OHNzYw0huEOl1a7TayJLGc8fCL//Y/uPHnP+bBez/DoTkJTy0ACt0hGP0D
      dtpNAr4QZRe89u4PLT8KtzfG7HSEer1Ju15iNu5lbIh40uu0StuUTSfyqE08EqLtNLl99z7X
      3v7BmTHtBLjoCC6S8SjRUJD5mTQffLLN0nSKSmtMMplkYWaK6cVldj/axBsIEQwG8Xk8+IIi
      G9dnObj7CarqYD6bpdVswnKYSuGQpVfWyaRiIAbRVJn56YTlhzKZqIguHw7VJB0P0xuPSWez
      TC9kMQIj7hRGvDqXpiVNuHr9Olv377O+kD41XqPRwGGXQS8eg8GAUCj01HFGvRZbu/tklzaY
      SUU+/VeZ/b06a+u/P63Y3d1lb28Ph8PBX/3VXz11+0/DqNek2BxxdWXh1Pf89Kc/tUcAm9MJ
      RBLceOfxK7v3K3/8n/Ey/PgBApEkVyPJJ77PrgLZnJt2/YSf//zn7OeKAMjdCnuF+pfe861v
      feup25loCr/+5T/z3ge3mJwxP9GkLrdu3+He1u4f1c7GxoY9Aticn3h6hvHoA1aWUvyf/8f/
      zne+8xZjd4Lf/o9/JRBy8z//3d88k3YMXWF3/4hkcsg9p0y5UmP99bc52b+DGJzid//ya157
      9RUcLhemQ0BSNB7c/hjDEFhcTCFJIyb4aPVkfvSjPyEdC35lO9euXbNHAJs/jmtvfZdXVrIA
      pLNziEyeafzpuSUibp1as89iJsYnN2/RHQ7p9Ibc+N6/JexycHVj/dEPOBxLMR2P0OiNWF+Z
      wx1Is5zxs31wfGY79k3wBeRZ3QR/FY1Gg2QqQbvVIxIQGQxa/PQfP+Jv/+4nJCKBZ9KGMdF5
      cP8u3kiapdk0h4UqC1MRjisNUokkDsFF2Cewf1QgPZVmYhg4ceDEpN+p8Itf/obv/vm/xxg2
      WVrfwO85faJjJ8AFxMoEuGiIAKZpMhwOX3RfbJ4RkiS96C58bRDhYenKvmJcLOzv83zYN8E2
      lxrh7//+7//+sxfDZpF//eg+OAV+96tfIBkCmXSS//oP/xnv9Aa3f/VTxmIMURSRhgOG/Tal
      aovywV0ckTkC7i/nk66O2dnZA9FDs1Kk1ZOIRyOMhz1K1RbRkJ+jg30Mp5uxNMSFRrOvEPR7
      AZPjowOa3RFOU0f0+HE6vvog2q0WXr+fU/586VBVFY/HY20jpsEHH37MzEwWh8NB+fiQvcMc
      fr+f+/fuMdYhHg1b1ny3USZXaZOKR1GlHnfuPaBUbWIqfXaPTvC7YXPzAbgChAO+U+P83u2x
      NBqCQ6DRaLJw9dMftC/E8YNP6LXbGEdbVDvzyPUcY2lExOXG8KikEH4vuCr1kDQDMOl1e/hj
      HkzAIbjRlBGN0iHd8QTPeMTBzjZX1pbJlRuUTwK8cX2NZqvHwuoV8rt3CGRXaRzvkp2dp9sf
      4vUHUId9Jk4X416LufVrzGVSz+r82jyBiaYwgYffJw+rQ/rEieDxc219ma1cFRZmLGtf9AWQ
      CjlgAbc/wvUrS2zlW1QaXeaSQfqqC8Fp0uv1mUnHTo3zpUu2Q/AylYqx9eAB4cQUr26sPXyT
      GKB3sk1q8SruQIhKfp+xquP1+XEJwqnrx53uINc31qlXyyyuXWUyGqADXt/DjBRdHtKZLP1u
      j0w2SzwaZGZ+iYDXBThYv3aNcm6PcCJNNjNFIjNDIuiiO5RxidBotnG73STTGabTT37sbfPs
      ENw+fO7PL3qzS2tcnQ2wtX3A/XyDG29ct7T9YPBhyVWVhgxljZ3dAzaurqJpKoORxMTQubK+
      RrPZPDOOpWVQY6JTOC6QmVtg2K5hugKk4hHqlRKd/ojp2QVG3TrhRAZj3EcxBYKBIMZEw+/z
      US0XcXrDxENeqs0u8WgYv99HpVTAH02BMkSaiCRCblp9hekp61ckfh14HmXQ8aDD1t4RwWiS
      RCSAV4TjWo/l6Rhb+zkiiQyri9aNALn9Ldr9MV6vl6X1q+jjEeFwmFGvRaUzZjYVZmc/x/rG
      Nfwe16lx7OcAFxD7OcD5satANpcaSxbDmaaJoihWhLY5B6qqIsvyi+7G1wLLVoMahmFVaJsn
      YBiGff7PiT0FsrnUWJoApmlwUjxmJKs0qifkCieASbmY5+DggIH0dNOk8Xj86P/b7fap7+u2
      29jXw2dPu93iizWUcrmMaRrsbW0yGKuWtt2qnbCzn3tUgh/02qi6Qb9dZz9XwDRNjvZ26I3O
      ngpaKohRxyMiiRSFfA6p32Fh7RrgIJud5rDQRB9UuV/QificDCWFbCZNpVwmkUrTaLbJTiXQ
      nV5UaUCvXSeSSNPv9QhE4sxnpyhXyjgNHdEfRRkPER0GxVKVRDxGazAgEIhgyD0arRFvfzNu
      5aFeOgxV4jfvfcRf/+THOIB+s8w//fo9fnJjHWKz3L9zh29/6x3L2nf7wxgnmzT6WZJ+B/du
      fcjq23/G4fY+8aCL25/U6SsTopmzdQqWjgCCIFAsFFleWeXNG+/SqZygfeHvqqIyv7hEo17D
      6YBOr4ehSfQkHZdjQr/fR9F0ZFlG8PgJChNGyoSJrj+K4ff76ff7mMBwOGSidKm3RkzPLzPR
      ehh4mUpGrTzMS4nT7WdxdvrR63ubW7hNhcpgQr+Sxxv4ahXWM0MfM1BMMCY4RTeL87OAiUd0
      0B1p9Lp9Xn3tVfa2t88MY+kIMB4NcDgFOp0OyqiHGAzjAnAIxKIhPIIPUXSyOD9PZ6QQ9HnR
      lBBhv5u+6iIcT9KoVXH7QsQCXsLRMNH+GL/fD0AsFkMZDfD7/USCPgxNxhuMEY4m8LkEiKUZ
      9TrIutNeJ/SMkYdd+oMBh/kS8bCf7/6bP2OhWCQdC3J/N0c8bu2IW6/XET0+WsU9jMk8J/Ue
      Hq1IPB6lPVB59fXX2NnaZGF5/cw4ljwIM03zS/Nzm+fLaDQiEHg26qyLjl0FsrnUWDYFcrlO
      X39hYy2iKNrn/5xYkgAOh8P+Al4gdgKcH3sKZHOpeU4JYCBJZ98U20JumxeBpWXQdiVPoSWT
      nU5ytL1HfDpLIhoiFPBSKZU4bgyIijLO2CIeQyKViFBpDlhfW0E4Tf9o81IwUUb8w//zc/6X
      //h3OB0OJnKf//Sf/4H/7X/9D9zfPkDWHXzvW28/l75oyoh797bojjUW0iHu3n3A/NIyijHB
      F0jw1qunl0ItHQHC8TQuNKSxTCI1DYZKq91Ck0eYgpf5+XmmplLMz80CcHSYQ5X6dEf2StKX
      HcET4Orq4qPX//Tf/olwwEVXceJGxeN7fmVYlydA0OvA5faysrbO3MpVsokQmqIgiGdf4y1N
      AEWWEcSHN2M+vxefz4ffJZAvVvAGgvTbdVzeEOWTIj6fj6mpFJ5AmKDPvoF72RkPOpTLZfaO
      CjSbTf7yb/8jN956i6BTRXV4cLue3+2lMurSl018HheN8gnLVzbAKeD3+fG4fl+r/kVsRdgF
      xFaEnR+7CmRzqbFMEWYLMl4chmEwmTzb3ZovKpZVgWxJ5ItDVVX7/J8Tewpkc6mxE8DmUmNt
      GVQasL+/z3GpQiF3SL5YBkzKhUM++vgT+kOJUqmEpql0O21GkkSpVGYy0SkcHyNLQ+r1Kh9/
      dJP+YEg+f4w+se8tXgYMVeJnv/glxqdFRNOc8F/+y//NRBnxs1/8yvL2y4UDbt39XOxSOtzk
      wzt77Gze4XfvfUCjUeOTWzfZPSqdGcfSJ8EeXwDB1NAUiVarTTAQRDeyZGdmGU+8tEqHdCSF
      ZruD4XDjM0eMFZVWpw1OF7HQCBWRRCKJz+VAlTpsHzp5dX3Oym7bnAOn289M+vOd+PY27xFK
      pBA8AaZTp+/F+azIzi9Sa20BIA87dMcmhiYjGQZX55P0NYGJMkR/wvXS0gSQhn0mDhf6xCDg
      dTPRVSbm5436gyFkh4dE2I8mBDGkJoJqkkzEqZTy1DsinlCMQbfJsT5CNQWwqxsvBfKwy/7+
      Pr5wgkTEj+h2Uy9tcXw8y8HBAaFYitXFWcvaPz7c4+DggHQyiuEU0eQhhVKf5Yyf+/tdFlfc
      CN4Q42EPOL0ftiLsAnKZFGGtRp1oMo3wRy4ds21Sbb7WJFLpp/q8XQWyudRYpgj7bOcGm+fP
      ZDKxz/85sUcAm0uNnQA2lxpLb4LNic7h4SHRVJbJuMtIc7K8MMOo16ZQrpHOzpGIPNxBTJEl
      nKIXl/gwJ1utFomE7fjy0mIafPDhTd599wYOh4NS/oCTapNX3niLg/u3Sc4uM5t5PrZVqtTj
      /vYBE4eLVMhFezRhMRsnXzjBG0ryypWlUz9raQLUCwf0VRO/PCCXK5JMT2MCpUqDqxtX2dvZ
      o1l3EnSa6KKAaTqptwd43U7a9TqvvPYNuq0aiinSreZZ3XidfqeF7vRwbX3Zyq7bPIHHTfIS
      iTjFQoEHH75HT/QReI7+BJ+b5DUo11pMxzyMhSgzyT6K7+wd6iydAoluN+lMlk6rSTgSx2NK
      SDpg6siygm6AMZkwGo0efsDhZHF5FZ/HRSabxetQ6PRHNFsdpmbm8TpUekOJVqdjZbdtzsHj
      JnmaIbA0G2MoG8zNr9AoF59rfx6a5K2zNJ9h66CAzyNwXBswPxU583PWKsJMk8pJkXByGtQB
      AwUyqTjGRCOfy2G6AiSCLmTdQTQSBBw4RRe6qqArErrDxaDXIxqP4xKceD0uiqUKsUSccNDi
      zVe/xrwIkzznRKHUHHL92jqFw12i04tEA15L+/A5Jv3+gHA4TLWURxMCzKYjDOUJoTM8gsGW
      RF5IbEnk+bGrQDaXGtsk7wJim+SdH9sk7wJim+SdH3sKZHOpsTQBjIlO7vCAZqdPv9Ok2nho
      ZNdt1Tk4OEBStFM+qNHuDh69HI3sfUNfRr5oktdv19nc3sfkYYWo3bf2OzMNnXan9+kLk9z+
      LoOxyqjXZmc/h6ZK3L19m3q7f2YcSxNg3KvTHKiEAj50RPqNKjpQaTRZXV3FoQwolkpUazW2
      trap1Spsb29Tb3XodHvsPnhArdmh2+tSzB+ytbXNSfGIrb0jbGXki+Uzk7zPSogOl48IXQ5r
      A+5vfcz+trXPAaonBXb2jgBoFHeZ+BNs3r3DQFIQlTb3723SkSESPlsXYWkC+GPTvPXqGrlc
      jmG3SSwzgwho4xEHB4fg9lM8LoAmMb24htJrYzhFdFUFnPj8Hgb9AePxGEU3ySbCNDoDFhYX
      EezJ2wvlcZM8EZ3GSKe6fZvxRKRcr1va/vTc/KMHcbGpObrlPP2RhDLqovtSvPHWDb771jp3
      7tw/M46lSyEUaUCxXCWZStGqV9F7XeKxCMlkCknRGQ2HvPaN11BkjdbJEYlUFrnRwBcM4TVg
      0BnjD/jxupyYmkxjqLA0P4fb/vW/cB43yRt2m5i4eP2bNwi6VU7K1k6Bjg8PGA773PvkJlNL
      a7gEB6+99g2apX10VKoVJ+VKlaXlK2fGsSWRF5DLJIl8WuxLqc2lxjbJu4DYHmHnxzbJu4DY
      CXB+7CmQzaXmhSeAMdGQFfXc79dVBVW3N8eyeTZYWgYd1HLczvdYX54nE/Xyq9/dZGl5BY9T
      o9sbIYgC0UiIo+MT5uaXEI0xfdkgEfbTlxR8ooliuhAmY1TcJEMe9ncPmF67Qr9RZWp2jk6l
      SigWo9mok5lbJBayd0N4HjxuklfKH1A42sMbn6Pd6xEOR3nnjeuWtX+4s0mhdMLVt75HTBjx
      24/u4w1FcWl9hrJGNjNFrdMllpzl9Y3T1YPPZQRwOj9vxuF0MhorJEIi6UyWar1Jdm4Jqd9G
      13VqhTzFcpX0dIb+SGZhNoOu6xznjyk32qwszVMr5pAnDuq1E3oDjfGgzeLaVeqVszdCtXl2
      PG6Sl0jEGcoGg3aPb37/Ozh0a8vgsVgUfyRNKuKj32my9vo7eJwTBG+Q168ssJdv8O3vfg91
      2D4zjqUJILi8eNzCw5WJDoGA34dpGPh8ftweP6IgEAiG6DROcLr9DIdD/IEgkWgcr9uF6DA4
      PikzGo4JBgP43QKFSoN0ZhrRYZJIpkilk8TjcQ53twmGz9Z/2jw7HjfJq1VrRBMxFpZmuPWb
      9whEn27Htiextb2D6DTJ721hBNMUdz7B7Y/idzvYyjf45ptrfPjb35KYXjgzjq0Iu4BcJkWY
      JElPtQnYC78JtrF5Gp52BzzbJO8CYpvknR/bJO8CYpvknR97CmRzqbETwOZSY+mDMHnUp1iu
      4vL4UKQBBm6uXF2l36pT7QyZS4YpVJsEQxHq5RIz2SlaA5lsdoZYOEC/VaXa05mfTuD2elFk
      mX63TTg+hTJqI+sCkZAft+hk4hBpVsskMzO4RTuvrcZQJX7+6/f58Y/+BKfDQTG3T7VWIxTL
      0Ou3iSayXFl+thZJxkTjo9/9mtU3f8igvEe12WHj9Rv4zBG37u0SCMcQ9AF9SWd9bYlCoUgg
      ljmzH5YmgDcQIuTvMhHcDDoqmjnBAUQTaVq9AePRCNMh0Op0iMYTxCNBugo0qmVi4TWa3RGC
      aSIPO7Q7MOz3aPZGuCptvKKB1+unP+iSjfg4rrUZyRq1rsQb188WQdg8PY+b5M3OL1CvN5DH
      Q0CgVDx+5gngFFwszk6j6gZzCws02n1E0QmqwVgeYwouTKnHZKIxMtznMsmz9FLZrR5zVG7j
      MA0MHDhNA82AZq3MSekEwR/G5TSJxeKo4yGd/kMhhyAImBOFbrfHeDRAc4XIH+XITk8R8HuZ
      n5/FHwggCgKmrpArnODyBfB7fczPZq08JJtP+cwk7yBXotVq8a+//AUT0cdMNovLCVOZ6ScH
      +QPRlRHbO3scHOX51X//BU6Xl0GzQrnRQvT40fUJ8wtziN4Qgjb6gkne6diKsAvIZVKE2SZ5
      Npca2yTPxuYpsE3yLiC2Sd75sUcAm0uNnQA2lxrLE6BZKVBr9zk+3OcgV8AERr0229vbtHrD
      R+9TZAntC0XbVqt1ZlxzonGwv0uucAKY7G5toclDOkOZk2KJzyIp0oCdnR0a7d4TY7ZazT/y
      KC8hpsEHH3z0aG/QcuGQDz74gGq1xq2bN7l9f8fS5g93N3nvt7+hNVSYaGNufvQh+7kSR3tb
      fHTzNv1ekw8++JBq6+wyqKVVIF0ZUW+1cflAGo4wTBmDZ2OSt7G6wPz8PLuHBWonx/QGEq16
      mZ2KTNyt06wVmVp7A0HqoE0g6BV5/4NbXF3MsFdXmI75UaUBrlAcXZYQXG4qJ0Xe/c4PCHjs
      4tiTeNwkLzU9jzLsIDsCXF2cItcTnhDh6Vi5cp1u70MiAQ9Kt8ZgrKI2Goh6n7EyoXwiImvG
      p707HUtHgHazhT7RqDcaiJ4APsF8uKntMzDJMycaewcFrl1dp9cbMOi1cIgeZmay+AIhVpdm
      0ScGwXCc9ZVZdg8KZLNZIkEfa1evMeo2cYhuRp0mysQkHImTncnid1v7xV0UHjfJO9rdxJ1c
      YTEd4MFhmVdWrH0gKXUquCPTGOMhzXaL1OwKmjxAnQhkkyFMb4x3375O7vDwzDiWK8KMiYas
      GowHbTSnl0wy9kxM8oJeF0dHeQRPkMWFGcajEV6/n3KpSCSWwO8R0HEhmBrHhRNmFhYZ95qY
      gptAKIJoqORLVRYX5yjm82RmF+g1q4ST01/6Yr+OvAiTPHnYodbqs7x+DcHUCIfDlrY/GvTx
      BMNU8gckZhY5OdollllA1IdUOzKrC1Ns7x6yvrGBRzz9+7QlkReQyySJfFrsKpDNpcY2ybuA
      2CZ558c2ybuA2CZ558eeAtlcap6bSd542OOk2gAemuTl8kUmxuf3358tn253Tt/Jq93uWNld
      mz+QL5rkqeMB97f2GPZa3L59m6NC+bn1wzR09rY3aXaHqOMh2zv76JrKzs4u+uTsGs/zMcnz
      e9ja3ns0LFcaTWbTIXL5Y07qLconJe7d+YRyrUmn06FeLvJga5fj3CHbW5s02h22t7c5Lj2/
      k2pzNo+b5HV6Q7IBlWJf5LWNZXq90fPry2TC9OwC25v3+fD936HqOvfv3iUzneTO/e0zP/tc
      TPKODvZwB6MYozaS/tAk7+Pbm2RSccayiiwrJNIZslNJAAbDIb1WA0lzsDiXoVGtEM/MEw74
      rOyuzR/A4yZ5hipxInnZmIuw+WCfV15Ze259EVwe6uUCHn8AU/SRDpg4fSEO9g+R5bOLMc/F
      JC81s4g+6iBpXnwiTM8tEo+EaHYGOJQBpuglFfZSrrWIxWKMeh3iqTSJRAzR7WFmbo56pYTH
      b+3DFZvz87hJXn8wZKIadIdjUtNZ3M/x7lKVevRGCtFokkg6TLHeY2Uhy1Fe4vXXXznzs7Yk
      8gJymSSRT4tdBbK51NgmeRcQ2yPs/NgmeRcQOwHOjz0FsrnUvBQJMNFVFFV70d2wuYRYWgYd
      9+vc36uwtLyIoA+5vVPkT7//TW7ffB9/JEUmGeOk2iCbjtHsDSjkyrzx5qtUKxWyc3OUC0U8
      gTDLi892iz2bp+dxk7zC4S7lk2N80Tk6/R6rq6vMZpKWtX+4u8m9u5t85y/+lnTIw9atf6Uw
      8BMThwxljcXFRaqNNqtXNpiKn14+t3QEEN0BIiEP9WqJu5t7aPIQ9VPdrwMHR7kcTBQa7R7e
      QIi52QV6jQbLV69SKx0heCNMtOf3RNHm/DxukhePx5i4ogjjNg6vi8PDI0vbX15dZ2b5CumQ
      h2Zpj618g1ajhvNTk7y7d7dwiE6OjnJnxrE0AXRdwzQhGEnywz/5Ietrq7hFJ9HkFOtrK8xO
      T+EQvSRiMTwuL5rSwxcKsL+1RTA2hc/nxuez97d5GXncJO/B1hZet0B6cQkkmVgsamn7reoJ
      i2tXqeT2MCML/Id//5e89soVAp+a5H33u29jqBqxWOzMOLYi7AJymRRhtkmezaXGNsmz+T1s
      k7zzY5vkXUBsk7zzY0+BbC41dgLYXGos1wMUTqq4fUHUYRvRH2VpfoaD3QcgeJjKTOPxeJno
      CoauoZkC8qBLNJ3g5LhJZjqOPOpjugIkY7YW4GXiNJO87OI6xXyeuaUVZqYSTw70DJAHLe48
      OCAYTbKxlOEf//k3fOv1dXLVJon0HKsLp9s1WToCeHwBBFNDm0xwOgVkScLgYekKHMjDDp2h
      QrlcZHNzm4nUIndS48H2LrXSMd2RjKZpbG5uYt9Sv1x8lUme0+GkcrDPxOOm0Wg8t76MR31k
      zaRUKrC1vUckGsbQNWRZRnqRijBp2GficKHLY3xuF0pP4vOHDiYOh4OTQg6XC1LpKXy+AH7f
      iOxMipajybDfpd9sPDTDs7KjNn8wn5nk+cIJEhE/m7fex5eYIZsOsF9qIzxH9WookSFWbmNE
      QriECSfHOfwuJ35/AE2WzvysrQi7gNiKsPNj3wTbXGrsBLC51NgmeRcQ2yTv/NgjgM2lxk4A
      m0uNpWVQdTzk6LhEJJ5EGXbRTBerKwsUc/vEM4vogzqyGCYT//LSXUUaoOEh6Hdb2T2bp8E0
      +ODDm7z77g0cDgflwiGFcoNrr7/B0YO7JGeXLVWE5fa3qXdGfOPNNxFNhdu37xFJzeBQOtQa
      Xabn5ug0G3hDSV65snRqHEsTQHB5mZ/JUGr0SAYDFCptDKDX76E5qujDJnhlyvkDBLcXUx6g
      GxOCwSA9RSDqNZHGKn6vg5Hhx+dQGCs6Hq+XTCKM4YuTCtvbJb4ITjPJu/fee0i+AAGL/QkS
      iTjFkyqSouNR+49M8r79zht0+x+ysLCIHxnFFz8zjqVTIHXUpdgYsLY4izcURTRUJgY4RA+G
      3EP0+DF0lVA8jegwCYRizGfTBMMxZmaytJsNBJcLUXRzZX2dVrOB6HYzm0mwk6+TCNk//hfF
      aSZ564tJ5uZXaJSLlrZvCl6moj5arfYXTPKGDFsn+GIzCBgc1wbMT0XOjGOpIkwe9TguVQlF
      Ezg0CYcnSCYVZzQaIjjAIboxDBj1mriDcUSHgSg4cApuKpUyyXiUWqtPJhXD5fGjSj3qXYmo
      X6DeU1hbmrOq619rXrRJXq92THR6kWjAa1n7tZM8rZFBUDRIzn5ukucTDLzBME5DZShPCD1h
      Q2VbEnkBuUySyKfFrgLZXGpsk7wLiG2Sd35sk7wLiG2Sd37sKZDNpcZakzxdJZ/LISkag26L
      VncAgCINyRdKaJqKouq/97nRoIOiGWDojBXVyi7aPAVfZZJnmDqbd25TqjaffYOmSTG3T73d
      Q+q32d47wjS/bJLXrJa4c28TVdPY291FnZw9ElqqB9AUGX2ik8sXcIpeRENl8cpVdu7dYWlt
      nXa1QLVnkE0G6A9GpNIp6o0Wfo+AyxvEUEccVXpcWZii2+sTj8cp15oEAiHWVhaedbcvDM9D
      D2CoEv/1F//CX//kxzgdDmrVCqLSothWOG6o/Nn33ybgfbZbtOvqiE5fY29vm5WlRcadCu7M
      BpmQE0lWuXN3E1MdkF2+BsMGwcwcpWKNt9843SbJ0hHA5XZTr9XxeFyIbjdul8DEhKvXNigc
      7WMKPmZn5xgrGstzU+RyeeaW1/G74PC4TDYzxczcHCNJZv3KMp16nWg6i9P8/SW/Uf0AAAv2
      SURBVFHD5vlymkne6994k7/50xvcu3P72bcpuDk+3Gbj1W+gSj1kd4KZuO9LJnnf++GPEMYN
      jhsSkWgUh3n2ruOWSyJVfUI4lmQy7qGJQTxOqFbriJ4Aqak0J6UK8WiEfLXDq69ep3h8QCQW
      481Xp+nJBo5xn2Qqzv7+MTNLS+iIGPYSoRfOaSZ51WqFcqXK7MLyM29TGw/QDIF6rYY+HKKZ
      Cpt3WsSzc49M8nL723RlgW/duM79W7dY2Xj1zJi2JPICYksiz49dBbK51NgmeRcQ2yPs/Ngm
      eRcQOwHOjz0FsrnUvPQJoMgSpz3LUOUxqv75NuAPd5yzsTk/FpvkNdkv1Mlms/TbdfLFCt//
      Nz/g/q338fmDiIEETm2IL5zAkHs4XD46nTaBUByvU6UvmwQEhWj2Cs3CFvHZKxwfbjGTTlHr
      jphJJxBxsHuwhz8cp1I4IByfRu5X8SXm8TsUcAeZy05ZeZiXktNM8sKpLPu5Fm++cY256ZRl
      7Z/kd9ktdPmT778L8MgkL0gXVTdYXL1Cs17FFAO8++b1U+NYOgL0Wk1weag3W6QTUdY2XkV0
      gMsXZGF2mnG3zkm9S78/oNkdkI768IaTaNKQwWBAtXCM8hVX/8PDQ7TxmHa7TalQIJFdQhr1
      iSTSeJ06oXia+dksbo+bfr9vb6toAY+b5Imik3h2jfm5OWYzYeq1mqXtzyyuEAl4AGhX8hTq
      A1qNKk53gLmpODid+AIRrq6d/TzC0hEgPb9Mf/+ASCKLPNGZzTzUZ0aDAQrlJtmFFfz1EzyB
      AMlYCKfoJRZ2YXpFhv02iXSaWCyBS4BIPIVbdJBOpRGSCZo9iUg0hiAK5HO7yIbA0tw0ouPh
      l1EuV3CZCoFAAIeVB3lJGQ869PsD9o8KJCIBev0BkmrS97kxJjpTGWutbXP7ewwGPe7c/IiZ
      K6/z43+bpVBuo42atAYqaVViPB7RG4yIhE7fI+lrrwgzJhrHxwUyswv43Jbm89cGWxF2fr72
      CWDz+9gJcH4sU4Tpur1g7UWh6zqadvYiMJuHWDZnsL+AF4edAOfnpX8OYGNjJS9NAijymMmT
      7kZshZjNM8basolpsnPvI5yRBdIBg7v7ZX7w7bcp5g6Q1AmC24c6bOP2h3EZCsOJQHZ6mm6r
      hicYwys6HpY13S6KpRMSsQi7x1XmstM4tBGSZjKXTVMsVsjOZqmUK0xlMtSqVaKRKP5oHE0a
      EIvFLD3My4ihSvz0H/+Z/+lv/+aRSV6lXCC2+DaD0oeMWeA77155tm1ONH7733/G6rt/gdI4
      YPP+Ft/80V8T80zY3NymO9ZZm41xeDJgYy7E1nGXjWtXScdPN1i0dASoFvZpj3XajQr3tw/R
      lSGqbqDocOXKFRwTjUQijizLmA6R5YUszU4PY2JQLBRpdzoMuh2OSzVWFrJ0BxJT07Po8ghV
      h7BX4GA/B44J5ZM6mqahKg+N9USPm3J+n75kz4WtwOn2s778uSw1HotiiFEcvSPKXYV6vf7s
      2xRcrK+tALC4vEp2cY1UyIPo9hPwOHG5vMwsLBPyuQlEkoR8TsqV6pkxLR0BMgvrJKYyNHo6
      2ak4+eMCbtFJNORjd3eXQCSGKg8RnA5cHh9Op4BbMBmMdAJ+P+gKLVlnairJwWEOhzdC0OPC
      4fACDtwuB1NTHjr9EalklHargaxM8LhFZMVAVxTmV6zbofgyIw+7VCqVRyZ5R3s7eLxBkvMb
      /OXVFXZ3e8+8TV0ZcZg/QRx68CTdzK9eoXZ8wMQXYaCYeD0u8gd7VKsVUskIJuYTy8FfC0WY
      NOhyUmkws7CE33O+nDV0lXK9zWw288z68XXhMinCJEl6Kjecr0UC2PxhXKYEeFosmwI5nS9N
      genS4XQ67fN/TixThHm91m2NbXM2mqbZ5/+c2JcJm0uNnQA2lxprTfKkHlt7x8zMzTHoNKi3
      erz9zg0Od+5hmgLRdBa53yEzO4c2HtFu1PEmsgREk+Ggj9PlRjccpKJ+qs0+6USE4UjC73XT
      6o+JBVwMVUjFghxt34XEKqvTUSsPyeZTJsqIn/3yd/zkL370uSKsWmX+6g0GlXuMHdN84xXr
      tq88ye9x0tF459NtD4v79ygO3ATMLoPxhMxUikajTmZhg6WZxKlxLE0Aw5gguESkscLi4gI6
      ZUQHSKMRfn+IsTxGV8fc27yPNlS5uj7N5tYDXr+6SHOkow3ruF1uyvkeqqrRbIQIJmapVQss
      r6xy86PfoRtOmuk089ksDduS4LkheALMZD7/Yc0tLlKt1VEGDSYeL1LTWn32zOIy1dYmAPKw
      TWdsYKgysi4jDWXabhGny0v+aP/FJYCJE5fgZCyPOSkMmJl7KE9z+YJcuXadbu2YXUlHwCQ9
      NY3gFEjGo/QHQ3z+EG4C6IpGOBLBcLjxukwSqQSVQY2TaoNIJII3lMCpjykUSnim1q08HJsv
      MB502Nvdwx9JkowEuPfxb/ElZjGNCaNum5OaE9iwrP3c/g67u3tMpaIYThFNHnJc7DKX9OBx
      i8RTGTr1MtnZs0chWxBzAblMgphmvUYsNYXwR+pebQ2hzdeaZPrpdvywq0A2lxrLJJH2UogX
      hyzLCILw5Dfa2COAzeXGTgCbS42lCaBIA/b396k32xznDnmwtYNuwnjYZW9vj+H4y/LGfqdO
      f/xlAUu70/7Sf21eEkyDjz+++cgkr1rM8fHHH9NsNfnkk0/Il6zdGa7XrLB7WABgoo25fetj
      CuUGhcNdPr51m163yccf3aTe7p8Zx9IqkMcXwCWANJZZWFzk4DCP6IBcucHa+jqdSpEH+RF+
      n4dSoczMdJye3CTgc6NIYxBFht0WcwtLHB0e8vpb7xAJ2Iu8XgYMTWWCAxNwAInMLMqogzTx
      4hVN+v0+YN2erKLPj1Q8BuZplfOEplcp5Xe4ceNt+r3bVMpVZN144raY1o4AikJ2ZpbhYECr
      ekJiaubhH0wdWVEYDCWys7Noikx2bpFoOMjM7ByGOqbV6eJye0imp8hms2SmM4T9Hiu7a/MH
      4HR78bk+v9HO72/hSiyTCsDy+gadVsPS9j/TO6jjEb7kPEojx0g12X1wl+mV68zMzPD2G9c4
      PsqdGcdSQYyuKRSLJ0zNzMFEe6TcMSY6pWKJqZkZGtUqU9lpdHWCSzAplWsPnSG7TTSHh5DX
      SX88wWWqiP4IITsJnsjzEMTIwy7b+zmC0STxsB952KXe7jO/sEi5VGB+5Yqlo/Xx4Q7tvozX
      62F+eZni4SELq+vUCvt0Biora8sUj4usXrmCRzy9ImYrwi4gtiLs/NhVIJtLjWU3wR6PPVV5
      UWiaZp//c2KZJNJ+EvnicDqd9vk/J/YUyOZSY2kCmKZB6TjHcKzSazeo1FsAdJo1dvcPGA6H
      SMMBg08tkmy+XrRarUcPwlSpz93NHQzTZH97k87AmiLIoNtG0Qw0ecjmg52H+8maE7bv3+Xw
      +ASAUqkEQK9ZYzA+ey9Zi58ED4kkp8gf7aMj0q2V0YCTWp0ra6toow7DkcRgMKTV63D31m1u
      3rzFnTt3qVXKPHhwn2q1woc3b1EqFti8f5/2QLayyzbnZKKM+PVv3n/0oKnVHTITULj1IE9y
      ZpHNO5888zaNica9m7+jOdR577e/QdV1DAPUYZvdfJl4PE6tsM+v37vFRJX44P1/oVg9e4c6
      SxNAFEWO83lW168y6DSIZ+dwAdp4yN7+ISNJ+sKO0Cb+YJxIKEzM76TcGrKxsUanWiOWnqXf
      biK4BFTF1j2+DAieAEvz049em9qIouTjzbUUm3fv8uY77z7zNp2Ci+WlhwovQ/AwExHIlVu4
      gkn+3U/+nAd3Pube1j661OH99z/AdIqUq2fvUWrpUghp2MfhFGi3mkiyitbpkIxHmZlfJp2e
      YthrYgpeMEzcxgRHAGCC4NCJCm52dnLMrSyjmSK+2BL5kxp+v70U4mXgq0zyDNWkUDhB9Hqp
      VGqsLs480zZ1ZcRxpYNrfMy1tSXylTZhT4GKz6ScOyIzt8Lq4gyFQoH5+XnG/SbDie/MmLYk
      8gJymSSRT4tdBbK51NgmeRcQ2yPs/NgmeRcQOwHOjz0FsrnU/P8X/12lEcsIOgAAAABJRU5E
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
