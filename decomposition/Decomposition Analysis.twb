<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.1113.2050                               -->
<workbook original-version='10.5' source-build='10.5.10 (10500.18.1113.2050)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='12' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='route_level_analysis' inline='true' name='federated.1hcs22b0sjelfs17e15x6081mi6k' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='route_level_analysis' name='textscan.1eomjis1i6i5bm10z8ipe0rk3npv'>
            <connection class='textscan' directory='C:/Users/USDO225024/Documents/GitHub/onboard-surveys/decomposition' filename='route_level_analysis.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1eomjis1i6i5bm10z8ipe0rk3npv' name='route_level_analysis.csv' table='[route_level_analysis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='operator' ordinal='0' />
            <column datatype='string' name='route' ordinal='1' />
            <column datatype='string' name='survey_name' ordinal='2' />
            <column datatype='integer' name='survey_year' ordinal='3' />
            <column datatype='string' name='weekpart' ordinal='4' />
            <column datatype='real' name='first_after' ordinal='5' />
            <column datatype='real' name='first_before' ordinal='6' />
            <column datatype='real' name='intercept' ordinal='7' />
            <column datatype='real' name='second_after' ordinal='8' />
            <column datatype='real' name='second_before' ordinal='9' />
            <column datatype='integer' name='third_after' ordinal='10' />
            <column datatype='real' name='third_before' ordinal='11' />
            <column datatype='real' name='survey_boardings' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>route</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[survey_name]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[survey_year]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekpart</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekpart]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>weekpart</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_after</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>first_after</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[first_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>first_before</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>intercept</remote-name>
            <remote-type>5</remote-type>
            <local-name>[intercept]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>intercept</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_after</remote-name>
            <remote-type>5</remote-type>
            <local-name>[second_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>second_after</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>second_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[second_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>second_before</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>third_after</remote-name>
            <remote-type>20</remote-type>
            <local-name>[third_after]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>third_after</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>third_before</remote-name>
            <remote-type>5</remote-type>
            <local-name>[third_before]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>third_before</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>survey_boardings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[survey_boardings]</local-name>
            <parent-name>[route_level_analysis.csv]</parent-name>
            <remote-alias>survey_boardings</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[usr:Calculation_1291970208981024770:qk]&quot;' value='Percent Difference' />
        </aliases>
      </column>
      <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
      </column>
      <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
      </column>
      <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
      </column>
      <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[survey_name]=[operator]' />
      </column>
      <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
      </column>
      <column caption='Simple Route' datatype='string' name='[Calculation_475974197276512256]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='right([route],LEN([route]) - FIND([route],&quot;___&quot;)-2)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
      <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
      <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
      <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
      <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
      <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
      <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
      <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
      <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
      <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
      <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
      <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
      <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
      <column-instance column='[survey_name]' derivation='None' name='[none:survey_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.432432' measure-ordering='alphabetic' measure-percentage='0.567568' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:survey_name:nk]' type='shape'>
            <map to=':filled/circle'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;SF Muni&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:operator:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caltrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SF Muni&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Missing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AC Transit&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Terminology'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Terminology</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The &quot;boarding weight&quot; is the number of passengers -- usually fractional -- that the respondent represents;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The &quot;trip weight&quot; is the boarding weight divided by the number of transfers the passenger made;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- References to &quot;trips&quot; are summaries of the &quot;trip weight&quot; in the survey;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- References to &quot;boardings&quot; are summaries of the &quot;boarding weight&quot; in the survey;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The references to boardings are often called &quot;unlinked trips&quot;;</run>
            <run>Æ&#10;</run>
            <run fontsize='12'>- The references to trips are often called &quot;linked trips&quot;.</run>
            <run>Æ&#10;&#10;&#10;</run>
            <run fontsize='12'>~ end/ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='632' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='chart.boardings v diff'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level: Boardings versus Difference</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;BART in 2015&quot;' />
              <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' />
              <lod column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' />
              <tooltip column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Difference:&#9;</run>
                <run bold='true' fontcolor='#000000' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Survey Boardings:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&gt;</run>
                <run indent='2880'>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16' indent='2880'>Est. Boardings:&#9;</run>
                <run bold='true' fontsize='16' indent='2880'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-transparency' value='185' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='chart.transfer freq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
            </column>
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[intercept]' derivation='None' name='[none:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[route]' derivation='None' name='[none:route:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1395552990099406853]' derivation='Sum' name='[sum:Calculation_1395552990099406853:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>44020.848375000001</max>
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' />
              <size column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' />
              <tooltip column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Boardings/Trip:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Survey Boardings:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontsize='16'>Intercept Trips:&#9;</run>
                <run bold='true' fontsize='16'>&lt;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.6811602115631104' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='table.oper back-forth'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[survey_name]' derivation='None' name='[none:survey_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1395552990096076803:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;AC Transit&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;Caltrain&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='130' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' value='156' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]' value='144' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk] / ([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]))</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.oper seq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Operator-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1395552990096076803:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;BART&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;Caltrain&quot;' />
              <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='130' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' value='46' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.sequence'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Simple Route' datatype='string' name='[Calculation_475974197276512256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([route],LEN([route]) - FIND([route],&quot;___&quot;)-2)' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_475974197276512256]' derivation='None' name='[none:Calculation_475974197276512256:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_1395552990096076803:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='122' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' value='38' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' value='296' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.simple seq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Simple Route' datatype='string' name='[Calculation_475974197276512256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([route],LEN([route]) - FIND([route],&quot;___&quot;)-2)' />
            </column>
            <column-instance column='[Calculation_1395552990095491073]' derivation='Avg' name='[diff:win:avg:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' from='0' ordering-type='CellInPane' to='0' type='WindowTotal' window-options='IncludeCurrent' />
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_475974197276512256]' derivation='None' name='[none:Calculation_475974197276512256:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[diff:win:avg:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_1395552990096076803:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:operator:nk]' member='&quot;SF Muni&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='122' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' value='236' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='table.transfer freq'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Route-Level Decomposition&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='route_level_analysis' name='federated.1hcs22b0sjelfs17e15x6081mi6k' />
          </datasources>
          <datasource-dependencies datasource='federated.1hcs22b0sjelfs17e15x6081mi6k'>
            <column caption='Estimated Boardings' datatype='real' name='[Calculation_1395552990095360000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[intercept]+[first_before]+[first_after]+[second_before]+[second_after]+[third_before]+[third_before]' />
            </column>
            <column caption='Difference' datatype='real' name='[Calculation_1395552990095491073]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]-[Calculation_1395552990095360000]' />
            </column>
            <column caption='Survey' datatype='string' name='[Calculation_1395552990096076803]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name] + &quot; in &quot; + str([survey_year])' />
            </column>
            <column caption='Is Survey Name Operator' datatype='boolean' name='[Calculation_1395552990098423812]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[survey_name]=[operator]' />
            </column>
            <column caption='Boardings per Trip' datatype='real' name='[Calculation_1395552990099406853]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[survey_boardings]/[intercept]' />
            </column>
            <column caption='Simple Route' datatype='string' name='[Calculation_475974197276512256]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='right([route],LEN([route]) - FIND([route],&quot;___&quot;)-2)' />
            </column>
            <column caption='First After Trips' datatype='real' name='[first_after]' role='measure' type='quantitative' />
            <column caption='First Before Trips' datatype='real' name='[first_before]' role='measure' type='quantitative' />
            <column caption='Intercept Trips' datatype='real' name='[intercept]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990096076803]' derivation='None' name='[none:Calculation_1395552990096076803:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1395552990098423812]' derivation='None' name='[none:Calculation_1395552990098423812:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_475974197276512256]' derivation='None' name='[none:Calculation_475974197276512256:nk]' pivot='key' type='nominal' />
            <column-instance column='[operator]' derivation='None' name='[none:operator:nk]' pivot='key' type='nominal' />
            <column-instance column='[weekpart]' derivation='None' name='[none:weekpart:nk]' pivot='key' type='nominal' />
            <column caption='Operator' datatype='string' name='[operator]' role='dimension' type='nominal' />
            <column caption='Route' datatype='string' name='[route]' role='dimension' type='nominal' />
            <column caption='Second After Trips' datatype='real' name='[second_after]' role='measure' type='quantitative' />
            <column caption='Second Before Trips' datatype='real' name='[second_before]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1395552990095360000]' derivation='Sum' name='[sum:Calculation_1395552990095360000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990095491073]' derivation='Sum' name='[sum:Calculation_1395552990095491073:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1395552990099406853]' derivation='Sum' name='[sum:Calculation_1395552990099406853:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_after]' derivation='Sum' name='[sum:first_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[first_before]' derivation='Sum' name='[sum:first_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[intercept]' derivation='Sum' name='[sum:intercept:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_after]' derivation='Sum' name='[sum:second_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[second_before]' derivation='Sum' name='[sum:second_before:qk]' pivot='key' type='quantitative' />
            <column-instance column='[survey_boardings]' derivation='Sum' name='[sum:survey_boardings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_after]' derivation='Sum' name='[sum:third_after:qk]' pivot='key' type='quantitative' />
            <column-instance column='[third_before]' derivation='Sum' name='[sum:third_before:qk]' pivot='key' type='quantitative' />
            <column caption='Survey Boardings' datatype='real' name='[survey_boardings]' role='measure' type='quantitative' />
            <column caption='Survey Name' datatype='string' name='[survey_name]' role='dimension' type='nominal' />
            <column caption='Survey Year' datatype='integer' name='[survey_year]' role='dimension' type='quantitative' />
            <column caption='Third After Trips' datatype='integer' name='[third_after]' role='measure' type='quantitative' />
            <column caption='Third Before Trips' datatype='real' name='[third_before]' role='measure' type='quantitative' />
            <column caption='Weekpart' datatype='string' name='[weekpart]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095491073:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095360000:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:intercept:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:first_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:second_before:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_after:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:third_before:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' filter-group='7'>
            <groupfilter function='member' level='[none:Calculation_1395552990096076803:nk]' member='&quot;SF Muni in 2017&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Calculation_1395552990098423812:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' direction='DESC' using='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' />
          <filter class='categorical' column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:weekpart:nk]' member='&quot;WEEKDAY&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</column>
            <column>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='137' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990095634434:qk]' value='p0.0%' />
            <format attr='text-format' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:Calculation_1395552990099406853:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' value='38' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]' value='48' />
            <format attr='width' field='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]' value='228' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hcs22b0sjelfs17e15x6081mi6k].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk] / [federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk])</rows>
        <cols>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Terminology'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='table.sequence' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='227'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='250'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.simple seq' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='178'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='299'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1291970208980934657:qk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1291970208981426179:qk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='chart.boardings v diff'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='300'>
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.oper seq'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='256'>
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.oper back-forth'>
      <cards>
        <edge name='left'>
          <strip size='210'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
          <strip size='300'>
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[:Measure Names]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:survey_name:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='table.transfer freq' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='194'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' show-all='false' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_475974197276512256:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='chart.transfer freq' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='radiolist' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]' show-all='false' type='filter' />
            <card param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.1hcs22b0sjelfs17e15x6081mi6k].[sum:survey_boardings:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990096076803:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:Calculation_1395552990098423812:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:intercept:qk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:operator:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:route:nk]</field>
            <field>[federated.1hcs22b0sjelfs17e15x6081mi6k].[none:weekpart:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Terminology' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='chart.boardings v diff' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='chart.transfer freq' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='table.oper back-forth' width='192'>
      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
    </thumbnail>
    <thumbnail height='190' name='table.oper seq' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='table.sequence' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='table.simple seq' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='table.transfer freq' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
